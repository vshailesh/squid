m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.17'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.17], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.17])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/cond.m4:12: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/depend.m4:26: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thus:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/depout.m4:11: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  AS_CASE([$CONFIG_FILES],
          [*\'*], [eval set x "$CONFIG_FILES"],
          [*], [set x $CONFIG_FILES])
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`AS_ECHO(["$am_mf"]) | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`AS_DIRNAME(["$am_mf"])`
    am_filepart=`AS_BASENAME(["$am_mf"])`
    AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles]) || am_rc=$?
  done
  if test $am_rc -ne 0; then
    AC_MSG_FAILURE([Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  If GNU make was not used, consider
    re-running the configure script with MAKE="gmake" (or whatever is
    necessary).  You can also try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).])
  fi
  AS_UNSET([am_dirpart])
  AS_UNSET([am_filepart])
  AS_UNSET([am_mf])
  AS_UNSET([am_rc])
  rm -f conftest-deps.mk
}
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/depout.m4:64: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" MAKE="${MAKE-make}"])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/init.m4:29: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.65])dnl
m4_ifdef([_$0_ALREADY_INIT],
  [m4_fatal([$0 expanded multiple times
]m4_defn([_$0_ALREADY_INIT]))],
  [m4_define([_$0_ALREADY_INIT], m4_expansion_stack)])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
             [$0: two- and three-arguments forms are deprecated.])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifset([AC_PACKAGE_NAME], [ok]):m4_ifset([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
# Variables for tags utilities; see am/tags.am
if test -z "$CTAGS"; then
  CTAGS=ctags
fi
AC_SUBST([CTAGS])
if test -z "$ETAGS"; then
  ETAGS=etags
fi
AC_SUBST([ETAGS])
if test -z "$CSCOPE"; then
  CSCOPE=cscope
fi
AC_SUBST([CSCOPE])

AC_REQUIRE([_AM_SILENT_RULES])dnl
dnl The testsuite driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This
dnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl

AC_REQUIRE([_AM_PROG_RM_F])
AC_REQUIRE([_AM_PROG_XARGS_N])

dnl The trailing newline in this macro's definition is deliberate, for
dnl backward compatibility and to allow trailing 'dnl'-style comments
dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/init.m4:166: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/lead-dot.m4:10: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/maintainer.m4:16: -1- AC_DEFUN([AM_MAINTAINER_MODE], [m4_case(m4_default([$1], [disable]),
       [enable], [m4_define([am_maintainer_other], [disable])],
       [disable], [m4_define([am_maintainer_other], [enable])],
       [m4_define([am_maintainer_other], [enable])
        m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])
AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])
  dnl maintainer-mode's default is 'disable' unless 'enable' is passed
  AC_ARG_ENABLE([maintainer-mode],
    [AS_HELP_STRING([--]am_maintainer_other[-maintainer-mode],
      am_maintainer_other[ make rules and dependencies not useful
      (and sometimes confusing) to the casual installer])],
    [USE_MAINTAINER_MODE=$enableval],
    [USE_MAINTAINER_MODE=]m4_if(am_maintainer_other, [enable], [no], [yes]))
  AC_MSG_RESULT([$USE_MAINTAINER_MODE])
  AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])
  MAINT=$MAINTAINER_MODE_TRUE
  AC_SUBST([MAINT])dnl

])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/make.m4:13: -1- AC_DEFUN([AM_MAKE_INCLUDE], [AC_MSG_CHECKING([whether ${MAKE-make} supports the include directive])
cat > confinc.mk << 'END'
am__doit:
	@echo this is the am__doit target >confinc.out
.PHONY: am__doit
END
am__include="#"
am__quote=
# BSD make does it like this.
echo '.include "confinc.mk" # ignored' > confmf.BSD
# Other make implementations (GNU, Solaris 10, AIX) do it like this.
echo 'include confinc.mk # ignored' > confmf.GNU
_am_result=no
for s in GNU BSD; do
  AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
  AS_CASE([$?:`cat confinc.out 2>/dev/null`],
      ['0:this is the am__doit target'],
      [AS_CASE([$s],
          [BSD], [am__include='.include' am__quote='"'],
          [am__include='include' am__quote=''])])
  if test "$am__include" != "#"; then
    _am_result="yes ($s style)"
    break
  fi
done
rm -f confinc.* confmf.*
AC_MSG_RESULT([${_am_result}])
AC_SUBST([am__include])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/make.m4:42: -1- m4_pattern_allow([^am__quote$])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/missing.m4:11: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/missing.m4:20: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  MISSING="\${SHELL} '$am_aux_dir/missing'"
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/options.m4:11: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/options.m4:17: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/options.m4:23: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/options.m4:29: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/prog-cc-c-o.m4:12: -1- AC_DEFUN([_AM_PROG_CC_C_O], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
AC_LANG_PUSH([C])dnl
AC_CACHE_CHECK(
  [whether $CC understands -c and -o together],
  [am_cv_prog_cc_c_o],
  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i])
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
AC_LANG_POP([C])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/prog-cc-c-o.m4:47: -1- AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/rmf.m4:12: -1- AC_DEFUN([_AM_PROG_RM_F], [am__rm_f_notfound=
AS_IF([(rm -f && rm -fr && rm -rf) 2>/dev/null], [], [am__rm_f_notfound='""'])
AC_SUBST(am__rm_f_notfound)
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/sanity.m4:11: -1- AC_DEFUN([_AM_SLEEP_FRACTIONAL_SECONDS], [dnl
AC_CACHE_CHECK([whether sleep supports fractional seconds],
               am_cv_sleep_fractional_seconds, [dnl
AS_IF([sleep 0.001 2>/dev/null], [am_cv_sleep_fractional_seconds=yes],
                                 [am_cv_sleep_fractional_seconds=no])
])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/sanity.m4:28: -1- AC_DEFUN([_AM_FILESYSTEM_TIMESTAMP_RESOLUTION], [dnl
AC_REQUIRE([_AM_SLEEP_FRACTIONAL_SECONDS])
AC_CACHE_CHECK([filesystem timestamp resolution],
               am_cv_filesystem_timestamp_resolution, [dnl
# Default to the worst case.
am_cv_filesystem_timestamp_resolution=2

# Only try to go finer than 1 sec if sleep can do it.
# Don't try 1 sec, because if 0.01 sec and 0.1 sec don't work,
# - 1 sec is not much of a win compared to 2 sec, and
# - it takes 2 seconds to perform the test whether 1 sec works.
# 
# Instead, just use the default 2s on platforms that have 1s resolution,
# accept the extra 1s delay when using $sleep in the Automake tests, in
# exchange for not incurring the 2s delay for running the test for all
# packages.
#
am_try_resolutions=
if test "$am_cv_sleep_fractional_seconds" = yes; then
  # Even a millisecond often causes a bunch of false positives,
  # so just try a hundredth of a second. The time saved between .001 and
  # .01 is not terribly consequential.
  am_try_resolutions="0.01 0.1 $am_try_resolutions"
fi

# In order to catch current-generation FAT out, we must *modify* files
# that already exist; the *creation* timestamp is finer.  Use names
# that make ls -t sort them differently when they have equal
# timestamps than when they have distinct timestamps, keeping
# in mind that ls -t prints the *newest* file first.
rm -f conftest.ts?
: > conftest.ts1
: > conftest.ts2
: > conftest.ts3

# Make sure ls -t actually works.  Do 'set' in a subshell so we don't
# clobber the current shell's arguments. (Outer-level square brackets
# are removed by m4; they're present so that m4 does not expand
# <dollar><star>; be careful, easy to get confused.)
if (
     set X `[ls -t conftest.ts[12]]` &&
     {
       test "$[]*" != "X conftest.ts1 conftest.ts2" ||
       test "$[]*" != "X conftest.ts2 conftest.ts1";
     }
); then :; else
  # If neither matched, then we have a broken ls.  This can happen
  # if, for instance, CONFIG_SHELL is bash and it inherits a
  # broken ls alias from the environment.  This has actually
  # happened.  Such a system could not be considered "sane".
  _AS_ECHO_UNQUOTED(
    ["Bad output from ls -t: \"`[ls -t conftest.ts[12]]`\""],
    [AS_MESSAGE_LOG_FD])
  AC_MSG_FAILURE([ls -t produces unexpected output.
Make sure there is not a broken ls alias in your environment.])
fi

for am_try_res in $am_try_resolutions; do
  # Any one fine-grained sleep might happen to cross the boundary
  # between two values of a coarser actual resolution, but if we do
  # two fine-grained sleeps in a row, at least one of them will fall
  # entirely within a coarse interval.
  echo alpha > conftest.ts1
  sleep $am_try_res
  echo beta > conftest.ts2
  sleep $am_try_res
  echo gamma > conftest.ts3

  # We assume that 'ls -t' will make use of high-resolution
  # timestamps if the operating system supports them at all.
  if (set X `ls -t conftest.ts?` &&
      test "$[]2" = conftest.ts3 &&
      test "$[]3" = conftest.ts2 &&
      test "$[]4" = conftest.ts1); then
    #
    # Ok, ls -t worked. If we're at a resolution of 1 second, we're done,
    # because we don't need to test make.
    make_ok=true
    if test $am_try_res != 1; then
      # But if we've succeeded so far with a subsecond resolution, we
      # have one more thing to check: make. It can happen that
      # everything else supports the subsecond mtimes, but make doesn't;
      # notably on macOS, which ships make 3.81 from 2006 (the last one
      # released under GPLv2). https://bugs.gnu.org/68808
      # 
      # We test $MAKE if it is defined in the environment, else "make".
      # It might get overridden later, but our hope is that in practice
      # it does not matter: it is the system "make" which is (by far)
      # the most likely to be broken, whereas if the user overrides it,
      # probably they did so with a better, or at least not worse, make.
      # https://lists.gnu.org/archive/html/automake/2024-06/msg00051.html
      #
      # Create a Makefile (real tab character here):
      rm -f conftest.mk
      echo 'conftest.ts1: conftest.ts2' >conftest.mk
      echo '	touch conftest.ts2' >>conftest.mk
      #
      # Now, running
      #   touch conftest.ts1; touch conftest.ts2; make
      # should touch ts1 because ts2 is newer. This could happen by luck,
      # but most often, it will fail if make's support is insufficient. So
      # test for several consecutive successes.
      #
      # (We reuse conftest.ts[12] because we still want to modify existing
      # files, not create new ones, per above.)
      n=0
      make=${MAKE-make}
      until test $n -eq 3; do
        echo one > conftest.ts1
        sleep $am_try_res
        echo two > conftest.ts2 # ts2 should now be newer than ts1
        if $make -f conftest.mk | grep 'up to date' >/dev/null; then
          make_ok=false
          break # out of $n loop
        fi
        n=`expr $n + 1`
      done
    fi
    #
    if $make_ok; then
      # Everything we know to check worked out, so call this resolution good.
      am_cv_filesystem_timestamp_resolution=$am_try_res
      break # out of $am_try_res loop
    fi
    # Otherwise, we'll go on to check the next resolution.
  fi
done
rm -f conftest.ts?
# (end _am_filesystem_timestamp_resolution)
])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/sanity.m4:161: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_REQUIRE([_AM_FILESYSTEM_TIMESTAMP_RESOLUTION])
# This check should not be cached, as it may vary across builds of
# different projects.
AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
am_build_env_is_sane=no
am_has_slept=no
rm -f conftest.file
for am_try in 1 2; do
  echo "timestamp, slept: $am_has_slept" > conftest.file
  if (
    set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
    if test "$[]*" = "X"; then
      # -L didn't work.
      set X `ls -t "$srcdir/configure" conftest.file`
    fi
    test "$[]2" = conftest.file
  ); then
    am_build_env_is_sane=yes
    break
  fi
  # Just in case.
  sleep "$am_cv_filesystem_timestamp_resolution"
  am_has_slept=yes
done

AC_MSG_RESULT([$am_build_env_is_sane])
if test "$am_build_env_is_sane" = no; then
  AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi

# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
AS_IF([test -e conftest.file || grep 'slept: no' conftest.file >/dev/null 2>&1],, [dnl
  ( sleep "$am_cv_filesystem_timestamp_resolution" ) &
  am_sleep_pid=$!
])
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/silent.m4:11: -1- AC_DEFUN([_AM_SILENT_RULES], [AM_DEFAULT_VERBOSITY=1
AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
dnl Delay evaluation of AM_DEFAULT_VERBOSITY to the end to allow multiple calls
dnl to AM_SILENT_RULES to change the default value.
AC_CONFIG_COMMANDS_PRE([dnl
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
esac
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
])dnl
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/silent.m4:69: -1- AC_DEFUN([AM_SILENT_RULES], [AC_REQUIRE([_AM_SILENT_RULES])
AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/tar.m4:23: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])

# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'

m4_if([$1], [v7],
  [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],

  [m4_case([$1],
    [ustar],
     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.
      # There is notably a 21 bits limit for the UID and the GID.  In fact,
      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343
      # and bug#13588).
      am_max_uid=2097151 # 2^21 - 1
      am_max_gid=$am_max_uid
      # The $UID and $GID variables are not portable, so we need to resort
      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls
      # below are definitely unexpected, so allow the users to see them
      # (that is, avoid stderr redirection).
      am_uid=`id -u || echo unknown`
      am_gid=`id -g || echo unknown`
      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])
      if test x$am_uid = xunknown; then
        AC_MSG_WARN([ancient id detected; assuming current UID is ok, but dist-ustar might not work])
      elif test $am_uid -le $am_max_uid; then
        AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi
      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])
      if test x$gm_gid = xunknown; then
        AC_MSG_WARN([ancient id detected; assuming current GID is ok, but dist-ustar might not work])
      elif test $am_gid -le $am_max_gid; then
        AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi],

  [pax],
    [],

  [m4_fatal([Unknown tar format])])

  AC_MSG_CHECKING([how to create a $1 tar archive])

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_$1-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        AM_RUN_LOG([$_am_tar --version]) && break
      done
      am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x $1 -w "$$tardir"'
      am__tar_='pax -L -x $1 -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
      am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
      am__untar='cpio -i -H $1 -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_$1}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
    rm -rf conftest.dir
    if test -s conftest.tar; then
      AM_RUN_LOG([$am__untar <conftest.tar])
      AM_RUN_LOG([cat conftest.dir/file])
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
  AC_MSG_RESULT([$am_cv_prog_tar_$1])])

AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:/usr/local/Cellar/automake/1.17/share/aclocal-1.17/xargsn.m4:12: -1- AC_DEFUN([_AM_PROG_XARGS_N], [AC_CACHE_CHECK([xargs -n works], am_cv_xargs_n_works, [dnl
AS_IF([test "`echo 1 2 3 | xargs -n2 echo`" = "1 2
3"], [am_cv_xargs_n_works=yes], [am_cv_xargs_n_works=no])])
AS_IF([test "$am_cv_xargs_n_works" = yes], [am__xargs_n='xargs -n'], [dnl
  am__xargs_n='am__xargs_n () { shift; sed "s/ /\\n/g" | while read am__xargs_n_arg; do "$@" "$am__xargs_n_arg"; done; }'
])dnl
AC_SUBST(am__xargs_n)
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:62: -1- AC_DEFUN([LT_INIT], [AC_PREREQ([2.62])dnl We use AC_PATH_PROGS_FEATURE_CHECK
AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
AC_BEFORE([$0], [LT_LANG])dnl
AC_BEFORE([$0], [LT_OUTPUT])dnl
AC_BEFORE([$0], [LTDL_INIT])dnl
m4_require([_LT_CHECK_BUILDDIR])dnl

dnl Autoconf doesn't catch unexpanded LT_ macros by default:
m4_pattern_forbid([^_?LT_[A-Z_]+$])dnl
m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl
dnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4
dnl unless we require an AC_DEFUNed macro:
AC_REQUIRE([LTOPTIONS_VERSION])dnl
AC_REQUIRE([LTSUGAR_VERSION])dnl
AC_REQUIRE([LTVERSION_VERSION])dnl
AC_REQUIRE([LTOBSOLETE_VERSION])dnl
m4_require([_LT_PROG_LTMAIN])dnl

_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])

dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

# This can be used to rebuild libtool when needed
LIBTOOL_DEPS=$ltmain

# Always use our own libtool.
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
AC_SUBST(LIBTOOL)dnl

_LT_SETUP

# Only expand once:
m4_define([LT_INIT])
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:100: -1- AU_DEFUN([AC_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:100: -1- AC_DEFUN([AC_PROG_LIBTOOL], [m4_warn([obsolete], [The macro 'AC_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:101: -1- AU_DEFUN([AM_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:101: -1- AC_DEFUN([AM_PROG_LIBTOOL], [m4_warn([obsolete], [The macro 'AM_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:621: -1- AC_DEFUN([LT_OUTPUT], [: ${CONFIG_LT=./config.lt}
AC_MSG_NOTICE([creating $CONFIG_LT])
_LT_GENERATED_FILE_INIT(["$CONFIG_LT"],
[# Run this file to recreate a libtool stub with the current configuration.])

cat >>"$CONFIG_LT" <<\_LTEOF
lt_cl_silent=false
exec AS_MESSAGE_LOG_FD>>config.log
{
  echo
  AS_BOX([Running $as_me.])
} >&AS_MESSAGE_LOG_FD

lt_cl_help="\
'$as_me' creates a local libtool stub from the current configuration,
for use in further configure time tests before the real libtool is
generated.

Usage: $[0] [[OPTIONS]]

  -h, --help      print this help, then exit
  -V, --version   print version number, then exit
  -q, --quiet     do not print progress messages
  -d, --debug     don't remove temporary files

Report bugs to <bug-libtool@gnu.org>."

lt_cl_version="\
m4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl
m4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])
configured by $[0], generated by m4_PACKAGE_STRING.

Copyright (C) 2011 Free Software Foundation, Inc.
This config.lt script is free software; the Free Software Foundation
gives unlimited permision to copy, distribute and modify it."

while test 0 != $[#]
do
  case $[1] in
    --version | --v* | -V )
      echo "$lt_cl_version"; exit 0 ;;
    --help | --h* | -h )
      echo "$lt_cl_help"; exit 0 ;;
    --debug | --d* | -d )
      debug=: ;;
    --quiet | --q* | --silent | --s* | -q )
      lt_cl_silent=: ;;

    -*) AC_MSG_ERROR([unrecognized option: $[1]
Try '$[0] --help' for more information.]) ;;

    *) AC_MSG_ERROR([unrecognized argument: $[1]
Try '$[0] --help' for more information.]) ;;
  esac
  shift
done

if $lt_cl_silent; then
  exec AS_MESSAGE_FD>/dev/null
fi
_LTEOF

cat >>"$CONFIG_LT" <<_LTEOF
_LT_OUTPUT_LIBTOOL_COMMANDS_INIT
_LTEOF

cat >>"$CONFIG_LT" <<\_LTEOF
AC_MSG_NOTICE([creating $ofile])
_LT_OUTPUT_LIBTOOL_COMMANDS
AS_EXIT(0)
_LTEOF
chmod +x "$CONFIG_LT"

# configure is writing to config.log, but config.lt does its own redirection,
# appending to config.log, which fails on DOS, as config.log is still kept
# open by configure.  Here we exec the FD to /dev/null, effectively closing
# config.log, so it can be properly (re)opened and appended to by config.lt.
lt_cl_success=:
test yes = "$silent" &&
  lt_config_lt_args="$lt_config_lt_args --quiet"
exec AS_MESSAGE_LOG_FD>/dev/null
$SHELL "$CONFIG_LT" $lt_config_lt_args || lt_cl_success=false
exec AS_MESSAGE_LOG_FD>>config.log
$lt_cl_success || AS_EXIT(1)
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:814: -1- AC_DEFUN([LT_SUPPORTED_TAG], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:825: -1- AC_DEFUN([LT_LANG], [AC_BEFORE([$0], [LT_OUTPUT])dnl
m4_case([$1],
  [C],			[_LT_LANG(C)],
  [C++],		[_LT_LANG(CXX)],
  [Go],			[_LT_LANG(GO)],
  [Java],		[_LT_LANG(GCJ)],
  [Fortran 77],		[_LT_LANG(F77)],
  [Fortran],		[_LT_LANG(FC)],
  [Windows Resource],	[_LT_LANG(RC)],
  [m4_ifdef([_LT_LANG_]$1[_CONFIG],
    [_LT_LANG($1)],
    [m4_fatal([$0: unsupported language: "$1"])])])dnl
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:917: -1- AU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:917: -1- AC_DEFUN([AC_LIBTOOL_CXX], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_CXX' is obsolete.
You should run autoupdate.])dnl
LT_LANG(C++)])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:918: -1- AU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:918: -1- AC_DEFUN([AC_LIBTOOL_F77], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_F77' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran 77)])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:919: -1- AU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:919: -1- AC_DEFUN([AC_LIBTOOL_FC], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_FC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran)])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:920: -1- AU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:920: -1- AC_DEFUN([AC_LIBTOOL_GCJ], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_GCJ' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Java)])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:921: -1- AU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:921: -1- AC_DEFUN([AC_LIBTOOL_RC], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_RC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Windows Resource)])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:1244: -1- AC_DEFUN([_LT_WITH_SYSROOT], [m4_require([_LT_DECL_SED])dnl
AC_MSG_CHECKING([for sysroot])
AC_ARG_WITH([sysroot],
[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],
  [Search for dependent libraries within DIR (or the compiler's sysroot
   if not specified).])],
[], [with_sysroot=no])

dnl lt_sysroot will always be passed unquoted.  We quote it here
dnl in case the user passed a directory name.
lt_sysroot=
case $with_sysroot in #(
 yes)
   if test yes = "$GCC"; then
     lt_sysroot=`$CC --print-sysroot 2>/dev/null`
   fi
   ;; #(
 /*)
   lt_sysroot=`echo "$with_sysroot" | $SED -e "$sed_quote_subst"`
   ;; #(
 no|'')
   ;; #(
 *)
   AC_MSG_RESULT([$with_sysroot])
   AC_MSG_ERROR([The sysroot must be an absolute path.])
   ;;
esac

 AC_MSG_RESULT([${lt_sysroot:-no}])
_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl
[dependent libraries, and where our libraries should be installed.])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:1589: -1- AC_DEFUN([_LT_COMPILER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])
   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
   lt_compiler_flag="$3"  ## exclude from sc_useless_quotes_in_assignment
   # Insert the option either (1) after the last *FLAGS variable, or
   # (2) before a word containing "conftest.", or (3) at the end.
   # Note that $ac_compile itself does not contain backslashes and begins
   # with a dollar sign (not a hyphen), so the echo should work correctly.
   # The option is referenced via a variable to avoid confusing sed.
   lt_compile=`echo "$ac_compile" | $SED \
   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
   -e 's: [[^ ]]*conftest\.: $lt_compiler_flag&:; t' \
   -e 's:$: $lt_compiler_flag:'`
   (eval echo "\"\$as_me:$LINENO: $lt_compile\"" >&AS_MESSAGE_LOG_FD)
   (eval "$lt_compile" 2>conftest.err)
   ac_status=$?
   cat conftest.err >&AS_MESSAGE_LOG_FD
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   if (exit $ac_status) && test -s "$ac_outfile"; then
     # The compiler can only warn and ignore the option if not recognized
     # So say no if there are warnings other than the usual output.
     $ECHO "$_lt_compiler_boilerplate" | $SED '/^$/d' >conftest.exp
     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
       $2=yes
     fi
   fi
   $RM conftest*
])

if test yes = "[$]$2"; then
    m4_if([$5], , :, [$5])
else
    m4_if([$6], , :, [$6])
fi
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:1631: -1- AU_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:1631: -1- AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_COMPILER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:1640: -1- AC_DEFUN([_LT_LINKER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   save_LDFLAGS=$LDFLAGS
   LDFLAGS="$LDFLAGS $3"
   echo "$lt_simple_link_test_code" > conftest.$ac_ext
   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
     # The linker can only warn and ignore the option if not recognized
     # So say no if there are warnings
     if test -s conftest.err; then
       # Append any errors to the config.log.
       cat conftest.err 1>&AS_MESSAGE_LOG_FD
       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
       if diff conftest.exp conftest.er2 >/dev/null; then
         $2=yes
       fi
     else
       $2=yes
     fi
   fi
   $RM -r conftest*
   LDFLAGS=$save_LDFLAGS
])

if test yes = "[$]$2"; then
    m4_if([$4], , :, [$4])
else
    m4_if([$5], , :, [$5])
fi
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:1675: -1- AU_DEFUN([AC_LIBTOOL_LINKER_OPTION], [m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:1675: -1- AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_LINKER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:1682: -1- AC_DEFUN([LT_CMD_MAX_LEN], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
# find the maximum length of command line arguments
AC_MSG_CHECKING([the maximum length of command line arguments])
AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
  i=0
  teststring=ABCD

  case $build_os in
  msdosdjgpp*)
    # On DJGPP, this test can blow up pretty badly due to problems in libc
    # (any single argument exceeding 2000 bytes causes a buffer overrun
    # during glob expansion).  Even if it were fixed, the result of this
    # check would be larger than it should be.
    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
    ;;

  gnu*)
    # Under GNU Hurd, this test is not required because there is
    # no limit to the length of command line arguments.
    # Libtool will interpret -1 as no limit whatsoever
    lt_cv_sys_max_cmd_len=-1;
    ;;

  cygwin* | mingw* | cegcc*)
    # On Win9x/ME, this test blows up -- it succeeds, but takes
    # about 5 minutes as the teststring grows exponentially.
    # Worse, since 9x/ME are not pre-emptively multitasking,
    # you end up with a "frozen" computer, even though with patience
    # the test eventually succeeds (with a max line length of 256k).
    # Instead, let's just punt: use the minimum linelength reported by
    # all of the supported platforms: 8192 (on NT/2K/XP).
    lt_cv_sys_max_cmd_len=8192;
    ;;

  mint*)
    # On MiNT this can take a long time and run out of memory.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  amigaos*)
    # On AmigaOS with pdksh, this test takes hours, literally.
    # So we just punt and use a minimum line length of 8192.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  bitrig* | darwin* | dragonfly* | freebsd* | midnightbsd* | netbsd* | openbsd*)
    # This has been around since 386BSD, at least.  Likely further.
    if test -x /sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
    elif test -x /usr/sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
    else
      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
    fi
    # And add a safety zone
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    ;;

  interix*)
    # We know the value 262144 and hardcode it with a safety zone (like BSD)
    lt_cv_sys_max_cmd_len=196608
    ;;

  os2*)
    # The test takes a long time on OS/2.
    lt_cv_sys_max_cmd_len=8192
    ;;

  osf*)
    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
    # nice to cause kernel panics so lets avoid the loop below.
    # First set a reasonable default.
    lt_cv_sys_max_cmd_len=16384
    #
    if test -x /sbin/sysconfig; then
      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
        *1*) lt_cv_sys_max_cmd_len=-1 ;;
      esac
    fi
    ;;
  sco3.2v5*)
    lt_cv_sys_max_cmd_len=102400
    ;;
  sysv5* | sco5v6* | sysv4.2uw2*)
    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
    if test -n "$kargmax"; then
      lt_cv_sys_max_cmd_len=`echo $kargmax | $SED 's/.*[[	 ]]//'`
    else
      lt_cv_sys_max_cmd_len=32768
    fi
    ;;
  *)
    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
    if test -n "$lt_cv_sys_max_cmd_len" && \
       test undefined != "$lt_cv_sys_max_cmd_len"; then
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    else
      # Make teststring a little bigger before we do anything with it.
      # a 1K string should be a reasonable start.
      for i in 1 2 3 4 5 6 7 8; do
        teststring=$teststring$teststring
      done
      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
      # If test is not a shell built-in, we'll probably end up computing a
      # maximum length that is only half of the actual maximum length, but
      # we can't tell.
      while { test X`env echo "$teststring$teststring" 2>/dev/null` \
	         = "X$teststring$teststring"; } >/dev/null 2>&1 &&
	      test 17 != "$i" # 1/2 MB should be enough
      do
        i=`expr $i + 1`
        teststring=$teststring$teststring
      done
      # Only check the string length outside the loop.
      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
      teststring=
      # Add a significant safety factor because C++ compilers can tack on
      # massive amounts of additional arguments before passing them to the
      # linker.  It appears as though 1/2 is a usable value.
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
    fi
    ;;
  esac
])
if test -n "$lt_cv_sys_max_cmd_len"; then
  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)
else
  AC_MSG_RESULT(none)
fi
max_cmd_len=$lt_cv_sys_max_cmd_len
_LT_DECL([], [max_cmd_len], [0],
    [What is the maximum length of a command?])
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:1821: -1- AU_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:1821: -1- AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_SYS_MAX_CMD_LEN' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:1932: -1- AC_DEFUN([LT_SYS_DLOPEN_SELF], [m4_require([_LT_HEADER_DLFCN])dnl
if test yes != "$enable_dlopen"; then
  enable_dlopen=unknown
  enable_dlopen_self=unknown
  enable_dlopen_self_static=unknown
else
  lt_cv_dlopen=no
  lt_cv_dlopen_libs=

  case $host_os in
  beos*)
    lt_cv_dlopen=load_add_on
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ;;

  mingw* | pw32* | cegcc*)
    lt_cv_dlopen=LoadLibrary
    lt_cv_dlopen_libs=
    ;;

  cygwin*)
    lt_cv_dlopen=dlopen
    lt_cv_dlopen_libs=
    ;;

  darwin*)
    # if libdl is installed we need to link against it
    AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[
    lt_cv_dlopen=dyld
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ])
    ;;

  tpf*)
    # Don't try to run any link tests for TPF.  We know it's impossible
    # because TPF is a cross-compiler, and we know how we open DSOs.
    lt_cv_dlopen=dlopen
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=no
    ;;

  *)
    AC_CHECK_FUNC([shl_load],
	  [lt_cv_dlopen=shl_load],
      [AC_CHECK_LIB([dld], [shl_load],
	    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],
	[AC_CHECK_FUNC([dlopen],
	      [lt_cv_dlopen=dlopen],
	  [AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],
	    [AC_CHECK_LIB([svld], [dlopen],
		  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],
	      [AC_CHECK_LIB([dld], [dld_link],
		    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])
	      ])
	    ])
	  ])
	])
      ])
    ;;
  esac

  if test no = "$lt_cv_dlopen"; then
    enable_dlopen=no
  else
    enable_dlopen=yes
  fi

  case $lt_cv_dlopen in
  dlopen)
    save_CPPFLAGS=$CPPFLAGS
    test yes = "$ac_cv_header_dlfcn_h" && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"

    save_LDFLAGS=$LDFLAGS
    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"

    save_LIBS=$LIBS
    LIBS="$lt_cv_dlopen_libs $LIBS"

    AC_CACHE_CHECK([whether a program can dlopen itself],
	  lt_cv_dlopen_self, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,
	    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)
    ])

    if test yes = "$lt_cv_dlopen_self"; then
      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
	  lt_cv_dlopen_self_static, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,
	    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)
      ])
    fi

    CPPFLAGS=$save_CPPFLAGS
    LDFLAGS=$save_LDFLAGS
    LIBS=$save_LIBS
    ;;
  esac

  case $lt_cv_dlopen_self in
  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
  *) enable_dlopen_self=unknown ;;
  esac

  case $lt_cv_dlopen_self_static in
  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
  *) enable_dlopen_self_static=unknown ;;
  esac
fi
_LT_DECL([dlopen_support], [enable_dlopen], [0],
	 [Whether dlopen is supported])
_LT_DECL([dlopen_self], [enable_dlopen_self], [0],
	 [Whether dlopen of programs is supported])
_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],
	 [Whether dlopen of statically linked programs is supported])
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:2057: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:2057: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_DLOPEN_SELF' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3175: -1- AC_DEFUN([_LT_PATH_TOOL_PREFIX], [m4_require([_LT_DECL_EGREP])dnl
AC_MSG_CHECKING([for $1])
AC_CACHE_VAL(lt_cv_path_MAGIC_CMD,
[case $MAGIC_CMD in
[[\\/*] |  ?:[\\/]*])
  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.
  ;;
*)
  lt_save_MAGIC_CMD=$MAGIC_CMD
  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
dnl $ac_dummy forces splitting on constant user-supplied paths.
dnl POSIX.2 word splitting is done only on the output of word expansions,
dnl not every word.  This closes a longstanding sh security hole.
  ac_dummy="m4_if([$2], , $PATH, [$2])"
  for ac_dir in $ac_dummy; do
    IFS=$lt_save_ifs
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$1"; then
      lt_cv_path_MAGIC_CMD=$ac_dir/"$1"
      if test -n "$file_magic_test_file"; then
	case $deplibs_check_method in
	"file_magic "*)
	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
	  MAGIC_CMD=$lt_cv_path_MAGIC_CMD
	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
	    $EGREP "$file_magic_regex" > /dev/null; then
	    :
	  else
	    cat <<_LT_EOF 1>&2

*** Warning: the command libtool uses to detect shared libraries,
*** $file_magic_cmd, produces output that libtool cannot recognize.
*** The result is that libtool may fail to recognize shared libraries
*** as such.  This will affect the creation of libtool libraries that
*** depend on shared libraries, but programs linked with such libtool
*** libraries will work regardless of this problem.  Nevertheless, you
*** may want to report the problem to your system manager and/or to
*** bug-libtool@gnu.org

_LT_EOF
	  fi ;;
	esac
      fi
      break
    fi
  done
  IFS=$lt_save_ifs
  MAGIC_CMD=$lt_save_MAGIC_CMD
  ;;
esac])
MAGIC_CMD=$lt_cv_path_MAGIC_CMD
if test -n "$MAGIC_CMD"; then
  AC_MSG_RESULT($MAGIC_CMD)
else
  AC_MSG_RESULT(no)
fi
_LT_DECL([], [MAGIC_CMD], [0],
	 [Used to examine libraries when file_magic_cmd begins with "file"])dnl
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3237: -1- AU_DEFUN([AC_PATH_TOOL_PREFIX], [m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3237: -1- AC_DEFUN([AC_PATH_TOOL_PREFIX], [m4_warn([obsolete], [The macro 'AC_PATH_TOOL_PREFIX' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3260: -1- AC_DEFUN([LT_PATH_LD], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_REQUIRE([AC_CANONICAL_BUILD])dnl
m4_require([_LT_DECL_SED])dnl
m4_require([_LT_DECL_EGREP])dnl
m4_require([_LT_PROG_ECHO_BACKSLASH])dnl

AC_ARG_WITH([gnu-ld],
    [AS_HELP_STRING([--with-gnu-ld],
	[assume the C compiler uses GNU ld @<:@default=no@:>@])],
    [test no = "$withval" || with_gnu_ld=yes],
    [with_gnu_ld=no])dnl

ac_prog=ld
if test yes = "$GCC"; then
  # Check if gcc -print-prog-name=ld gives a path.
  AC_MSG_CHECKING([for ld used by $CC])
  case $host in
  *-*-mingw*)
    # gcc leaves a trailing carriage return, which upsets mingw
    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
  *)
    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
  esac
  case $ac_prog in
    # Accept absolute paths.
    [[\\/]]* | ?:[[\\/]]*)
      re_direlt='/[[^/]][[^/]]*/\.\./'
      # Canonicalize the pathname of ld
      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
      done
      test -z "$LD" && LD=$ac_prog
      ;;
  "")
    # If it fails, then pretend we aren't using GCC.
    ac_prog=ld
    ;;
  *)
    # If it is relative, then search for the first ld in PATH.
    with_gnu_ld=unknown
    ;;
  esac
elif test yes = "$with_gnu_ld"; then
  AC_MSG_CHECKING([for GNU ld])
else
  AC_MSG_CHECKING([for non-GNU ld])
fi
AC_CACHE_VAL(lt_cv_path_LD,
[if test -z "$LD"; then
  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
  for ac_dir in $PATH; do
    IFS=$lt_save_ifs
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
      lt_cv_path_LD=$ac_dir/$ac_prog
      # Check to see if the program is GNU ld.  I'd rather use --version,
      # but apparently some variants of GNU ld only accept -v.
      # Break only if it was the GNU/non-GNU ld that we prefer.
      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
      *GNU* | *'with BFD'*)
	test no != "$with_gnu_ld" && break
	;;
      *)
	test yes != "$with_gnu_ld" && break
	;;
      esac
    fi
  done
  IFS=$lt_save_ifs
else
  lt_cv_path_LD=$LD # Let the user override the test with a path.
fi])
LD=$lt_cv_path_LD
if test -n "$LD"; then
  AC_MSG_RESULT($LD)
else
  AC_MSG_RESULT(no)
fi
test -z "$LD" && AC_MSG_ERROR([no acceptable ld found in \$PATH])
_LT_PATH_LD_GNU
AC_SUBST([LD])

_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3349: -1- AU_DEFUN([AM_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3349: -1- AC_DEFUN([AM_PROG_LD], [m4_warn([obsolete], [The macro 'AM_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3350: -1- AU_DEFUN([AC_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3350: -1- AC_DEFUN([AC_PROG_LD], [m4_warn([obsolete], [The macro 'AC_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3679: -1- AC_DEFUN([LT_PATH_NM], [AC_REQUIRE([AC_PROG_CC])dnl
AC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,
[if test -n "$NM"; then
  # Let the user override the test.
  lt_cv_path_NM=$NM
else
  lt_nm_to_check=${ac_tool_prefix}nm
  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
    lt_nm_to_check="$lt_nm_to_check nm"
  fi
  for lt_tmp_nm in $lt_nm_to_check; do
    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
      IFS=$lt_save_ifs
      test -z "$ac_dir" && ac_dir=.
      tmp_nm=$ac_dir/$lt_tmp_nm
      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext"; then
	# Check to see if the nm accepts a BSD-compat flag.
	# Adding the 'sed 1q' prevents false positives on HP-UX, which says:
	#   nm: unknown option "B" ignored
	# Tru64's nm complains that /dev/null is an invalid object file
	# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty
	case $build_os in
	mingw*) lt_bad_file=conftest.nm/nofile ;;
	*) lt_bad_file=/dev/null ;;
	esac
	case `"$tmp_nm" -B $lt_bad_file 2>&1 | $SED '1q'` in
	*$lt_bad_file* | *'Invalid file or object type'*)
	  lt_cv_path_NM="$tmp_nm -B"
	  break 2
	  ;;
	*)
	  case `"$tmp_nm" -p /dev/null 2>&1 | $SED '1q'` in
	  */dev/null*)
	    lt_cv_path_NM="$tmp_nm -p"
	    break 2
	    ;;
	  *)
	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
	    continue # so that we can try to find one that supports BSD flags
	    ;;
	  esac
	  ;;
	esac
      fi
    done
    IFS=$lt_save_ifs
  done
  : ${lt_cv_path_NM=no}
fi])
if test no != "$lt_cv_path_NM"; then
  NM=$lt_cv_path_NM
else
  # Didn't find any BSD compatible name lister, look for dumpbin.
  if test -n "$DUMPBIN"; then :
    # Let the user override the test.
  else
    AC_CHECK_TOOLS(DUMPBIN, [dumpbin "link -dump"], :)
    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | $SED '1q'` in
    *COFF*)
      DUMPBIN="$DUMPBIN -symbols -headers"
      ;;
    *)
      DUMPBIN=:
      ;;
    esac
  fi
  AC_SUBST([DUMPBIN])
  if test : != "$DUMPBIN"; then
    NM=$DUMPBIN
  fi
fi
test -z "$NM" && NM=nm
AC_SUBST([NM])
_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl

AC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],
  [lt_cv_nm_interface="BSD nm"
  echo "int some_variable = 0;" > conftest.$ac_ext
  (eval echo "\"\$as_me:$LINENO: $ac_compile\"" >&AS_MESSAGE_LOG_FD)
  (eval "$ac_compile" 2>conftest.err)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:$LINENO: $NM \\\"conftest.$ac_objext\\\"\"" >&AS_MESSAGE_LOG_FD)
  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:$LINENO: output\"" >&AS_MESSAGE_LOG_FD)
  cat conftest.out >&AS_MESSAGE_LOG_FD
  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
    lt_cv_nm_interface="MS dumpbin"
  fi
  rm -f conftest*])
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3774: -1- AU_DEFUN([AM_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3774: -1- AC_DEFUN([AM_PROG_NM], [m4_warn([obsolete], [The macro 'AM_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3775: -1- AU_DEFUN([AC_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3775: -1- AC_DEFUN([AC_PROG_NM], [m4_warn([obsolete], [The macro 'AC_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3846: -1- AC_DEFUN([_LT_DLL_DEF_P], [dnl
  test DEF = "`$SED -n dnl
    -e '\''s/^[[	 ]]*//'\'' dnl Strip leading whitespace
    -e '\''/^\(;.*\)*$/d'\'' dnl      Delete empty lines and comments
    -e '\''s/^\(EXPORTS\|LIBRARY\)\([[	 ]].*\)*$/DEF/p'\'' dnl
    -e q dnl                          Only consider the first "real" line
    $1`" dnl
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3860: -1- AC_DEFUN([LT_LIB_M], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
LIBM=
case $host in
*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)
  # These system don't have libm, or don't need it
  ;;
*-ncr-sysv4.3*)
  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)
  AC_CHECK_LIB(m, cos, LIBM="$LIBM -lm")
  ;;
*)
  AC_CHECK_LIB(m, cos, LIBM=-lm)
  ;;
esac
AC_SUBST([LIBM])
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3879: -1- AU_DEFUN([AC_CHECK_LIBM], [m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:3879: -1- AC_DEFUN([AC_CHECK_LIBM], [m4_warn([obsolete], [The macro 'AC_CHECK_LIBM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:8145: -1- AC_DEFUN([LT_PROG_GCJ], [m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],
  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],
    [AC_CHECK_TOOL(GCJ, gcj,)
      test set = "${GCJFLAGS+set}" || GCJFLAGS="-g -O2"
      AC_SUBST(GCJFLAGS)])])[]dnl
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:8154: -1- AU_DEFUN([LT_AC_PROG_GCJ], [m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:8154: -1- AC_DEFUN([LT_AC_PROG_GCJ], [m4_warn([obsolete], [The macro 'LT_AC_PROG_GCJ' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:8161: -1- AC_DEFUN([LT_PROG_GO], [AC_CHECK_TOOL(GOC, gccgo,)
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:8168: -1- AC_DEFUN([LT_PROG_RC], [AC_CHECK_TOOL(RC, windres,)
])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:8173: -1- AU_DEFUN([LT_AC_PROG_RC], [m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:8173: -1- AC_DEFUN([LT_AC_PROG_RC], [m4_warn([obsolete], [The macro 'LT_AC_PROG_RC' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:8301: -1- AU_DEFUN([LT_AC_PROG_SED], [m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/libtool.m4:8301: -1- AC_DEFUN([LT_AC_PROG_SED], [m4_warn([obsolete], [The macro 'LT_AC_PROG_SED' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:/usr/local/bin/../share/aclocal/ltargz.m4:13: -1- AC_DEFUN([LT_FUNC_ARGZ], [
dnl Required for use of '$SED' in Cygwin configuration.
AC_REQUIRE([AC_PROG_SED])dnl
AC_CHECK_HEADERS([argz.h], [], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_TYPES([error_t],
  [],
  [AC_DEFINE([error_t], [int],
   [Define to a type to use for 'error_t' if it is not otherwise available.])
   AC_DEFINE([__error_t_defined], [1], [Define so that glibc/gnulib argp.h
    does not typedef error_t.])],
  [#if defined(HAVE_ARGZ_H)
#  include <argz.h>
#endif])

LT_ARGZ_H=
AC_CHECK_FUNCS([argz_add argz_append argz_count argz_create_sep argz_insert \
	argz_next argz_stringify], [], [LT_ARGZ_H=lt__argz.h; AC_LIBOBJ([lt__argz])])

dnl if have system argz functions, allow forced use of
dnl libltdl-supplied implementation (and default to do so
dnl on "known bad" systems). Could use a runtime check, but
dnl (a) detecting malloc issues is notoriously unreliable
dnl (b) only known system that declares argz functions,
dnl     provides them, yet they are broken, is cygwin
dnl     releases prior to 16-Mar-2007 (1.5.24 and earlier)
dnl So, it's more straightforward simply to special case
dnl this for known bad systems.
AS_IF([test -z "$LT_ARGZ_H"],
    [AC_CACHE_CHECK(
        [if argz actually works],
        [lt_cv_sys_argz_works],
        [[case $host_os in #(
	 *cygwin*)
	   lt_cv_sys_argz_works=no
	   if test no != "$cross_compiling"; then
	     lt_cv_sys_argz_works="guessing no"
	   else
	     lt_sed_extract_leading_digits='s/^\([0-9\.]*\).*/\1/'
	     save_IFS=$IFS
	     IFS=-.
	     set x `uname -r | $SED -e "$lt_sed_extract_leading_digits"`
	     IFS=$save_IFS
	     lt_os_major=${2-0}
	     lt_os_minor=${3-0}
	     lt_os_micro=${4-0}
	     if test 1 -lt "$lt_os_major" \
		|| { test 1 -eq "$lt_os_major" \
		  && { test 5 -lt "$lt_os_minor" \
		    || { test 5 -eq "$lt_os_minor" \
		      && test 24 -lt "$lt_os_micro"; }; }; }; then
	       lt_cv_sys_argz_works=yes
	     fi
	   fi
	   ;; #(
	 *) lt_cv_sys_argz_works=yes ;;
	 esac]])
     AS_IF([test yes = "$lt_cv_sys_argz_works"],
        [AC_DEFINE([HAVE_WORKING_ARGZ], 1,
                   [This value is set to 1 to indicate that the system argz facility works])],
        [LT_ARGZ_H=lt__argz.h
        AC_LIBOBJ([lt__argz])])])

AC_SUBST([LT_ARGZ_H])
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:17: -1- AC_DEFUN([LT_CONFIG_LTDL_DIR], [AC_BEFORE([$0], [LTDL_INIT])
_$0($*)
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:69: -1- AC_DEFUN([LTDL_CONVENIENCE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_CONVENIENCE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:82: -1- AU_DEFUN([AC_LIBLTDL_CONVENIENCE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:82: -1- AC_DEFUN([AC_LIBLTDL_CONVENIENCE], [m4_warn([obsolete], [The macro 'AC_LIBLTDL_CONVENIENCE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:125: -1- AC_DEFUN([LTDL_INSTALLABLE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_INSTALLABLE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:138: -1- AU_DEFUN([AC_LIBLTDL_INSTALLABLE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:138: -1- AC_DEFUN([AC_LIBLTDL_INSTALLABLE], [m4_warn([obsolete], [The macro 'AC_LIBLTDL_INSTALLABLE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:214: -1- AC_DEFUN([_LT_LIBOBJ], [
  m4_pattern_allow([^_LT_LIBOBJS$])
  _LT_LIBOBJS="$_LT_LIBOBJS $1.$ac_objext"
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:227: -1- AC_DEFUN([LTDL_INIT], [dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

dnl We need to keep our own list of libobjs separate from our parent project,
dnl and the easiest way to do that is redefine the AC_LIBOBJs macro while
dnl we look for our own LIBOBJs.
m4_pushdef([AC_LIBOBJ], m4_defn([_LT_LIBOBJ]))
m4_pushdef([AC_LIBSOURCES])

dnl If not otherwise defined, default to the 1.5.x compatible subproject mode:
m4_if(_LTDL_MODE, [],
        [m4_define([_LTDL_MODE], m4_default([$2], [subproject]))
        m4_if([-1], [m4_bregexp(_LTDL_MODE, [\(subproject\|\(non\)?recursive\)])],
                [m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])

AC_ARG_WITH([included_ltdl],
    [AS_HELP_STRING([--with-included-ltdl],
                    [use the GNU ltdl sources included here])])

if test yes != "$with_included_ltdl"; then
  # We are not being forced to use the included libltdl sources, so
  # decide whether there is a useful installed version we can use.
  AC_CHECK_HEADER([ltdl.h],
      [AC_CHECK_DECL([lt_dlinterface_register],
	   [AC_CHECK_LIB([ltdl], [lt_dladvise_preload],
	       [with_included_ltdl=no],
	       [with_included_ltdl=yes])],
	   [with_included_ltdl=yes],
	   [AC_INCLUDES_DEFAULT
	    #include <ltdl.h>])],
      [with_included_ltdl=yes],
      [AC_INCLUDES_DEFAULT]
  )
fi

dnl If neither LT_CONFIG_LTDL_DIR, LTDL_CONVENIENCE nor LTDL_INSTALLABLE
dnl was called yet, then for old times' sake, we assume libltdl is in an
dnl eponymous directory:
AC_PROVIDE_IFELSE([LT_CONFIG_LTDL_DIR], [], [_LT_CONFIG_LTDL_DIR([libltdl])])

AC_ARG_WITH([ltdl_include],
    [AS_HELP_STRING([--with-ltdl-include=DIR],
                    [use the ltdl headers installed in DIR])])

if test -n "$with_ltdl_include"; then
  if test -f "$with_ltdl_include/ltdl.h"; then :
  else
    AC_MSG_ERROR([invalid ltdl include directory: '$with_ltdl_include'])
  fi
else
  with_ltdl_include=no
fi

AC_ARG_WITH([ltdl_lib],
    [AS_HELP_STRING([--with-ltdl-lib=DIR],
                    [use the libltdl.la installed in DIR])])

if test -n "$with_ltdl_lib"; then
  if test -f "$with_ltdl_lib/libltdl.la"; then :
  else
    AC_MSG_ERROR([invalid ltdl library directory: '$with_ltdl_lib'])
  fi
else
  with_ltdl_lib=no
fi

case ,$with_included_ltdl,$with_ltdl_include,$with_ltdl_lib, in
  ,yes,no,no,)
	m4_case(m4_default(_LTDL_TYPE, [convenience]),
	    [convenience], [_LTDL_CONVENIENCE],
	    [installable], [_LTDL_INSTALLABLE],
	  [m4_fatal([unknown libltdl build type: ]_LTDL_TYPE)])
	;;
  ,no,no,no,)
	# If the included ltdl is not to be used, then use the
	# preinstalled libltdl we found.
	AC_DEFINE([HAVE_LTDL], [1],
	  [Define this if a modern libltdl is already installed])
	LIBLTDL=-lltdl
	LTDLDEPS=
	LTDLINCL=
	;;
  ,no*,no,*)
	AC_MSG_ERROR(['--with-ltdl-include' and '--with-ltdl-lib' options must be used together])
	;;
  *)	with_included_ltdl=no
	LIBLTDL="-L$with_ltdl_lib -lltdl"
	LTDLDEPS=
	LTDLINCL=-I$with_ltdl_include
	;;
esac
INCLTDL=$LTDLINCL

# Report our decision...
AC_MSG_CHECKING([where to find libltdl headers])
AC_MSG_RESULT([$LTDLINCL])
AC_MSG_CHECKING([where to find libltdl library])
AC_MSG_RESULT([$LIBLTDL])

_LTDL_SETUP

dnl restore autoconf definition.
m4_popdef([AC_LIBOBJ])
m4_popdef([AC_LIBSOURCES])

AC_CONFIG_COMMANDS_PRE([
    _ltdl_libobjs=
    _ltdl_ltlibobjs=
    if test -n "$_LT_LIBOBJS"; then
      # Remove the extension.
      _lt_sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $_LT_LIBOBJS; do echo "$i"; done | $SED "$_lt_sed_drop_objext" | sort -u`; do
        _ltdl_libobjs="$_ltdl_libobjs $lt_libobj_prefix$i.$ac_objext"
        _ltdl_ltlibobjs="$_ltdl_ltlibobjs $lt_libobj_prefix$i.lo"
      done
    fi
    AC_SUBST([ltdl_LIBOBJS], [$_ltdl_libobjs])
    AC_SUBST([ltdl_LTLIBOBJS], [$_ltdl_ltlibobjs])
])

# Only expand once:
m4_define([LTDL_INIT])
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:353: -1- AU_DEFUN([AC_LIB_LTDL], [LTDL_INIT($@)])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:353: -1- AC_DEFUN([AC_LIB_LTDL], [m4_warn([obsolete], [The macro 'AC_LIB_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:354: -1- AU_DEFUN([AC_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:354: -1- AC_DEFUN([AC_WITH_LTDL], [m4_warn([obsolete], [The macro 'AC_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:355: -1- AU_DEFUN([LT_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:355: -1- AC_DEFUN([LT_WITH_LTDL], [m4_warn([obsolete], [The macro 'LT_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:368: -1- AC_DEFUN([_LTDL_SETUP], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([LT_SYS_MODULE_EXT])dnl
AC_REQUIRE([LT_SYS_MODULE_PATH])dnl
AC_REQUIRE([LT_SYS_DLSEARCH_PATH])dnl
AC_REQUIRE([LT_LIB_DLLOAD])dnl
AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl
AC_REQUIRE([LT_FUNC_DLSYM_USCORE])dnl
AC_REQUIRE([LT_SYS_DLOPEN_DEPLIBS])dnl
AC_REQUIRE([LT_FUNC_ARGZ])dnl

m4_require([_LT_CHECK_OBJDIR])dnl
m4_require([_LT_HEADER_DLFCN])dnl
m4_require([_LT_CHECK_DLPREOPEN])dnl
m4_require([_LT_DECL_SED])dnl

dnl Don't require this, or it will be expanded earlier than the code
dnl that sets the variables it relies on:
_LT_ENABLE_INSTALL

dnl _LTDL_MODE specific code must be called at least once:
_LTDL_MODE_DISPATCH

# In order that ltdl.c can compile, find out the first AC_CONFIG_HEADERS
# the user used.  This is so that ltdl.h can pick up the parent projects
# config.h file, The first file in AC_CONFIG_HEADERS must contain the
# definitions required by ltdl.c.
# FIXME: Remove use of undocumented AC_LIST_HEADERS (2.59 compatibility).
AC_CONFIG_COMMANDS_PRE([dnl
m4_pattern_allow([^LT_CONFIG_H$])dnl
m4_ifset([AH_HEADER],
    [LT_CONFIG_H=AH_HEADER],
    [m4_ifset([AC_LIST_HEADERS],
	    [LT_CONFIG_H=`echo "AC_LIST_HEADERS" | $SED 's|^[[      ]]*||;s|[[ :]].*$||'`],
	[])])])
AC_SUBST([LT_CONFIG_H])

AC_CHECK_HEADERS([unistd.h dl.h sys/dl.h dld.h mach-o/dyld.h dirent.h],
	[], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_FUNCS([closedir opendir readdir], [], [AC_LIBOBJ([lt__dirent])])
AC_CHECK_FUNCS([strlcat strlcpy], [], [AC_LIBOBJ([lt__strl])])

m4_pattern_allow([LT_LIBEXT])dnl
AC_DEFINE_UNQUOTED([LT_LIBEXT],["$libext"],[The archive extension])

name=
eval "lt_libprefix=\"$libname_spec\""
m4_pattern_allow([LT_LIBPREFIX])dnl
AC_DEFINE_UNQUOTED([LT_LIBPREFIX],["$lt_libprefix"],[The archive prefix])

name=ltdl
eval "LTDLOPEN=\"$libname_spec\""
AC_SUBST([LTDLOPEN])
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:444: -1- AC_DEFUN([LT_SYS_DLOPEN_DEPLIBS], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_CACHE_CHECK([whether deplibs are loaded by dlopen],
  [lt_cv_sys_dlopen_deplibs],
  [# PORTME does your system automatically load deplibs for dlopen?
  # or its logical equivalent (e.g. shl_load for HP-UX < 11)
  # For now, we just catch OSes we know something about -- in the
  # future, we'll try test this programmatically.
  lt_cv_sys_dlopen_deplibs=unknown
  case $host_os in
  aix3*|aix4.1.*|aix4.2.*)
    # Unknown whether this is true for these versions of AIX, but
    # we want this 'case' here to explicitly catch those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  aix[[4-9]]*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  amigaos*)
    case $host_cpu in
    powerpc)
      lt_cv_sys_dlopen_deplibs=no
      ;;
    esac
    ;;
  bitrig*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  darwin*)
    # Assuming the user has installed a libdl from somewhere, this is true
    # If you are looking for one http://www.opendarwin.org/projects/dlcompat
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  freebsd* | dragonfly* | midnightbsd*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  gnu* | linux* | k*bsd*-gnu | kopensolaris*-gnu)
    # GNU and its variants, using gnu ld.so (Glibc)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  hpux10*|hpux11*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  interix*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  irix[[12345]]*|irix6.[[01]]*)
    # Catch all versions of IRIX before 6.2, and indicate that we don't
    # know how it worked for any of those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  irix*)
    # The case above catches anything before 6.2, and it's known that
    # at 6.2 and later dlopen does load deplibs.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  netbsd*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  openbsd*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  osf[[1234]]*)
    # dlopen did load deplibs (at least at 4.x), but until the 5.x series,
    # it did *not* use an RPATH in a shared library to find objects the
    # library depends on, so we explicitly say 'no'.
    lt_cv_sys_dlopen_deplibs=no
    ;;
  osf5.0|osf5.0a|osf5.1)
    # dlopen *does* load deplibs and with the right loader patch applied
    # it even uses RPATH in a shared library to search for shared objects
    # that the library depends on, but there's no easy way to know if that
    # patch is installed.  Since this is the case, all we can really
    # say is unknown -- it depends on the patch being installed.  If
    # it is, this changes to 'yes'.  Without it, it would be 'no'.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  osf*)
    # the two cases above should catch all versions of osf <= 5.1.  Read
    # the comments above for what we know about them.
    # At > 5.1, deplibs are loaded *and* any RPATH in a shared library
    # is used to find them so we can finally say 'yes'.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  qnx*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  solaris*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
    libltdl_cv_sys_dlopen_deplibs=yes
    ;;
  esac
  ])
if test yes != "$lt_cv_sys_dlopen_deplibs"; then
 AC_DEFINE([LTDL_DLOPEN_DEPLIBS], [1],
    [Define if the OS needs help to load dependent libraries for dlopen().])
fi
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:546: -1- AU_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:546: -1- AC_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [m4_warn([obsolete], [The macro 'AC_LTDL_SYS_DLOPEN_DEPLIBS' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:553: -1- AC_DEFUN([LT_SYS_MODULE_EXT], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([what extension is used for runtime loadable modules],
  [libltdl_cv_shlibext],
[
module=yes
eval libltdl_cv_shlibext=$shrext_cmds
module=no
eval libltdl_cv_shrext=$shrext_cmds
  ])
if test -n "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_MODULE_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_EXT], ["$libltdl_cv_shlibext"],
    [Define to the extension used for runtime loadable modules, say, ".so".])
fi
if test "$libltdl_cv_shrext" != "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_SHARED_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_SHARED_EXT], ["$libltdl_cv_shrext"],
    [Define to the shared library suffix, say, ".dylib".])
fi
if test -n "$shared_archive_member_spec"; then
  m4_pattern_allow([LT_SHARED_LIB_MEMBER])dnl
  AC_DEFINE_UNQUOTED([LT_SHARED_LIB_MEMBER], ["($shared_archive_member_spec.o)"],
    [Define to the shared archive member specification, say "(shr.o)".])
fi
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:581: -1- AU_DEFUN([AC_LTDL_SHLIBEXT], [m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:581: -1- AC_DEFUN([AC_LTDL_SHLIBEXT], [m4_warn([obsolete], [The macro 'AC_LTDL_SHLIBEXT' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:588: -1- AC_DEFUN([LT_SYS_MODULE_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([what variable specifies run-time module search path],
  [lt_cv_module_path_var], [lt_cv_module_path_var=$shlibpath_var])
if test -n "$lt_cv_module_path_var"; then
  m4_pattern_allow([LT_MODULE_PATH_VAR])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_PATH_VAR], ["$lt_cv_module_path_var"],
    [Define to the name of the environment variable that determines the run-time module search path.])
fi
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:600: -1- AU_DEFUN([AC_LTDL_SHLIBPATH], [m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:600: -1- AC_DEFUN([AC_LTDL_SHLIBPATH], [m4_warn([obsolete], [The macro 'AC_LTDL_SHLIBPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:607: -1- AC_DEFUN([LT_SYS_DLSEARCH_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([for the default library search path],
  [lt_cv_sys_dlsearch_path],
  [lt_cv_sys_dlsearch_path=$sys_lib_dlsearch_path_spec])
if test -n "$lt_cv_sys_dlsearch_path"; then
  sys_dlsearch_path=
  for dir in $lt_cv_sys_dlsearch_path; do
    if test -z "$sys_dlsearch_path"; then
      sys_dlsearch_path=$dir
    else
      sys_dlsearch_path=$sys_dlsearch_path$PATH_SEPARATOR$dir
    fi
  done
  m4_pattern_allow([LT_DLSEARCH_PATH])dnl
  AC_DEFINE_UNQUOTED([LT_DLSEARCH_PATH], ["$sys_dlsearch_path"],
    [Define to the system default library search path.])
fi
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:628: -1- AU_DEFUN([AC_LTDL_SYSSEARCHPATH], [m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:628: -1- AC_DEFUN([AC_LTDL_SYSSEARCHPATH], [m4_warn([obsolete], [The macro 'AC_LTDL_SYSSEARCHPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:654: -1- AC_DEFUN([LT_LIB_DLLOAD], [m4_pattern_allow([^LT_DLLOADERS$])
LT_DLLOADERS=
AC_SUBST([LT_DLLOADERS])

AC_LANG_PUSH([C])
lt_dlload_save_LIBS=$LIBS

LIBADD_DLOPEN=
AC_SEARCH_LIBS([dlopen], [dl],
	[AC_DEFINE([HAVE_LIBDL], [1],
		   [Define if you have the libdl library or equivalent.])
	if test "$ac_cv_search_dlopen" != "none required"; then
	  LIBADD_DLOPEN=-ldl
	fi
	libltdl_cv_lib_dl_dlopen=yes
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#if HAVE_DLFCN_H
#  include <dlfcn.h>
#endif
    ]], [[dlopen(0, 0);]])],
	    [AC_DEFINE([HAVE_LIBDL], [1],
		       [Define if you have the libdl library or equivalent.])
	    libltdl_cv_func_dlopen=yes
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
	[AC_CHECK_LIB([svld], [dlopen],
		[AC_DEFINE([HAVE_LIBDL], [1],
			 [Define if you have the libdl library or equivalent.])
	        LIBADD_DLOPEN=-lsvld libltdl_cv_func_dlopen=yes
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"])])])
if test yes = "$libltdl_cv_func_dlopen" || test yes = "$libltdl_cv_lib_dl_dlopen"
then
  lt_save_LIBS=$LIBS
  LIBS="$LIBS $LIBADD_DLOPEN"
  AC_CHECK_FUNCS([dlerror])
  LIBS=$lt_save_LIBS
fi
AC_SUBST([LIBADD_DLOPEN])

LIBADD_SHL_LOAD=
AC_CHECK_FUNC([shl_load],
	[AC_DEFINE([HAVE_SHL_LOAD], [1],
		   [Define if you have the shl_load function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"],
    [AC_CHECK_LIB([dld], [shl_load],
	    [AC_DEFINE([HAVE_SHL_LOAD], [1],
		       [Define if you have the shl_load function.])
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"
	    LIBADD_SHL_LOAD=-ldld])])
AC_SUBST([LIBADD_SHL_LOAD])

case $host_os in
darwin[[1567]].*)
# We only want this for pre-Mac OS X 10.4.
  AC_CHECK_FUNC([_dyld_func_lookup],
	[AC_DEFINE([HAVE_DYLD], [1],
		   [Define if you have the _dyld_func_lookup function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dyld.la"])
  ;;
beos*)
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}load_add_on.la"
  ;;
cygwin* | mingw* | pw32*)
  AC_CHECK_DECLS([cygwin_conv_path], [], [], [[#include <sys/cygwin.h>]])
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}loadlibrary.la"
  ;;
esac

AC_CHECK_LIB([dld], [dld_link],
	[AC_DEFINE([HAVE_DLD], [1],
		   [Define if you have the GNU dld library.])
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dld_link.la"])
AC_SUBST([LIBADD_DLD_LINK])

m4_pattern_allow([^LT_DLPREOPEN$])
LT_DLPREOPEN=
if test -n "$LT_DLLOADERS"
then
  for lt_loader in $LT_DLLOADERS; do
    LT_DLPREOPEN="$LT_DLPREOPEN-dlpreopen $lt_loader "
  done
  AC_DEFINE([HAVE_LIBDLLOADER], [1],
            [Define if libdlloader will be built on this platform])
fi
AC_SUBST([LT_DLPREOPEN])

dnl This isn't used anymore, but set it for backwards compatibility
LIBADD_DL="$LIBADD_DLOPEN $LIBADD_SHL_LOAD"
AC_SUBST([LIBADD_DL])

LIBS=$lt_dlload_save_LIBS
AC_LANG_POP
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:749: -1- AU_DEFUN([AC_LTDL_DLLIB], [m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:749: -1- AC_DEFUN([AC_LTDL_DLLIB], [m4_warn([obsolete], [The macro 'AC_LTDL_DLLIB' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:757: -1- AC_DEFUN([LT_SYS_SYMBOL_USCORE], [m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl
AC_CACHE_CHECK([for _ prefix in compiled symbols],
  [lt_cv_sys_symbol_underscore],
  [lt_cv_sys_symbol_underscore=no
  cat > conftest.$ac_ext <<_LT_EOF
void nm_test_func(){}
int main(){nm_test_func;return 0;}
_LT_EOF
  if AC_TRY_EVAL(ac_compile); then
    # Now try to grab the symbols.
    ac_nlist=conftest.nm
    if AC_TRY_EVAL(NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $ac_nlist) && test -s "$ac_nlist"; then
      # See whether the symbols have a leading underscore.
      if grep '^. _nm_test_func' "$ac_nlist" >/dev/null; then
        lt_cv_sys_symbol_underscore=yes
      else
        if grep '^. nm_test_func ' "$ac_nlist" >/dev/null; then
	  :
        else
	  echo "configure: cannot find nm_test_func in $ac_nlist" >&AS_MESSAGE_LOG_FD
        fi
      fi
    else
      echo "configure: cannot run $lt_cv_sys_global_symbol_pipe" >&AS_MESSAGE_LOG_FD
    fi
  else
    echo "configure: failed program was:" >&AS_MESSAGE_LOG_FD
    cat conftest.c >&AS_MESSAGE_LOG_FD
  fi
  rm -rf conftest*
  ])
  sys_symbol_underscore=$lt_cv_sys_symbol_underscore
  AC_SUBST([sys_symbol_underscore])
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:794: -1- AU_DEFUN([AC_LTDL_SYMBOL_USCORE], [m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:794: -1- AC_DEFUN([AC_LTDL_SYMBOL_USCORE], [m4_warn([obsolete], [The macro 'AC_LTDL_SYMBOL_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:801: -1- AC_DEFUN([LT_FUNC_DLSYM_USCORE], [AC_REQUIRE([_LT_COMPILER_PIC])dnl	for lt_prog_compiler_wl
AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl	for lt_cv_sys_symbol_underscore
AC_REQUIRE([LT_SYS_MODULE_EXT])dnl	for libltdl_cv_shlibext
if test yes = "$lt_cv_sys_symbol_underscore"; then
  if test yes = "$libltdl_cv_func_dlopen" || test yes = "$libltdl_cv_lib_dl_dlopen"; then
    AC_CACHE_CHECK([whether we have to add an underscore for dlsym],
      [libltdl_cv_need_uscore],
      [libltdl_cv_need_uscore=unknown
      dlsym_uscore_save_LIBS=$LIBS
      LIBS="$LIBS $LIBADD_DLOPEN"
      libname=conftmod # stay within 8.3 filename limits!
      cat >$libname.$ac_ext <<_LT_EOF
[#line $LINENO "configure"
#include "confdefs.h"
/* When -fvisibility=hidden is used, assume the code has been annotated
   correspondingly for the symbols needed.  */
#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
int fnord () __attribute__((visibility("default")));
#endif
int fnord () { return 42; }]
_LT_EOF

      # ltfn_module_cmds module_cmds
      # Execute tilde-delimited MODULE_CMDS with environment primed for
      # $module_cmds or $archive_cmds type content.
      ltfn_module_cmds ()
      {( # subshell avoids polluting parent global environment
          module_cmds_save_ifs=$IFS; IFS='~'
          for cmd in @S|@1; do
            IFS=$module_cmds_save_ifs
            libobjs=$libname.$ac_objext; lib=$libname$libltdl_cv_shlibext
            rpath=/not-exists; soname=$libname$libltdl_cv_shlibext; output_objdir=.
            major=; versuffix=; verstring=; deplibs=
            ECHO=echo; wl=$lt_prog_compiler_wl; allow_undefined_flag=
            eval $cmd
          done
          IFS=$module_cmds_save_ifs
      )}

      # Compile a loadable module using libtool macro expansion results.
      $CC $pic_flag -c $libname.$ac_ext
      ltfn_module_cmds "${module_cmds:-$archive_cmds}"

      # Try to fetch fnord with dlsym().
      libltdl_dlunknown=0; libltdl_dlnouscore=1; libltdl_dluscore=2
      cat >conftest.$ac_ext <<_LT_EOF
[#line $LINENO "configure"
#include "confdefs.h"
#if HAVE_DLFCN_H
#include <dlfcn.h>
#endif
#include <stdio.h>
#ifndef RTLD_GLOBAL
#  ifdef DL_GLOBAL
#    define RTLD_GLOBAL DL_GLOBAL
#  else
#    define RTLD_GLOBAL 0
#  endif
#endif
#ifndef RTLD_NOW
#  ifdef DL_NOW
#    define RTLD_NOW DL_NOW
#  else
#    define RTLD_NOW 0
#  endif
#endif
int main () {
  void *handle = dlopen ("`pwd`/$libname$libltdl_cv_shlibext", RTLD_GLOBAL|RTLD_NOW);
  int status = $libltdl_dlunknown;
  if (handle) {
    if (dlsym (handle, "fnord"))
      status = $libltdl_dlnouscore;
    else {
      if (dlsym (handle, "_fnord"))
        status = $libltdl_dluscore;
      else
	puts (dlerror ());
    }
    dlclose (handle);
  } else
    puts (dlerror ());
  return status;
}]
_LT_EOF
      if AC_TRY_EVAL(ac_link) && test -s "conftest$ac_exeext" 2>/dev/null; then
        (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null
        libltdl_status=$?
        case x$libltdl_status in
          x$libltdl_dlnouscore) libltdl_cv_need_uscore=no ;;
	  x$libltdl_dluscore) libltdl_cv_need_uscore=yes ;;
	  x*) libltdl_cv_need_uscore=unknown ;;
        esac
      fi
      rm -rf conftest* $libname*
      LIBS=$dlsym_uscore_save_LIBS
    ])
  fi
fi

if test yes = "$libltdl_cv_need_uscore"; then
  AC_DEFINE([NEED_USCORE], [1],
    [Define if dlsym() requires a leading underscore in symbol names.])
fi
])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:908: -1- AU_DEFUN([AC_LTDL_DLSYM_USCORE], [m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])], [], [])
m4trace:/usr/local/bin/../share/aclocal/ltdl.m4:908: -1- AC_DEFUN([AC_LTDL_DLSYM_USCORE], [m4_warn([obsolete], [The macro 'AC_LTDL_DLSYM_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:14: -1- AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:113: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN], [_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'dlopen' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:113: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_DLOPEN' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'dlopen' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:148: -1- AU_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'win32-dll' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:148: -1- AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_WIN32_DLL' is obsolete.
You should run autoupdate.])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'win32-dll' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:197: -1- AC_DEFUN([AC_ENABLE_SHARED], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:201: -1- AC_DEFUN([AC_DISABLE_SHARED], [_LT_SET_OPTION([LT_INIT], [disable-shared])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:205: -1- AU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:205: -1- AC_DEFUN([AM_ENABLE_SHARED], [m4_warn([obsolete], [The macro 'AM_ENABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_SHARED($@)])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:206: -1- AU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:206: -1- AC_DEFUN([AM_DISABLE_SHARED], [m4_warn([obsolete], [The macro 'AM_DISABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_SHARED($@)])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:251: -1- AC_DEFUN([AC_ENABLE_STATIC], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:255: -1- AC_DEFUN([AC_DISABLE_STATIC], [_LT_SET_OPTION([LT_INIT], [disable-static])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:259: -1- AU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:259: -1- AC_DEFUN([AM_ENABLE_STATIC], [m4_warn([obsolete], [The macro 'AM_ENABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_STATIC($@)])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:260: -1- AU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:260: -1- AC_DEFUN([AM_DISABLE_STATIC], [m4_warn([obsolete], [The macro 'AM_DISABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_STATIC($@)])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:305: -1- AU_DEFUN([AC_ENABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:305: -1- AC_DEFUN([AC_ENABLE_FAST_INSTALL], [m4_warn([obsolete], [The macro 'AC_ENABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:312: -1- AU_DEFUN([AC_DISABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:312: -1- AC_DEFUN([AC_DISABLE_FAST_INSTALL], [m4_warn([obsolete], [The macro 'AC_DISABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:411: -1- AU_DEFUN([AC_LIBTOOL_PICMODE], [_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'pic-only' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/bin/../share/aclocal/ltoptions.m4:411: -1- AC_DEFUN([AC_LIBTOOL_PICMODE], [m4_warn([obsolete], [The macro 'AC_LIBTOOL_PICMODE' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'pic-only' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/bin/../share/aclocal/ltsugar.m4:14: -1- AC_DEFUN([LTSUGAR_VERSION], [m4_if([0.1])])
m4trace:/usr/local/bin/../share/aclocal/ltversion.m4:19: -1- AC_DEFUN([LTVERSION_VERSION], [macro_version='2.4.7'
macro_revision='2.4.7'
_LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])
_LT_DECL(, macro_revision, 0)
])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:37: -1- AC_DEFUN([LTOBSOLETE_VERSION], [m4_if([1])])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:41: -1- AC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:42: -1- AC_DEFUN([_LT_AC_SHELL_INIT])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:43: -1- AC_DEFUN([_LT_AC_SYS_LIBPATH_AIX])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:45: -1- AC_DEFUN([_LT_AC_TAGVAR])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:46: -1- AC_DEFUN([AC_LTDL_ENABLE_INSTALL])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:47: -1- AC_DEFUN([AC_LTDL_PREOPEN])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:48: -1- AC_DEFUN([_LT_AC_SYS_COMPILER])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:49: -1- AC_DEFUN([_LT_AC_LOCK])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:50: -1- AC_DEFUN([AC_LIBTOOL_SYS_OLD_ARCHIVE])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:51: -1- AC_DEFUN([_LT_AC_TRY_DLOPEN_SELF])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:52: -1- AC_DEFUN([AC_LIBTOOL_PROG_CC_C_O])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:53: -1- AC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:54: -1- AC_DEFUN([AC_LIBTOOL_OBJDIR])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:55: -1- AC_DEFUN([AC_LTDL_OBJDIR])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:56: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:57: -1- AC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:58: -1- AC_DEFUN([AC_PATH_MAGIC])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:59: -1- AC_DEFUN([AC_PROG_LD_GNU])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:60: -1- AC_DEFUN([AC_PROG_LD_RELOAD_FLAG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:61: -1- AC_DEFUN([AC_DEPLIBS_CHECK_METHOD])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:62: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:63: -1- AC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:64: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:65: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:66: -1- AC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:67: -1- AC_DEFUN([LT_AC_PROG_EGREP])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:72: -1- AC_DEFUN([_AC_PROG_LIBTOOL])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:73: -1- AC_DEFUN([AC_LIBTOOL_SETUP])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:74: -1- AC_DEFUN([_LT_AC_CHECK_DLFCN])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:75: -1- AC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:76: -1- AC_DEFUN([_LT_AC_TAGCONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:78: -1- AC_DEFUN([_LT_AC_LANG_CXX])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:79: -1- AC_DEFUN([_LT_AC_LANG_F77])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:80: -1- AC_DEFUN([_LT_AC_LANG_GCJ])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:81: -1- AC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:82: -1- AC_DEFUN([_LT_AC_LANG_C_CONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:83: -1- AC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:84: -1- AC_DEFUN([_LT_AC_LANG_CXX_CONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:85: -1- AC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:86: -1- AC_DEFUN([_LT_AC_LANG_F77_CONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:87: -1- AC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:88: -1- AC_DEFUN([_LT_AC_LANG_GCJ_CONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:89: -1- AC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:90: -1- AC_DEFUN([_LT_AC_LANG_RC_CONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:91: -1- AC_DEFUN([AC_LIBTOOL_CONFIG])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:92: -1- AC_DEFUN([_LT_AC_FILE_LTDLL_C])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:94: -1- AC_DEFUN([_LT_AC_PROG_CXXCPP])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:97: -1- AC_DEFUN([_LT_PROG_F77])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:98: -1- AC_DEFUN([_LT_PROG_FC])
m4trace:/usr/local/bin/../share/aclocal/lt~obsolete.m4:99: -1- AC_DEFUN([_LT_PROG_CXX])
m4trace:configure.ac:8: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:8: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:8: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section 'AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:8: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:8: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:8: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:8: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:8: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:13: -1- AM_INIT_AUTOMAKE([tar-ustar nostdinc subdir-objects dist-xz])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:13: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:13: -1- AM_AUTOMAKE_VERSION([1.17])
m4trace:configure.ac:13: -1- _AM_AUTOCONF_VERSION([2.72])
m4trace:configure.ac:13: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:13: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:13: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:13: -1- _AM_SET_OPTIONS([tar-ustar nostdinc subdir-objects dist-xz])
m4trace:configure.ac:13: -1- _AM_SET_OPTION([tar-ustar])
m4trace:configure.ac:13: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:13: -1- _AM_SET_OPTION([nostdinc])
m4trace:configure.ac:13: -2- _AM_MANGLE_OPTION([nostdinc])
m4trace:configure.ac:13: -1- _AM_SET_OPTION([subdir-objects])
m4trace:configure.ac:13: -2- _AM_MANGLE_OPTION([subdir-objects])
m4trace:configure.ac:13: -1- _AM_SET_OPTION([dist-xz])
m4trace:configure.ac:13: -2- _AM_MANGLE_OPTION([dist-xz])
m4trace:configure.ac:13: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:13: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:13: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:13: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:13: -1- AM_SANITY_CHECK
m4trace:configure.ac:13: -1- _AM_FILESYSTEM_TIMESTAMP_RESOLUTION
m4trace:configure.ac:13: -1- _AM_SLEEP_FRACTIONAL_SECONDS
m4trace:configure.ac:13: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:13: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:13: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:13: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:13: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:13: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:13: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:13: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:13: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:13: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:13: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:13: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:13: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:13: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:13: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:13: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:13: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:13: -1- _AM_PROG_TAR([ustar])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:13: -1- AM_RUN_LOG([$_am_tar --version])
m4trace:configure.ac:13: -1- AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
m4trace:configure.ac:13: -1- AM_RUN_LOG([$am__untar <conftest.tar])
m4trace:configure.ac:13: -1- AM_RUN_LOG([cat conftest.dir/file])
m4trace:configure.ac:13: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:13: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
m4trace:configure.ac:13: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:13: -1- m4_pattern_allow([^CTAGS$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^ETAGS$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^CSCOPE$])
m4trace:configure.ac:13: -1- _AM_SILENT_RULES
m4trace:configure.ac:13: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:13: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:13: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:13: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:13: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:13: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:13: -1- _AM_PROG_RM_F
m4trace:configure.ac:13: -1- m4_pattern_allow([^am__rm_f_notfound$])
m4trace:configure.ac:13: -1- _AM_PROG_XARGS_N
m4trace:configure.ac:13: -1- m4_pattern_allow([^am__xargs_n$])
m4trace:configure.ac:16: -1- AM_MAINTAINER_MODE
m4trace:configure.ac:16: -1- AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])
m4trace:configure.ac:16: -1- m4_pattern_allow([^MAINTAINER_MODE_TRUE$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^MAINTAINER_MODE_FALSE$])
m4trace:configure.ac:16: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_TRUE])
m4trace:configure.ac:16: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_FALSE])
m4trace:configure.ac:16: -1- m4_pattern_allow([^MAINT$])
m4trace:configure.ac:18: -1- m4_include([acinclude/ax_with_prog.m4])
m4trace:acinclude/ax_with_prog.m4:45: -1- AC_DEFUN([AX_WITH_PROG], [
    AC_PREREQ([2.61])

    pushdef([VARIABLE],$1)
    pushdef([EXECUTABLE],$2)
    pushdef([VALUE_IF_NOT_FOUND],$3)
    pushdef([PATH_PROG],$4)

    AC_ARG_VAR(VARIABLE,Absolute path to EXECUTABLE executable)

    AS_IF(test -z "$VARIABLE",[
    	AC_MSG_CHECKING(whether EXECUTABLE executable path has been provided)
        AC_ARG_WITH(EXECUTABLE,AS_HELP_STRING([--with-EXECUTABLE=[[[[PATH]]]]],absolute path to EXECUTABLE executable), [
	    AS_IF([test "$withval" != "yes"],[
	        VARIABLE="$withval"
		AC_MSG_RESULT($VARIABLE)
	    ],[
		VARIABLE=""
	        AC_MSG_RESULT([no])
	    ])
	],[
	    AC_MSG_RESULT([no])
	])

        AS_IF(test -z "$VARIABLE",[
	    AC_PATH_PROG([]VARIABLE[],[]EXECUTABLE[],[]VALUE_IF_NOT_FOUND[],[]PATH_PROG[])
        ])
    ])

    popdef([PATH_PROG])
    popdef([VALUE_IF_NOT_FOUND])
    popdef([EXECUTABLE])
    popdef([VARIABLE])
])
m4trace:configure.ac:19: -1- m4_include([acinclude/init.m4])
m4trace:acinclude/init.m4:10: -1- AC_DEFUN([SQUID_DEFAULT_INCLUDES], [[
/* What a mess.. many systems have added the (now standard) bit types
 * in their own ways, so we need to scan a wide variety of headers to
 * find them..
 * IMPORTANT: Keep compat/types.h syncronised with this list
 */
#if HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#if HAVE_LINUX_TYPES_H
#include <linux/types.h>
#endif
#if HAVE_STDLIB_H
#include <stdlib.h>
#endif
#if HAVE_STDDEF_H
#include <stddef.h>
#endif
#if HAVE_INTTYPES_H
#include <inttypes.h>
#endif
#if HAVE_SYS_BITYPES_H
#include <sys/bitypes.h>
#endif
#if HAVE_SYS_SELECT_H
#include <sys/select.h>
#endif
#if HAVE_NETINET_IN_SYSTM_H
#include <netinet/in_systm.h>
#endif
]])
m4trace:acinclude/init.m4:43: -1- AC_DEFUN([SQUID_BSDNET_INCLUDES], [
SQUID_DEFAULT_INCLUDES
#if HAVE_SYS_PARAM_H
#include <sys/param.h>
#endif
#if HAVE_SYS_TIME_H
#include <sys/time.h>
#endif
#if HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#if HAVE_NET_IF_H
#include <net/if.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#if HAVE_NETINET_IP_H
#include <netinet/ip.h>
#endif
#if HAVE_NETINET_IP_COMPAT_H
#include <netinet/ip_compat.h>
#endif
#if HAVE_NETINET_IP_FIL_H
#include <netinet/ip_fil.h>
#endif
])
m4trace:configure.ac:20: -1- m4_include([acinclude/squid-util.m4])
m4trace:acinclude/squid-util.m4:14: -1- AC_DEFUN([SQUID_STATE_SAVE], [
# save state, key is $1
$1_CFLAGS="${CFLAGS}"
$1_CXXFLAGS="${CXXFLAGS}"
$1_LDFLAGS="${LDFLAGS}"
$1_LIBS="${LIBS}"
$1_CC="${CC}"
$1_CXX="${CXX}"
$1_CPPFLAGS="${CPPFLAGS}"
$1_squid_saved_vars="$2"
for squid_util_var_tosave in $$1_squid_saved_vars
do
    squid_util_var_tosave2="$1_${squid_util_var_tosave}"
    eval "${squid_util_var_tosave2}=\"${squid_util_var_tosave}\""
done
])
m4trace:acinclude/squid-util.m4:34: -1- AC_DEFUN([SQUID_STATE_COMMIT], [
# commit state, key is $1
unset $1_CFLAGS
unset $1_CXXFLAGS
unset $1_LDFLAGS
unset $1_LIBS
unset $1_CC
unset $1_CXX
unset $1_CPPFLAGS
for squid_util_var_tosave in $$1_squid_saved_vars
do
    unset ${squid_util_var_tosave}
done
])
m4trace:acinclude/squid-util.m4:53: -1- AC_DEFUN([SQUID_STATE_ROLLBACK], [
# rollback state, key is $1
CFLAGS="${$1_CFLAGS}"
CXXFLAGS="${$1_CXXFLAGS}"
LDFLAGS="${$1_LDFLAGS}"
LIBS="${$1_LIBS}"
CC="${$1_CC}"
CXX="${$1_CXX}"
CPPFLAGS="${$1_CPPFLAGS}"
for squid_util_var_tosave in $$1_squid_saved_vars
do
    squid_util_var_tosave2="\$$1_${squid_util_var_tosave}"
    eval "$squid_util_var_tosave=\"${squid_util_var_tosave2}\""
done
SQUID_STATE_COMMIT($1)
])
m4trace:acinclude/squid-util.m4:74: -1- AC_DEFUN([SQUID_LOOK_FOR_MODULES], [
$2=""
for dir in $1/*; do
  module="`basename $dir`"
  AS_IF([test -d "$dir" -a "$module" != "CVS"], $2="$$2 $module")
done
])
m4trace:acinclude/squid-util.m4:84: -1- AC_DEFUN([SQUID_CLEANUP_MODULES_LIST], [
squid_cleanup_tmp_outlist=""
for squid_cleanup_tmp in `echo "$$1" | sed -e 's/,/ /g;s/  */ /g'`
do
  squid_cleanup_tmp_dupe=0
  for squid_cleanup_tmp2 in $squid_cleanup_tmp_outlist
  do
    AS_IF([test "$squid_cleanup_tmp" = "$squid_cleanup_tmp2"],[
      squid_cleanup_tmp_dupe=1
      break
    ])
  done
  AS_IF([test $squid_cleanup_tmp_dupe -eq 0],[
    squid_cleanup_tmp_outlist="${squid_cleanup_tmp_outlist} $squid_cleanup_tmp"
  ])
done
$1=`echo "$squid_cleanup_tmp_outlist" | sed -e 's/^ *//'`
unset squid_cleanup_tmp_outlist
unset squid_cleanup_tmp_dupe
unset squid_cleanup_tmp2
unset squid_cleanup_tmp
])
m4trace:acinclude/squid-util.m4:116: -1- AC_DEFUN([SQUID_CHECK_EXISTING_MODULES], [
  for squid_module_check_exist_tmp in $$2
  do
    AS_IF([test -d "$1/$squid_module_check_exist_tmp"],[
      eval "$2_$squid_module_check_exist_tmp='yes'"
      #echo "defining $2_$squid_module_check_exist_tmp"
    ],[
      AC_MSG_ERROR([$squid_module_check_exist_tmp not found in $1])
    ])
  done
])
m4trace:acinclude/squid-util.m4:134: -1- AC_DEFUN([SQUID_CHECK_HELPER], [
  AS_IF([test "x$helper" = "x$1"],[
    AS_IF([test -d "$srcdir/src/$2/$1"],[
      dnl find helpers providing autoconf M4 requirement checks
      m4_include(m4_echo([src/$2/$1/required.m4]))
      dnl find helpers not yet converted to autoconf (or third party drop-in's)
      AS_IF([test -f "$srcdir/src/$2/$1/config.test" && sh "$srcdir/src/$2/$1/config.test" "$squid_host_os"],[
        BUILD_HELPER="$1"
      ])
      AS_IF(
        [test "x$BUILD_HELPER" = "x$1"],
          squid_cv_BUILD_HELPERS="$squid_cv_BUILD_HELPERS $BUILD_HELPER",
        [test "x$auto_helpers" = "xyes"],
          AC_MSG_NOTICE([helper $2/$1 ... found but cannot be built]),
        [AC_MSG_ERROR([required helper $2/$1 ... found but cannot be built])]
      )
    ],[
      AC_MSG_ERROR([helper $2/$1 ... not found])
    ])
    unset BUILD_HELPER
  ])
])
m4trace:acinclude/squid-util.m4:161: -1- AC_DEFUN([SQUID_HELPER_FEATURE_CHECK], [
  auto_helpers=no
  squid_cv_BUILD_HELPERS=""
  AS_IF([test "x$enable_$1" = "x"],[enable_$1=$2],
    [test "x$enable_$1" = "xnone"],[enable_$1=""])
  AS_IF([test "x$enable_$1" = "xyes"],[
    SQUID_LOOK_FOR_MODULES([$srcdir/src/$3], enable_$1)
    auto_helpers=yes
  ])
  SQUID_CLEANUP_MODULES_LIST([enable_$1])
  AC_MSG_NOTICE([checking $3 helpers: $enable_$1])
  AS_IF([test "x$enable_$1" != "xno" -a "x$enable_$1" != "x"],[
    SQUID_CHECK_EXISTING_MODULES([$srcdir/src/$3],[enable_$1])
    for helper in $enable_$1 ; do
      $4
    done
  ])
  AC_MSG_NOTICE([$3 helpers to be built: $squid_cv_BUILD_HELPERS])
  unset auto_helpers
])
m4trace:acinclude/squid-util.m4:183: -1- AC_DEFUN([SQUID_TOLOWER_VAR_CONTENTS], [
  $1=`echo $$1|tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`
])
m4trace:acinclude/squid-util.m4:188: -1- AC_DEFUN([SQUID_TOUPPER_VAR_CONTENTS], [
  $1=`echo $$1|tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ`
])
m4trace:acinclude/squid-util.m4:197: -1- AC_DEFUN([SQUID_DEFINE_BOOL], [
squid_tmp_define=""
AS_CASE(["$2"],
  [yes|true|1],[squid_tmp_define="1"],
  [no|false|0|""],[squid_tmp_define="0"],
  [AC_MSG_ERROR([SQUID_DEFINE[]_BOOL: unrecognized value for $1: '$2'])]
)
ifelse([$#],3,
  [AC_DEFINE_UNQUOTED([$1], [$squid_tmp_define],[$3])],
  [AC_DEFINE_UNQUOTED([$1], [$squid_tmp_define])]
)
unset squid_tmp_define
])
m4trace:acinclude/squid-util.m4:213: -1- AC_DEFUN([SQUID_YESNO], [
  AS_IF([test "$1" != "yes" -a "$1" != "no"],[AC_MSG_ERROR([Bad argument for $2: "$1". Expecting "yes", "no", or no argument.])])
])
m4trace:acinclude/squid-util.m4:227: -1- AC_DEFUN([SQUID_CHECK_LIB_WORKS], [
AH_TEMPLATE(m4_toupper(m4_translit([HAVE_LIB$1], [-+.], [___])),[Define as 1 to enable '$1' library support.])
AS_IF([m4_translit([test "x$with_$1" != "xno"], [-+.], [___])],[
  SQUID_STATE_SAVE(check_lib_works_state)
  $2
  SQUID_STATE_ROLLBACK(check_lib_works_state)
  AS_IF([! test -z m4_toupper(m4_translit(["$LIB$1_LIBS"], [-+.], [___]))],[
    m4_toupper(m4_translit([CPPFLAGS="$LIB$1_CFLAGS $CPPFLAGS"], [-+.], [___]))
    m4_toupper(m4_translit([LIB$1_LIBS="$LIB$1_PATH $LIB$1_LIBS"], [-+.], [___]))
    AC_MSG_NOTICE([Library '$1' support: m4_translit([${with_$1:=yes (auto)} m4_toupper($LIB$1_LIBS)], [-+.], [___])])
    m4_translit([with_$1], [-+.], [___])=yes
    AC_DEFINE(m4_toupper(m4_translit([HAVE_LIB$1], [-+.], [___])),1,[Define as 1 to enable '$1' library support.])
  ],[m4_translit([test "x$with_$1" = "xyes"], [-+.], [___])],[
    AC_MSG_ERROR([Required library '$1' not found])
  ],[
    m4_translit([with_$1], [-+.], [___])=no
    AC_MSG_NOTICE([Library '$1' support: no (auto)])
  ])
])
AM_CONDITIONAL(m4_toupper(m4_translit([ENABLE_LIB$1],[-+.],[___])),m4_translit([test "x$with_$1" != "xno"],[-+.],[___]))
AC_SUBST(m4_toupper(m4_translit([LIB$1_LIBS], [-+.], [___])))
])
m4trace:acinclude/squid-util.m4:255: -1- AC_DEFUN([SQUID_AUTO_LIB], [
  AC_ARG_WITH([$1],AS_HELP_STRING([--without-$1],[Compile without the $2 library.]),[
    AS_CASE(["$withval"],[yes|no],,[
      AS_IF([test ! -d "$withval"],AC_MSG_ERROR([--with-$1 path does not point to a directory]))
      m4_translit([with_$1], [-+.], [___])=yes
      AS_IF([test -d "$withval/lib64"],[$3_PATH+="-L$withval/lib64"])
      AS_IF([test -d "$withval/lib"],[$3_PATH+="-L$withval/lib"])
      AS_IF([test -d "$withval/include"],[$3_CFLAGS+="-I$withval/include"])
    ])
  ])
])
m4trace:acinclude/squid-util.m4:267: -1- AC_DEFUN([SQUID_OPTIONAL_LIB], [
  AC_ARG_WITH([$1],AS_HELP_STRING([--with-$1],[Compile with the $2 library.]),[
    AS_CASE(["$withval"],[yes|no],,[
      AS_IF([test ! -d "$withval"],AC_MSG_ERROR([--with-$1 path does not point to a directory]))
      m4_translit([with_$1], [-+.], [___])=yes
      AS_IF([test -d "$withval/lib64"],[$3_PATH+="-L$withval/lib64"])
      AS_IF([test -d "$withval/lib"],[$3_PATH+="-L$withval/lib"])
      AS_IF([test -d "$withval/include"],[$3_CFLAGS+="-I$withval/include"])
    ])
  ])
  AS_IF([test "x$withval" = "x"],[m4_translit([with_$1], [-+.], [___])=no])
])
m4trace:acinclude/squid-util.m4:280: -1- AC_DEFUN([SQUID_EMBED_BUILD_INFO], [
  AC_ARG_ENABLE([build-info],
    AS_HELP_STRING([--enable-build-info="build info string"],
      [Add an additional string in the output of "squid -v".
       Default is not to add anything. If the string is not specified,
       tries to determine nick and revision number of the current
       bazaar branch]),[
    AS_CASE(["$enableval"],
      [no],[:],
      [yes],[
        AC_PATH_PROG(GIT,git,$FALSE)
        AS_IF([test "x$GIT" != "x$FALSE"],[
          squid_git_branch="`cd ${srcdir} && ${GIT} branch --show-current 2>/dev/null`"
          squid_git_revno="`cd ${srcdir} && ${GIT} rev-parse --short HEAD 2>/dev/null`"
          AS_IF([test "x$squid_git_branch" != "x"], [:], [squid_git_branch="unknown"])
          AS_IF([test "x$squid_git_revno" != "x"],[
            AS_IF([cd ${srcdir} && ! ${GIT} diff --quiet HEAD],[ # there are uncommitted changes
              squid_git_revno="$squid_git_revno plus changes"
            ])
          ])
        ])
        squid_build_info="Git: branch ${squid_git_branch:-unavailable} revision ${squid_git_revno:-unavailable}"
      ],
      [squid_build_info=$enableval]
    )
  ])
  AC_DEFINE_UNQUOTED([SQUID_BUILD_INFO],["$squid_build_info"],
     [Squid extended build info field for "squid -v" output])
])
m4trace:acinclude/squid-util.m4:312: -1- AC_DEFUN([SQUID_SEARCH_LIBS], [AS_VAR_PUSHDEF([ac_Search], [ac_cv_search_$1])dnl
AC_CACHE_CHECK([for library containing $1], [ac_Search],
[ac_func_search_save_LIBS=$LIBS
AC_LANG_CONFTEST([AC_LANG_PROGRAM([$6], [$1()])])
for ac_lib in '' $2; do
  AS_IF([test -z "$ac_lib"],[
    ac_res="none required"
  ],[
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib $5 $ac_func_search_save_LIBS"
  ])
  AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])], [AS_VAR_SET([ac_Search], [$ac_res])])
  AS_VAR_SET_IF([ac_Search], [break])
done
AS_VAR_SET_IF([ac_Search], , [AS_VAR_SET([ac_Search], [no])])
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS])
ac_res=AS_VAR_GET([ac_Search])
AS_IF([test "$ac_res" != no],[
  AS_IF([test "$ac_res" != "none required"],[LIBS="$ac_res $LIBS"])
  $3],[$4])
AS_VAR_POPDEF([ac_Search])dnl
])
m4trace:configure.ac:21: -1- m4_include([acinclude/compiler-flags.m4])
m4trace:acinclude/compiler-flags.m4:13: -1- AC_DEFUN([SQUID_CC_CHECK_ARGUMENT], [
  AC_CACHE_CHECK([whether compiler accepts $2],[$1],
  [
    AC_REQUIRE([AC_PROG_CC])
    SQUID_STATE_SAVE([ARGCHECK])
    CFLAGS="$CFLAGS $2"
    CXXFLAGS="$CXXFLAGS $2"
    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],[$1=yes],[$1=no])
    SQUID_STATE_ROLLBACK([ARGCHECK])
  ])
])
m4trace:acinclude/compiler-flags.m4:34: -1- AC_DEFUN([SQUID_CC_REQUIRE_ARGUMENT], [
  AC_CACHE_CHECK([whether compiler requires $2],[$1],
  [{
    AC_REQUIRE([AC_PROG_CC])
    SQUID_STATE_SAVE([ARGREQ])
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM($3,$4)],[$1=no],[],[$1=no])
    AS_IF([test "x$$1" != "xno"],[
      CFLAGS="$CFLAGS $2"
      CXXFLAGS="$CXXFLAGS $2"
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM($3,$4)],[$1=yes],[$1=no],[$1=no])
    ])
    SQUID_STATE_ROLLBACK([ARGREQ])
  }])
])
m4trace:acinclude/compiler-flags.m4:56: -1- AC_DEFUN([SQUID_CC_GUESS_VARIANT], [
 AC_CACHE_CHECK([what kind of compiler we're using],[squid_cv_compiler],
 [
  AC_REQUIRE([AC_PROG_CC])
  dnl repeat the next block for each compiler, changing the
  dnl preprocessor definition so that it depends on platform-specific
  dnl predefined macros
  dnl SunPro CC
  AS_IF([test -z "$squid_cv_compiler"],[
   AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([[
#if !defined(__SUNPRO_C) && !defined(__SUNPRO_CC)
#error "not sunpro c"
#endif
    ]])],[squid_cv_compiler="sunstudio"],[])
  ])
  dnl Intel CC
  AS_IF([test -z "$squid_cv_compiler"],[
   AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([[
#if !defined(__ICC)
#error "not Intel(R) C++ Compiler"
#endif
    ]])],[squid_cv_compiler="icc"],[])
  ])
  dnl clang
  AS_IF([test -z "$squid_cv_compiler"],[
   AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([[
#if !defined(__clang__)
#error "not clang"
#endif
    ]])],[squid_cv_compiler="clang"],[])
  ])
  dnl microsoft visual c++
  AS_IF([test -z "$squid_cv_compiler"],[
   AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([[
#if !defined(_MSC_VER)
#error "not Microsoft VC++"
#endif
    ]])],[squid_cv_compiler="msvc"],[])
  ])
  dnl gcc. MUST BE LAST as many other compilers also define it for compatibility
  AS_IF([test -z "$squid_cv_compiler"],[
   AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([[
#if !defined(__GNUC__)
#error "not gcc"
#endif
    ]])],[squid_cv_compiler="gcc"],[])
  ])
  dnl end of block to be repeated
  AS_IF([test -z "$squid_cv_compiler"],[squid_cv_compiler="none"])
  ]) dnl AC_CACHE_CHECK
 ])
m4trace:acinclude/compiler-flags.m4:116: -1- AC_DEFUN([SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_], [
  AC_REQUIRE([SQUID_CC_GUESS_VARIANT])
  SQUID_STATE_SAVE([CXXARGTEST])
  CXXFLAGS="$CXXFLAGS $SQUID_CXXFLAGS"
  AS_CASE([$squid_cv_compiler],
    [gcc],[
      # Testing with -Werror -Wfoobar does not work well because GCC ignores
      # unsupported _negative_ options, so we test with -Werror=foobar instead
      # (where "foobar" is a name of a warning that may be given to us in
      # positive -Wfoobar or negative -Wno-foobar form).
      SQUID_CC_CHECK_ARGUMENT([$2],m4_bpatsubst([$1],[^-W],[-Werror=]))
    ],
    [clang],[
      # Testing with -Werror=foobar (as we do for GCC above) is useless
      # because clang does not recognize that pattern as a -Werror
      # specialization, so we test with -Werror -Wfoobar instead.
      SQUID_CC_CHECK_ARGUMENT([$2],[-Werror $1])
    ],
    [
      # We lack code to reliably test whether this compiler supports a given
      # warning. Some compilers (e.g, icc) succeed with bogus warning names.
      # If $squid_cv_cxx_option_werror is set, we add that option because it
      # helps in some (but not all) known cases.
      SQUID_CC_CHECK_ARGUMENT([$2],[$squid_cv_cxx_option_werror $1])
    ]
  )
  SQUID_STATE_ROLLBACK([CXXARGTEST])
  AS_IF([test "x${$2}" = "xyes"],[SQUID_CXXFLAGS="$SQUID_CXXFLAGS $1"])
])
m4trace:acinclude/compiler-flags.m4:149: -1- AC_DEFUN([SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED], [
  SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_($1,m4_bpatsubst(m4_tolower([squid_cv_cc_arg$1]),[[^a-zA-Z0-9_]],[_]))
])
m4trace:acinclude/compiler-flags.m4:164: -1- AC_DEFUN([SQUID_CC_GUESS_OPTIONS], [
  AC_REQUIRE([SQUID_CC_GUESS_VARIANT])
  AC_MSG_CHECKING([for compiler variant])
  AS_CASE([$squid_cv_compiler],
    [gcc],[
      squid_cv_cc_option_werror="-Werror"
      squid_cv_cxx_option_werror="-Werror"
      squid_cv_cc_option_wall="-Wall"
      squid_cv_cc_option_optimize="-O3"
      squid_cv_cc_arg_pipe="-pipe"
    ],
    [sunstudio],[
      squid_cv_cc_option_werror="-errwarn=%all -errtags"
      squid_cv_cxx_option_werror="-errwarn=%all,no%badargtype2w,no%wbadinit,no%wbadasg -errtags"
      squid_cv_cc_option_wall="+w"
      squid_cv_cc_option_optimize="-fast"
      squid_cv_cc_arg_pipe=""
    ],
    [clang],[
      squid_cv_cxx_option_werror="-Werror"
      squid_cv_cc_option_werror="$squid_cv_cxx_option_werror"
      squid_cv_cc_option_wall="-Wall"
      squid_cv_cc_option_optimize="-O2"
      squid_cv_cc_arg_pipe=""
    ],
    [icc],[
      squid_cv_cxx_option_werror="-Werror"
      squid_cv_cc_option_werror="$squid_cv_cxx_option_werror"
      squid_cv_cc_option_wall="-Wall"
      squid_cv_cc_option_optimize="-O2"
      squid_cv_cc_arg_pipe=""
    ],
    [
      squid_cv_cxx_option_werror=""
      squid_cv_cc_option_werror=""
      squid_cv_cc_option_wall=""
      squid_cv_cc_option_optimize="-O"
      squid_cv_cc_arg_pipe=""
    ]
  )
  AC_MSG_RESULT([$squid_cv_compiler])
])
m4trace:configure.ac:22: -1- m4_include([acinclude/os-deps.m4])
m4trace:acinclude/os-deps.m4:10: -1- AC_DEFUN([SQUID_CHECK_EPOLL], [

    AC_CACHE_CHECK(if epoll works, squid_cv_epoll_works,
      AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <sys/epoll.h>
#include <stdlib.h>
#include <stdio.h>
int main(int argc, char **argv)
{
    int fd = epoll_create(256);
    if (fd < 0) {
	perror("epoll_create:");
	return 1;
    }
    return 0;
}
      ]])],[squid_cv_epoll_works=yes],[squid_cv_epoll_works=no],[:]))

])
m4trace:acinclude/os-deps.m4:32: -1- AC_DEFUN([SQUID_CHECK_DEVPOLL], [

    AC_CACHE_CHECK(if /dev/poll works, squid_cv_devpoll_works,
      AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <sys/devpoll.h>
#include <fcntl.h>
#include <stdlib.h>
#include <stdio.h>
int main(int argc, char **argv)
{
    int fd = open("/dev/poll", O_RDWR);
    if (fd < 0) {
       perror("devpoll_create:");
       return 1;
    }
    return 0;
}
      ]])],[squid_cv_devpoll_works=yes],[squid_cv_devpoll_works=no],[:]))

])
m4trace:acinclude/os-deps.m4:56: -1- AC_DEFUN([SQUID_CHECK_FUNCTIONAL_LIBCAP2], [
  AC_CHECK_HEADERS([sys/capability.h])
  AC_CACHE_CHECK([for operational libcap2 headers],
                 squid_cv_sys_capability_works,
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#include <stdlib.h>
#include <stddef.h>
#include <sys/capability.h>
]], [[
    capget(NULL, NULL);
    capset(NULL, NULL);
]])],
   [squid_cv_sys_capability_works=yes],
   [squid_cv_sys_capability_works=no])
  )
])
m4trace:acinclude/os-deps.m4:77: -1- AC_DEFUN([SQUID_CHECK_UNIX_SOCKET], [
  AC_CACHE_CHECK([for unix domain sockets],squid_cv_unixsocket, [
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <stdlib.h>
#include <stddef.h>
#include <sys/socket.h>
#include <sys/un.h>]], [[
  struct sockaddr_un sunaddr;
  sunaddr.sun_family = AF_UNIX;
  ]])],[squid_cv_unixsocket=yes],[squid_cv_unixsocket=no])])
])
m4trace:acinclude/os-deps.m4:95: -1- AC_DEFUN([SQUID_CHECK_DEFAULT_FD_SETSIZE], [
AC_MSG_CHECKING(Default FD_SETSIZE value)
AC_RUN_IFELSE([AC_LANG_SOURCE([[
#if HAVE_STDIO_H
#include <stdio.h>
#endif
#if HAVE_UNISTD_H
#include <unistd.h>
#endif
#if HAVE_STDLIB_H
#include <stdlib.h>
#endif
#if HAVE_SYS_TIME_H
#include <sys/time.h>
#endif
#if HAVE_SYS_SELECT_H
#include <sys/select.h>
#endif
#if HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#if HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
int main(int argc, char **argv) {
	FILE *fp = fopen("conftestval", "w");
	fprintf (fp, "%d\n", FD_SETSIZE);
	return 0;
}
]])],[DEFAULT_FD_SETSIZE=`cat conftestval`],[DEFAULT_FD_SETSIZE=256],[DEFAULT_FD_SETSIZE=256])
AC_MSG_RESULT($DEFAULT_FD_SETSIZE)
AC_DEFINE_UNQUOTED(DEFAULT_FD_SETSIZE, $DEFAULT_FD_SETSIZE, [Default FD_SETSIZE value])
])
m4trace:acinclude/os-deps.m4:133: -1- AC_DEFUN([SQUID_CHECK_MAXFD], [
AC_CHECK_FUNCS(getrlimit setrlimit)
AC_MSG_CHECKING(Maximum number of filedescriptors we can open)
SQUID_STATE_SAVE(maxfd)
dnl FreeBSD pthreads break dup2().
  AS_CASE([$host_os],[freebsd],[ LDFLAGS=`echo $LDFLAGS | sed -e "s/-pthread//"` ])
  AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/time.h>	/* needed on FreeBSD */
#include <sys/param.h>
#include <sys/resource.h>
int main(int argc, char **argv) {
	FILE *fp;
	int i,j;
#if defined(__CYGWIN32__) || defined (__CYGWIN__)
    /* getrlimit and sysconf returns bogous values on cygwin32.
     * Number of fds is virtually unlimited in cygwin (sys/param.h)
     * __CYGWIN32__ is deprecated.
     */
    i = NOFILE;
#else
#if HAVE_GETRLIMIT && HAVE_SETRLIMIT
    struct rlimit rl;
#if defined(RLIMIT_NOFILE)
    if (getrlimit(RLIMIT_NOFILE, &rl) < 0) {
        perror("getrlimit: RLIMIT_NOFILE");
    } else {
#if defined(__APPLE__)
        /* asking for more than OPEN_MAX fails on Leopard */
        rl.rlim_cur = (OPEN_MAX < rl.rlim_max ? OPEN_MAX : rl.rlim_max);
#else
        rl.rlim_cur = rl.rlim_max;      /* set it to the max */
#endif
        if (setrlimit(RLIMIT_NOFILE, &rl) < 0) {
            perror("setrlimit: RLIMIT_NOFILE");
        }
    }
#elif defined(RLIMIT_OFILE)
    if (getrlimit(RLIMIT_OFILE, &rl) < 0) {
        perror("getrlimit: RLIMIT_OFILE");
    } else {
        rl.rlim_cur = rl.rlim_max;      /* set it to the max */
        if (setrlimit(RLIMIT_OFILE, &rl) < 0) {
            perror("setrlimit: RLIMIT_OFILE");
        }
    }
#endif /* RLIMIT_NOFILE */
#endif /* HAVE_SETRLIMIT */
	/* by starting at 2^14, we will never get higher
	than 2^15 for squid_filedescriptors_num */
        i = j = 1<<14;
        while (j) {
                j >>= 1;
                if (dup2(0, i) < 0) {
                        i -= j;
                } else {
                        close(i);
                        i += j;
                }
        }
        i++;
#endif /* IF !DEF CYGWIN */
	fp = fopen("conftestval", "w");
	fprintf (fp, "%d\n", i & ~0x3F);
	return 0;
}
  ]])],[squid_filedescriptors_limit=`cat conftestval`],[],[:])
  dnl Microsoft MSVCRT.DLL supports 2048 maximum FDs
  AS_CASE(["$host_os"],[mingw|mingw32],[squid_filedescriptors_limit="2048"])
  AC_MSG_RESULT($squid_filedescriptors_limit)
  AS_IF([test "x$squid_filedescriptors_num" = "x"],[
    AS_IF([test "x$squid_filedescriptors_limit" != "x"],[
      squid_filedescriptors_num=$squid_filedescriptors_limit
    ],[
      AC_MSG_NOTICE([Unable to detect filedescriptor limits. Assuming 256 is okay.])
      squid_filedescriptors_num=256
    ])
  ])
SQUID_STATE_ROLLBACK(maxfd)

AC_MSG_NOTICE([Default number of filedescriptors: $squid_filedescriptors_num])

AS_IF([ test `expr $squid_filedescriptors_num % 64` != 0 ],[
  AC_MSG_WARN([$squid_filedescriptors_num is not an multiple of 64. This may cause issues on certain platforms.])
])

AS_IF([ test "$squid_filedescriptors_num" -lt 512 ],[
  AC_MSG_WARN([$squid_filedescriptors_num may not be enough filedescriptors if your])
  AC_MSG_WARN([cache will be very busy.  Please see the FAQ page])
  AC_MSG_WARN([https://wiki.squid-cache.org/SquidFaq/TroubleShooting])
  AC_MSG_WARN([on how to increase your filedescriptor limit])
])
AC_DEFINE_UNQUOTED(SQUID_MAXFD,$squid_filedescriptors_num,[Maximum number of open filedescriptors])
])
m4trace:acinclude/os-deps.m4:235: -1- AC_DEFUN([SQUID_CHECK_SIN6_LEN_IN_SAI], [
AC_CACHE_CHECK([for sin6_len field in struct sockaddr_in6],
                ac_cv_have_sin6_len_in_struct_sai, [
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
              ]], [[ struct sockaddr_in6 s; s.sin6_len = 1; ]])],[ ac_cv_have_sin6_len_in_struct_sai="yes" ],[ ac_cv_have_sin6_len_in_struct_sai="no"
      ])
])
SQUID_DEFINE_BOOL(HAVE_SIN6_LEN_IN_SAI,$ac_cv_have_sin6_len_in_struct_sai,
      [Defined if struct sockaddr_in6 has sin6_len])
])
m4trace:acinclude/os-deps.m4:254: -1- AC_DEFUN([SQUID_CHECK_SS_LEN_IN_SOCKADDR_STORAGE], [
AC_CACHE_CHECK([for ss_len field in struct sockaddr_storage],
		ac_cv_have_ss_len_in_struct_ss, [
	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
		]], [[ struct sockaddr_storage s; s.ss_len = 1; ]])],[ ac_cv_have_ss_len_in_struct_ss="yes" ],[ ac_cv_have_ss_len_in_struct_ss="no"
	])
])
SQUID_DEFINE_BOOL(HAVE_SS_LEN_IN_SS,$ac_cv_have_ss_len_in_struct_ss,
   [Define if sockaddr_storage has field ss_len])
])
m4trace:acinclude/os-deps.m4:273: -1- AC_DEFUN([SQUID_CHECK_SIN_LEN_IN_SOCKADDR_IN], [
AC_CACHE_CHECK([for sin_len field in struct sockaddr_in],
                ac_cv_have_sin_len_in_struct_sai, [
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
                ]], [[ struct sockaddr_in s; s.sin_len = 1; ]])],[ ac_cv_have_sin_len_in_struct_sai="yes" ],[ ac_cv_have_sin_len_in_struct_sai="no"
        ])
])
SQUID_DEFINE_BOOL(HAVE_SIN_LEN_IN_SAI,$ac_cv_have_sin_len_in_struct_sai,[Define if sockaddr_in has field sin_len])
])
m4trace:acinclude/os-deps.m4:291: -1- AC_DEFUN([SQUID_DETECT_UDP_SND_BUFSIZE], [
AC_MSG_CHECKING(Default UDP send buffer size)
AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <stdlib.h>
#include <stdio.h>
#include <sys/types.h>
#if HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#if HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
int main(int argc, char **argv)
{
	FILE *fp;
        int fd,val=0;
#if (defined(WIN32) || defined(__WIN32__) || defined(__WIN32)) && !(defined(__CYGWIN32__) || defined(__CYGWIN__))
        int len=sizeof(int);
	WSADATA wsaData;
	WSAStartup(2, &wsaData);
#else
        socklen_t len=sizeof(socklen_t);
#endif
	if ((fd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) return 1;
#if (defined(WIN32) || defined(__WIN32__) || defined(__WIN32)) && !(defined(__CYGWIN32__) || defined(__CYGWIN__))
        if (getsockopt(fd, SOL_SOCKET, SO_SNDBUF, (char *)&val, &len) < 0) return 1;
	WSACleanup();
#else
        if (getsockopt(fd, SOL_SOCKET, SO_SNDBUF, &val, &len) < 0) return 1;
#endif
	if (val<=0) return 1;
        fp = fopen("conftestval", "w");
        fprintf (fp, "%d\n", val);
	return 0;
}
]])],[SQUID_DETECT_UDP_SO_SNDBUF=`cat conftestval`],[SQUID_DETECT_UDP_SO_SNDBUF=16384],[SQUID_DETECT_UDP_SO_SNDBUF=16384])
AC_MSG_RESULT($SQUID_DETECT_UDP_SO_SNDBUF)
AC_DEFINE_UNQUOTED(SQUID_DETECT_UDP_SO_SNDBUF, $SQUID_DETECT_UDP_SO_SNDBUF,[UDP send buffer size])
])
m4trace:acinclude/os-deps.m4:339: -1- AC_DEFUN([SQUID_DETECT_UDP_RECV_BUFSIZE], [
AC_MSG_CHECKING(Default UDP receive buffer size)
AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <stdlib.h>
#include <stdio.h>
#include <sys/types.h>
#if HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#if HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
int main(int argc, char **argv)
{
	FILE *fp;
        int fd,val=0;
#if (defined(WIN32) || defined(__WIN32__) || defined(__WIN32)) && !(defined(__CYGWIN32__) || defined(__CYGWIN__))
        int len=sizeof(int);
	WSADATA wsaData;
	WSAStartup(2, &wsaData);
#else
        socklen_t len=sizeof(socklen_t);
#endif
	if ((fd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) return 1;
#if (defined(WIN32) || defined(__WIN32__) || defined(__WIN32)) && !(defined(__CYGWIN32__) || defined(__CYGWIN__))
        if (getsockopt(fd, SOL_SOCKET, SO_RCVBUF, (char *)&val, &len) < 0) return 1;
	WSACleanup();
#else
        if (getsockopt(fd, SOL_SOCKET, SO_RCVBUF, &val, &len) < 0) return 1;
#endif
	if (val <= 0) return 1;
	fp = fopen("conftestval", "w");
	fprintf (fp, "%d\n", val);
	return 0;
}
]])],[SQUID_DETECT_UDP_SO_RCVBUF=`cat conftestval`],[SQUID_DETECT_UDP_SO_RCVBUF=16384],[SQUID_DETECT_UDP_SO_RCVBUF=16384])
AC_MSG_RESULT($SQUID_DETECT_UDP_SO_RCVBUF)
AC_DEFINE_UNQUOTED(SQUID_DETECT_UDP_SO_RCVBUF, $SQUID_DETECT_UDP_SO_RCVBUF,[UDP receive buffer size])
])
m4trace:acinclude/os-deps.m4:387: -1- AC_DEFUN([SQUID_DETECT_TCP_SND_BUFSIZE], [
AC_MSG_CHECKING(Default TCP send buffer size)
AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <stdlib.h>
#include <stdio.h>
#include <sys/types.h>
#if HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#if HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
int main(int argc, char **argv)
{
	FILE *fp;
        int fd,val=0;
#if (defined(WIN32) || defined(__WIN32__) || defined(__WIN32)) && !(defined(__CYGWIN32__) || defined(__CYGWIN__))
        int len=sizeof(int);
	WSADATA wsaData;
	WSAStartup(2, &wsaData);
#else
        socklen_t len=sizeof(socklen_t);
#endif
	if ((fd = socket(AF_INET, SOCK_STREAM, 0)) < 0) return 1;
#if (defined(WIN32) || defined(__WIN32__) || defined(__WIN32)) && !(defined(__CYGWIN32__) || defined(__CYGWIN__))
        if (getsockopt(fd, SOL_SOCKET, SO_SNDBUF, (char *)&val, &len) < 0) return 1;
	WSACleanup();
#else
        if (getsockopt(fd, SOL_SOCKET, SO_SNDBUF, &val, &len) < 0) return 1;
#endif
	if (val <= 0) return 1;
	fp = fopen("conftestval", "w");
	fprintf (fp, "%d\n", val);
	return 0;
}
]])],[SQUID_TCP_SO_SNDBUF=`cat conftestval`],[SQUID_TCP_SO_SNDBUF=16384],[SQUID_TCP_SO_SNDBUF=16384])
  AC_MSG_RESULT($SQUID_TCP_SO_SNDBUF)
  AS_IF([test $SQUID_TCP_SO_SNDBUF -gt 32768],[
    AC_MSG_NOTICE([Limiting send buffer size to 32K])
    SQUID_TCP_SO_SNDBUF=32768
  ])
  AC_DEFINE_UNQUOTED(SQUID_TCP_SO_SNDBUF, $SQUID_TCP_SO_SNDBUF,[TCP send buffer size])
])
m4trace:acinclude/os-deps.m4:439: -1- AC_DEFUN([SQUID_DETECT_TCP_RECV_BUFSIZE], [
AC_MSG_CHECKING(Default TCP receive buffer size)
AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <stdlib.h>
#include <stdio.h>
#include <sys/types.h>
#if HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#if HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
int main(int argc, char **argv)
{
	FILE *fp;
        int fd,val=0;
#if (defined(WIN32) || defined(__WIN32__) || defined(__WIN32)) && !(defined(__CYGWIN32__) || defined(__CYGWIN__))
        int len=sizeof(int);
	WSADATA wsaData;
	WSAStartup(2, &wsaData);
#else
        socklen_t len=sizeof(socklen_t);
#endif
	if ((fd = socket(AF_INET, SOCK_STREAM, 0)) < 0) return 1;
#if (defined(WIN32) || defined(__WIN32__) || defined(__WIN32)) && !(defined(__CYGWIN32__) || defined(__CYGWIN__))
        if (getsockopt(fd, SOL_SOCKET, SO_RCVBUF, (char *)&val, &len) < 0) return 1;
	WSACleanup();
#else
        if (getsockopt(fd, SOL_SOCKET, SO_RCVBUF, &val, &len) < 0) return 1;
#endif
	if (val <= 0) return 1;
	fp = fopen("conftestval", "w");
	fprintf (fp, "%d\n", val);
	return 0;
}
]])],[SQUID_TCP_SO_RCVBUF=`cat conftestval`],[SQUID_TCP_SO_RCVBUF=16384],[SQUID_TCP_SO_RCVBUF=16384])
  AC_MSG_RESULT($SQUID_TCP_SO_RCVBUF)
  AS_IF([test $SQUID_TCP_SO_RCVBUF -gt 65535],[
    AC_MSG_NOTICE([Limiting receive buffer size to 64K])
    SQUID_TCP_SO_RCVBUF=65535
  ])
  AC_DEFINE_UNQUOTED(SQUID_TCP_SO_RCVBUF, $SQUID_TCP_SO_RCVBUF, [TCP receive buffer size])
])
m4trace:acinclude/os-deps.m4:490: -1- AC_DEFUN([SQUID_CHECK_NEED_SYS_ERRLIST], [
AC_CACHE_CHECK(if sys_errlist is already defined, ac_cv_needs_sys_errlist,
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>]], [[char *s = sys_errlist;]])],[ac_cv_needs_sys_errlist="no"],[ac_cv_needs_sys_errlist="yes"])
)
SQUID_DEFINE_BOOL(NEED_SYS_ERRLIST,$ac_cv_needs_sys_errlist,[If we need to declare sys_errlist as extern])
])
m4trace:acinclude/os-deps.m4:501: -1- AC_DEFUN([SQUID_CHECK_MAXPATHLEN], [
AC_MSG_CHECKING(for system-provided MAXPATHLEN)
AC_LINK_IFELSE([
  AC_LANG_PROGRAM([[
#include <sys/param.h>]], [[
int i = MAXPATHLEN;]])], [
  AC_MSG_RESULT(yes)], [
  AC_MSG_RESULT(no)
  AC_DEFINE(MAXPATHLEN,256,[If MAXPATHLEN has not been defined])])
])
m4trace:acinclude/os-deps.m4:516: -1- AC_DEFUN([SQUID_CHECK_WORKING_STATVFS], [
AC_CACHE_CHECK(for working statvfs() interface,ac_cv_func_statvfs,[
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <stdlib.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/statvfs.h>
]], [[
struct statvfs sfs;
sfs.f_blocks = sfs.f_bfree = sfs.f_frsize =
sfs.f_files = sfs.f_ffree = 0;
statvfs("/tmp", &sfs);
]])],[ac_cv_func_statvfs=yes],[ac_cv_func_statvfs=no])
])
SQUID_DEFINE_BOOL(HAVE_STATVFS,$ac_cv_func_statvfs,[set to 1 if our system has statvfs(), and if it actually works])
])
m4trace:acinclude/os-deps.m4:535: -1- AC_DEFUN([SQUID_CHECK_F_FRSIZE_IN_STATFS], [
AC_CACHE_CHECK([for f_frsize field in struct statfs],
                ac_cv_have_f_frsize_in_struct_statfs, [
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#if HAVE_SYS_STATFS_H
#include <sts/statfs.h>
#endif
#if HAVE_SYS_STATVFS_H
#include <sts/statvfs.h>
#endif
#if HAVE_SYS_VFS_H
#include <sts/vfs.h>
#endif
                ]], [[ struct statfs s; s.f_frsize = 0; ]])],[ ac_cv_have_f_frsize_in_struct_statfs="yes" ],[ ac_cv_have_f_frsize_in_struct_statfs="no"
        ])
])
SQUID_DEFINE_BOOL(HAVE_F_FRSIZE_IN_STATFS,$ac_cv_have_f_frsize_in_struct_statfs,[Define if struct statfs has field f_frsize (Linux 2.6 or later)])
])
m4trace:acinclude/os-deps.m4:558: -1- AC_DEFUN([SQUID_CHECK_LIBRESOLV_DNS_TTL_HACK], [
  AC_CACHE_CHECK(for libresolv _dns_ttl_ hack, ac_cv_libresolv_dns_ttl_hack, [
   AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern int _dns_ttl_;]], [[return _dns_ttl_;]])],
     [ac_cv_libresolv_dns_ttl_hack=yes],[ac_cv_libresolv_dns_ttl_hack=no]) ])
  SQUID_DEFINE_BOOL(LIBRESOLV_DNS_TTL_HACK,$ac_cv_libresolv_dns_ttl_hack,
     [libresolv.a has been hacked to export _dns_ttl_])
])
m4trace:acinclude/os-deps.m4:573: -1- AC_DEFUN([SQUID_CHECK_RESOLVER_FIELDS], [
  AC_CACHE_CHECK(for _res_ext.nsaddr_list, ac_cv_have_res_ext_nsaddr_list,
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#if HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#if HAVE_ARPA_INET_H
#include <arpa/inet.h>
#endif
#if HAVE_ARPA_NAMESER_H
#include <arpa/nameser.h>
#endif
#if HAVE_RESOLV_H
#include <resolv.h>
#endif
    ]],
    [[_res_ext.nsaddr_list[[0]].s_addr;]])],[
      ac_cv_have_res_ext_nsaddr_list="yes" ],[
      ac_cv_have_res_ext_nsaddr_list="no"]))
  AS_IF([test "x$ac_cv_have_res_ext_nsaddr_list" = "xyes"],[
    AC_DEFINE(_SQUID_RES_NSADDR6_LARRAY,_res_ext.nsaddr_list,[If _res_ext structure has nsaddr_list member])
    AC_DEFINE(_SQUID_RES_NSADDR6_COUNT,ns6count,[Nameserver Counter for IPv6 _res_ext])
  ])

AS_IF([test "x$_SQUID_RES_NSADDR6_LIST" = "x"],[
  AC_CACHE_CHECK(for _res._u._ext.nsaddrs, ac_cv_have_res_ext_nsaddrs,
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#if HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#if HAVE_ARPA_INET_H
#include <arpa/inet.h>
#endif
#if HAVE_ARPA_NAMESER_H
#include <arpa/nameser.h>
#endif
#if HAVE_RESOLV_H
#include <resolv.h>
#endif
    ]], i
    [[_res._u._ext.nsaddrs[[0]]->sin6_addr;]])],
    [ac_cv_have_res_ext_nsaddrs="yes"],[ac_cv_have_res_ext_nsaddrs="no"]))
  AS_IF([test "x$ac_cv_have_res_ext_nsaddrs" = "xyes"],[
    AC_DEFINE(_SQUID_RES_NSADDR6_LPTR,_res._u._ext.nsaddrs,[If _res structure has _ext.nsaddrs member])
    AC_DEFINE(_SQUID_RES_NSADDR6_COUNT,_res._u._ext.nscount6,[Nameserver Counter for IPv6 _res])
  ])
])

AC_CACHE_CHECK(for _res.nsaddr_list, ac_cv_have_res_nsaddr_list,
  AC_COMPILE_IFELSE([
    AC_LANG_PROGRAM([[
#if HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#if HAVE_ARPA_INET_H
#include <arpa/inet.h>
#endif
#if HAVE_ARPA_NAMESER_H
#include <arpa/nameser.h>
#endif
#if HAVE_RESOLV_H
#include <resolv.h>
#endif
  ]], [[_res.nsaddr_list[[0]];]])],
  [ac_cv_have_res_nsaddr_list="yes"],[ac_cv_have_res_nsaddr_list="no"]))
  AS_IF([test "x$ac_cv_have_res_nsaddr_list" = "xyes"],[
    AC_DEFINE(_SQUID_RES_NSADDR_LIST,_res.nsaddr_list,[If _res structure has nsaddr_list member])
    AC_DEFINE(_SQUID_RES_NSADDR_COUNT,_res.nscount,[Nameserver counter for IPv4 _res])
  ])

  AS_IF([test "x$_SQUID_RES_NSADDR_LIST" = "x"],[
    AC_CACHE_CHECK(for _res.ns_list, ac_cv_have_res_ns_list,
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#if HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#if HAVE_ARPA_INET_H
#include <arpa/inet.h>
#endif
#if HAVE_ARPA_NAMESER_H
#include <arpa/nameser.h>
#endif
#if HAVE_RESOLV_H
#include <resolv.h>
#endif
  ]],[[_res.ns_list[[0]].addr;]])],
  [ac_cv_have_res_ns_list="yes"],[ac_cv_have_res_ns_list="no"]))
    AS_IF([test "x$ac_cv_have_res_ns_list" = "xyes"],[
      AC_DEFINE(_SQUID_RES_NSADDR_LIST,_res.ns_list,[If _res structure has ns_list member])
      AC_DEFINE(_SQUID_RES_NSADDR_COUNT,_res.nscount,[Nameserver counter for IPv4 _res])
    ])
  ])
])
m4trace:acinclude/os-deps.m4:682: -1- AC_DEFUN([SQUID_CHECK_WINSOCK_LIB], [
  AC_CHECK_HEADERS(winsock2.h)
  SQUID_STATE_SAVE(winsock)
  SQUID_SEARCH_LIBS([squid_getprotobynumber],[ws2_32],,,,[
#if HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
/* ugly hack. */
void squid_getprotobynumber(void) {
    getprotobynumber(1);
}
  ])
  AC_MSG_CHECKING([for winsock library])
  AS_CASE(["$ac_cv_search_squid_getprotobynumber"],
    ["no"],[AC_MSG_RESULT([winsock library not found])],
    ["none required"],[AC_MSG_RESULT([winsock library already in LIBS])],
    ["-lws2_32"],[
      AC_MSG_RESULT([winsock2])
      XTRA_LIBS="-lws2_32 $XTRA_LIBS"
      ac_cv_func_select="yes"
    ]
  )
  SQUID_STATE_ROLLBACK(winsock)
])
m4trace:acinclude/os-deps.m4:708: -1- AC_DEFUN([SQUID_CHECK_BROKEN_SOLARIS_IPFILTER], [
  AS_IF([test "x$squid_cv_broken_ipfilter_minor_t" = "x"],[
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#     include <sys/types.h>
#     include <sys/time.h>
#     include <sys/ioccom.h>
#     include <netinet/in.h>

#     include <netinet/ip_compat.h>
#     include <netinet/ip_fil.h>
#     include <netinet/ip_nat.h>
    ]])],[
      AC_MSG_RESULT(no)
      squid_cv_broken_ipfilter_minor_t=0
    ],[
      ## on fail, test the hack
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#define minor_t fubaar
#       include <sys/types.h>
#       include <sys/time.h>
#       include <sys/ioccom.h>
#       include <netinet/in.h>
#undef minor_t
#       include <netinet/ip_compat.h>
#       include <netinet/ip_fil.h>
#       include <netinet/ip_nat.h>
      ]])],[
        AC_MSG_RESULT(yes)
        squid_cv_broken_ipfilter_minor_t=1
      ],[
        AC_MSG_ERROR(unable to make IPFilter work with netinet/ headers)
      ])
    ])
  ])

  AC_DEFINE_UNQUOTED(USE_SOLARIS_IPFILTER_MINOR_T_HACK,$squid_cv_broken_ipfilter_minor_t,
    [Workaround IPFilter minor_t breakage])

## check for IPFilter headers that require this hack
## (but first netinet/in.h and sys/ioccom.h which they depend on)
  AC_CHECK_HEADERS( \
	netinet/in.h \
	sys/ioccom.h \
	ip_compat.h \
	ip_fil_compat.h \
	ip_fil.h \
	ip_nat.h \
	netinet/ip_compat.h \
	netinet/ip_fil_compat.h \
	netinet/ip_fil.h \
	netinet/ip_nat.h \
  ,,,[
#if USE_SOLARIS_IPFILTER_MINOR_T_HACK
#define minor_t fubar
#endif
#if HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#if HAVE_SYS_TIME_H
#include <sys/time.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#if HAVE_SYS_IOCCOM_H
#include <sys/ioccom.h>
#endif
#if USE_SOLARIS_IPFILTER_MINOR_T_HACK
#undef minor_t
#endif
#if HAVE_IP_COMPAT_H
#include <ip_compat.h>
#elif HAVE_NETINET_IP_COMPAT_H
#include <netinet/ip_compat.h>
#endif
#if HAVE_IP_FIL_H
#include <ip_fil.h>
#elif HAVE_NETINET_IP_FIL_H
#include <netinet/ip_fil.h>
#endif
#if !defined(IPFILTER_VERSION)
#define IPFILTER_VERSION        5000004
#endif
  ])

## Solaris 10+ backported IPv6 NAT to their IPFilter v4.1 instead of using v5
  AC_CHECK_MEMBERS([
    struct natlookup.nl_inipaddr.in6,
    struct natlookup.nl_realipaddr.in6],,,[
#if USE_SOLARIS_IPFILTER_MINOR_T_HACK
#define minor_t fubar
#endif
#if HAVE_SYS_PARAM_H
#include <sys/param.h>
#endif
#if HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#if HAVE_SYS_TIME_H
#include <sys/time.h>
#endif
#if HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#if HAVE_SYS_IOCCOM_H
#include <sys/ioccom.h>
#endif
#if USE_SOLARIS_IPFILTER_MINOR_T_HACK
#undef minor_t
#endif
#if HAVE_IP_COMPAT_H
#include <ip_compat.h>
#elif HAVE_NETINET_IP_COMPAT_H
#include <netinet/ip_compat.h>
#endif
#if HAVE_IP_FIL_H
#include <ip_fil.h>
#elif HAVE_NETINET_IP_FIL_H
#include <netinet/ip_fil.h>
#endif
#if HAVE_IP_NAT_H
#include <ip_nat.h>
#elif HAVE_NETINET_IP_NAT_H
#include <netinet/ip_nat.h>
#endif
  ])

])
m4trace:configure.ac:23: -1- m4_include([acinclude/krb5.m4])
m4trace:acinclude/krb5.m4:11: -1- AC_DEFUN([SQUID_CHECK_SOLARIS_KRB5], [
  # no pkg-config for solaris native Kerberos
  AS_IF([test "$cross_compiling" = "no" -a "x$with_mit_krb5" != "xyes" -a "x$with_mit_krb5" != "xno"],[
    AC_PATH_PROG(krb5_config,krb5-config,no,[$PATH:$with_mit_krb5/bin])
  ])
  AC_MSG_NOTICE([Use krb5-config to get CFLAGS and LIBS])
  LIBMIT_KRB5_CFLAGS="-I/usr/include/kerberosv5 `$ac_krb5_config --cflags krb5 2>/dev/null`"
  LIBMIT_KRB5_LIBS="`$ac_krb5_config --libs krb5 2>/dev/null`"
  # Solaris 10 Update 11 patches the krb5-config tool to produce stderr messages on stdout.
  SOLARIS_BROKEN_KRB5CONFIG_GSSAPI="`$ac_krb5_config --libs gssapi 2>/dev/null | grep "krb5-config"`"
  AS_IF([test "x$SOLARIS_BROKEN_KRB5CONFIG_GSSAPI" = "x"],[
    LIBMIT_KRB5_CFLAGS="$LIBMIT_KRB5_CFLAGS `$ac_krb5_config --cflags gssapi 2>/dev/null`"
    LIBMIT_KRB5_LIBS="$LIBMIT_KRB5_LIBS `$ac_krb5_config --libs gssapi 2>/dev/null`"
  ])
  CPPFLAGS="$LIBMIT_KRB5_CFLAGS $CPPFLAGS"
  LIBS="$LIBMIT_KRB5_LIBS $LIBS"
  missing_required=no
  AC_MSG_NOTICE([Try to find Kerberos libraries in given path])
  AC_CHECK_LIB(krb5, [main], [LIBMIT_KRB5_LIBS="$LIBMIT_KRB5_LIBS -lkrb5"],[
    AC_MSG_WARN([library 'krb5' is required for Solaris Kerberos])
    missing_required=yes
  ])
  AC_CHECK_LIB(gss, [main], [LIBMIT_KRB5_LIBS="$LIBMIT_KRB5_LIBS -lgss"],[
    AC_MSG_WARN([library 'gss' is required for Solaris Kerberos])
    missing_required=yes
  ])
  AS_IF([test "x$missing_required" = "xyes"],[LIBMIT_KRB5_LIBS=""],[
    LIBS="$LIBMIT_KRB5_LIBS $LIBS"
    AC_DEFINE(USE_SOLARIS_KRB5,1,[Solaris Kerberos support is available])
    SQUID_CHECK_KRB5_SOLARIS_BROKEN_KRB5_H
    AS_IF([test "x$squid_cv_broken_krb5_h" = "xyes"],[
      AC_DEFINE(HAVE_BROKEN_SOLARIS_KRB5_H, 1, [Define to 1 if Solaris krb5.h is broken for C++])
      AC_MSG_WARN([You have a broken Solaris <krb5.h> system include.])
      AC_MSG_WARN([Please see http://bugs.opensolaris.org/bugdatabase/view_bug.do?bug_id=6837512])
      AC_MSG_WARN([If you need Kerberos support you will have to patch])
      AC_MSG_WARN([your system. See contrib/solaris/solaris-krb5-include.patch])
    ])
    AC_CHECK_HEADERS(gssapi.h gssapi/gssapi.h gssapi/gssapi_krb5.h)
    AC_CHECK_HEADERS(gssapi/gssapi_ext.h gssapi/gssapi_generic.h)
    AC_CHECK_HEADERS(krb5.h com_err.h et/com_err.h)
    AC_CHECK_HEADERS(profile.h)
    SQUID_CHECK_KRB5_FUNCS
  ])
])
m4trace:acinclude/krb5.m4:58: -1- AC_DEFUN([SQUID_CHECK_KRB5_SOLARIS_BROKEN_KRB5_H], [
  AC_CACHE_CHECK([for broken Solaris krb5.h],squid_cv_broken_krb5_h, [
    SQUID_STATE_SAVE(squid_krb5_solaris_test)
    CPPFLAGS="-I${srcdir:-.} $CPPFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <krb5.h>
int i;
]])], [ squid_cv_broken_krb5_h=no ], [
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#define HAVE_BROKEN_SOLARIS_KRB5_H  1
#include "compat/krb5.h"
int i;
]])], [ squid_cv_broken_krb5_h=yes ], [ squid_cv_broken_krb5_h=no ])
    ])
    SQUID_STATE_ROLLBACK(squid_krb5_solaris_test)
  ])
])
m4trace:acinclude/krb5.m4:77: -1- AC_DEFUN([SQUID_CHECK_KRB5_HEIMDAL_BROKEN_KRB5_H], [
  AC_CACHE_CHECK([for broken Heimdal krb5.h],squid_cv_broken_heimdal_krb5_h, [
    SQUID_STATE_SAVE(squid_krb5_heimdal_test)
    CPPFLAGS="-I${srcdir:-.} $CPPFLAGS"
    AC_LINK_IFELSE([AC_LANG_SOURCE([[
#include <krb5.h>
int
main(void)
{
        krb5_context context;
        krb5_init_context(&context);
        return 0;
}
]])], [ squid_cv_broken_heimdal_krb5_h=no ], [
    AC_LINK_IFELSE([AC_LANG_SOURCE([[
#define HAVE_BROKEN_HEIMDAL_KRB5_H  1
#include "compat/krb5.h"
int
main(void)
{
        krb5_context context;
        krb5_init_context(&context);
        return 0;
}
]])], [ squid_cv_broken_heimdal_krb5_h=yes ], [ squid_cv_broken_heimdal_krb5_h=no ])
    ])
    SQUID_STATE_ROLLBACK(squid_krb5_heimdal_test)
  ])
  SQUID_DEFINE_BOOL(HAVE_BROKEN_HEIMDAL_KRB5_H,$squid_cv_broken_heimdal_krb5_h,[Heimdal krb5.h is broken for C++])
])
m4trace:acinclude/krb5.m4:109: -1- AC_DEFUN([SQUID_CHECK_MAX_SKEW_IN_KRB5_CONTEXT], [
  AC_CACHE_CHECK([for max_skew in struct krb5_context],
                  squid_cv_max_skew_context, [
    SQUID_STATE_SAVE(squid_krb5_test)
    CPPFLAGS="-I${srcdir:-.} $CPPFLAGS"
    AC_COMPILE_IFELSE([
      AC_LANG_PROGRAM([[
#include "compat/krb5.h"
krb5_context kc; kc->max_skew = 1;
      ]])
    ],[ squid_cv_max_skew_context=yes ],
    [ squid_cv_max_skew_context=no ])
    SQUID_STATE_ROLLBACK(squid_krb5_test)
  ])
])
m4trace:acinclude/krb5.m4:127: -1- AC_DEFUN([SQUID_CHECK_KRB5_CONTEXT_MEMORY_CACHE], [
  AC_CACHE_CHECK([for memory cache], squid_cv_memory_cache, [
    SQUID_STATE_SAVE(squid_krb5_test)
    CPPFLAGS="-I${srcdir:-.} $CPPFLAGS"
    AC_RUN_IFELSE([
      AC_LANG_SOURCE([[
#include "compat/krb5.h"
int main(int argc, char *argv[])
{
    krb5_context context;
    krb5_ccache cc;

    krb5_init_context(&context);
    return krb5_cc_resolve(context, "MEMORY:test_cache", &cc);
}
      ]])
    ], [ squid_cv_memory_cache=yes ], [ squid_cv_memory_cache=no ], [:])
    SQUID_STATE_ROLLBACK(squid_krb5_test)
  ])
])
m4trace:acinclude/krb5.m4:150: -1- AC_DEFUN([SQUID_CHECK_KRB5_CONTEXT_MEMORY_KEYTAB], [
  AC_CACHE_CHECK([for memory keytab], squid_cv_memory_keytab, [
    SQUID_STATE_SAVE(squid_krb5_test)
    CPPFLAGS="-I${srcdir:-.} $CPPFLAGS"
    AC_RUN_IFELSE([
      AC_LANG_SOURCE([[
#include "compat/krb5.h"
int main(int argc, char *argv[])
{
    krb5_context context;
    krb5_keytab kt;

    krb5_init_context(&context);
    return krb5_kt_resolve(context, "MEMORY:test_keytab", &kt);
}
      ]])
    ], [ squid_cv_memory_keytab=yes ], [ squid_cv_memory_keytab=no ], [:])
    SQUID_STATE_ROLLBACK(squid_krb5_test)
  ])
])
m4trace:acinclude/krb5.m4:173: -1- AC_DEFUN([SQUID_CHECK_WORKING_GSSAPI], [
  AC_CACHE_CHECK([for working gssapi], squid_cv_working_gssapi, [
    AC_LINK_IFELSE([AC_LANG_SOURCE([[
#if HAVE_GSS_H
#include <gss.h>
#endif
#if USE_APPLE_KRB5
#define GSSKRB_APPLE_DEPRECATED(x)
#endif
#if HAVE_GSSAPI_GSSAPI_H
#include <gssapi/gssapi.h>
#elif HAVE_GSSAPI_H
#include <gssapi.h>
#endif
#if HAVE_GSSAPI_GSSAPI_KRB5_H
#include <gssapi/gssapi_krb5.h>
#endif
#if HAVE_GSSAPI_GSSAPI_GENERIC_H
#include <gssapi/gssapi_generic.h>
#endif
int
main(void)
{
        OM_uint32 val;
        gss_OID_set set;

        gss_create_empty_oid_set(&val, &set);

        return 0;
}
  ]])],  [ squid_cv_working_gssapi=yes ], [ squid_cv_working_gssapi=no ], [:])])
  AS_IF([test "x$squid_cv_working_gssapi" = "xno" -a `echo $LIBS | grep -i -c "(-)L"` -gt 0],[
    AC_MSG_NOTICE([Check Runtime library path !])
  ])
])
m4trace:acinclude/krb5.m4:210: -1- AC_DEFUN([SQUID_CHECK_SPNEGO_SUPPORT], [
  AC_CACHE_CHECK([for spnego support], squid_cv_have_spnego, [
    AC_RUN_IFELSE([AC_LANG_SOURCE([[
#if HAVE_GSS_H
#include <gss.h>
#endif
#if USE_APPLE_KRB5
#define GSSKRB_APPLE_DEPRECATED(x)
#endif
#if HAVE_GSSAPI_GSSAPI_H
#include <gssapi/gssapi.h>
#elif HAVE_GSSAPI_H
#include <gssapi.h>
#endif
#if HAVE_GSSAPI_GSSAPI_KRB5_H
#include <gssapi/gssapi_krb5.h>
#endif
#if HAVE_GSSAPI_GSSAPI_GENERIC_H
#include <gssapi/gssapi_generic.h>
#endif
#include <string.h>
int main(int argc, char *argv[]) {
 OM_uint32 major_status,minor_status;
 gss_OID_set gss_mech_set;
 int i;

static gss_OID_desc _gss_mech_spnego  = {6, (void *)"\x2b\x06\x01\x05\x05\x02"};
gss_OID gss_mech_spnego = &_gss_mech_spnego;

 major_status = gss_indicate_mechs( &minor_status, &gss_mech_set);

 for (i=0;i<gss_mech_set->count;i++) {
     if (!memcmp(gss_mech_set->elements[i].elements,gss_mech_spnego->elements,gss_mech_set->elements[i].length)) {
        return 0;
     }
 }

 return 1;
}
  ]])],
  [ squid_cv_have_spnego=yes ], [ squid_cv_have_spnego=no ],[:])])
])
m4trace:acinclude/krb5.m4:254: -1- AC_DEFUN([SQUID_CHECK_WORKING_KRB5], [
  AC_CACHE_CHECK([for working krb5], squid_cv_working_krb5, [
    SQUID_STATE_SAVE(squid_krb5_test)
    CPPFLAGS="-I${srcdir:-.} $CPPFLAGS"
    AC_LINK_IFELSE([AC_LANG_SOURCE([[
#include "compat/krb5.h"
int
main(void)
{
        krb5_context context;

        krb5_init_context(&context);

        return 0;
}
  ]])], [ squid_cv_working_krb5=yes ], [ squid_cv_working_krb5=no ],[:])])
  SQUID_STATE_ROLLBACK(squid_krb5_test)
  AS_IF([test "x$squid_cv_working_krb5" = "xno" -a `echo $LIBS | grep -i -c "(-)L"` -gt 0],[
    AC_MSG_NOTICE([Check Runtime library path !])
  ])
])
m4trace:acinclude/krb5.m4:278: -1- AC_DEFUN([SQUID_CHECK_KRB5_FUNCS], [

  ac_com_error_message=no
  AS_IF([test "x$ac_cv_header_com_err_h" = "xyes"],[
    AC_EGREP_HEADER(error_message,com_err.h,ac_com_error_message=yes)],
  [test "x$ac_cv_header_et_com_err_h" = "xyes"],[
    AC_EGREP_HEADER(error_message,et/com_err.h,ac_com_error_message=yes)
  ])

  AS_IF([test `echo "$LIBMIT_KRB5_LIBS $LIBHEIMDAL_KRB5_LIBS" | grep -c com_err` -ne 0 -a "x$ac_com_error_message" = "xyes"],[
    AC_CHECK_LIB(com_err,error_message,
      AC_DEFINE(HAVE_ERROR_MESSAGE,1,[Define to 1 if you have error_message]),)
  ],[test  "x$ac_com_error_message" = "xyes"],[
    AC_CHECK_LIB(krb5,error_message,
      AC_DEFINE(HAVE_ERROR_MESSAGE,1,[Define to 1 if you have error_message]),)
  ])

  AC_CHECK_LIB(krb5,krb5_get_err_text,
    AC_DEFINE(HAVE_KRB5_GET_ERR_TEXT,1,
      [Define to 1 if you have krb5_get_err_text]),)
  AC_CHECK_LIB(krb5,krb5_get_error_message,
    AC_DEFINE(HAVE_KRB5_GET_ERROR_MESSAGE,1,
      [Define to 1 if you have krb5_get_error_message]),)
  AC_CHECK_LIB(krb5,krb5_free_error_message,
    AC_DEFINE(HAVE_KRB5_FREE_ERROR_MESSAGE,1,
      [Define to 1 if you have krb5_free_error_message]),)
  AC_CHECK_LIB(krb5,krb5_free_error_string,
    AC_DEFINE(HAVE_KRB5_FREE_ERROR_STRING,1,
      [Define to 1 if you have krb5_free_error_string]),)
  AC_CHECK_DECLS(krb5_kt_free_entry,,,[#include <krb5.h>])
  AC_CHECK_TYPE(krb5_pac,
    AC_DEFINE(HAVE_KRB5_PAC,1,
      [Define to 1 if you have krb5_pac]),,
      [#include <krb5.h>])
  AC_CHECK_LIB(krb5,krb5_kt_free_entry,
    AC_DEFINE(HAVE_KRB5_KT_FREE_ENTRY,1,
      [Define to 1 if you have krb5_kt_free_entry]),)
  AC_CHECK_LIB(krb5,krb5_get_init_creds_keytab,
    AC_DEFINE(HAVE_GET_INIT_CREDS_KEYTAB,1,
      [Define to 1 if you have krb5_get_init_creds_keytab]),)
  AC_CHECK_LIB(krb5,krb5_get_max_time_skew,
    AC_DEFINE(HAVE_KRB5_GET_MAX_TIME_SKEW,1,
      [Define to 1 if you have krb5_get_max_time_skew]),)
  AC_CHECK_LIB(krb5,krb5_get_profile,
    AC_DEFINE(HAVE_KRB5_GET_PROFILE,1,
      [Define to 1 if you have krb5_get_profile]),)
  AC_CHECK_LIB(krb5,profile_get_integer,
    AC_DEFINE(HAVE_PROFILE_GET_INTEGER,1,
      [Define to 1 if you have profile_get_integer]),)
  AC_CHECK_LIB(krb5,profile_release,
    AC_DEFINE(HAVE_PROFILE_RELEASE,1,
      [Define to 1 if you have profile_release]),)
  AC_CHECK_LIB(krb5,krb5_get_renewed_creds,
    AC_DEFINE(HAVE_KRB5_GET_RENEWED_CREDS,1,
      [Define to 1 if you have krb5_get_renewed_creds]),)
  AC_CHECK_LIB(krb5,krb5_principal_get_realm,
    AC_DEFINE(HAVE_KRB5_PRINCIPAL_GET_REALM,1,
      [Define to 1 if you have krb5_principal_get_realm]),)
  AC_CHECK_LIB(krb5, krb5_get_init_creds_opt_alloc,
    AC_DEFINE(HAVE_KRB5_GET_INIT_CREDS_OPT_ALLOC,1,
      [Define to 1 if you have krb5_get_init_creds_opt_alloc]),)
  AC_MSG_CHECKING([for krb5_get_init_creds_free requires krb5_context])
  SQUID_STATE_SAVE(squid_krb5_test)
  CPPFLAGS="-I${srcdir:-.} $CPPFLAGS"
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include "compat/krb5.h"
    ]],[[krb5_context context;
	 krb5_get_init_creds_opt *options;
	 krb5_get_init_creds_opt_free(context, options)]])],[
	AC_DEFINE(HAVE_KRB5_GET_INIT_CREDS_FREE_CONTEXT,1,
		  [Define to 1 if you krb5_get_init_creds_free requires krb5_context])
	AC_MSG_RESULT(yes)
    ],[AC_MSG_RESULT(no)],[AC_MSG_RESULT(no)])
  SQUID_STATE_ROLLBACK(squid_krb5_test)

  AC_CHECK_FUNCS(gss_map_name_to_any,
    AC_DEFINE(HAVE_GSS_MAP_ANY_TO_ANY,1,
      [Define to 1 if you have gss_map_name_to_any]),)
  AC_CHECK_FUNCS(gsskrb5_extract_authz_data_from_sec_context,
    AC_DEFINE(HAVE_GSSKRB5_EXTRACT_AUTHZ_DATA_FROM_SEC_CONTEXT,1,
      [Define to 1 if you have gsskrb5_extract_authz_data_from_sec_context]),)

  SQUID_CHECK_KRB5_CONTEXT_MEMORY_CACHE
  SQUID_DEFINE_BOOL(HAVE_KRB5_MEMORY_CACHE,$squid_cv_memory_cache,
       [Define if kerberos has MEMORY: cache support])

  SQUID_CHECK_KRB5_CONTEXT_MEMORY_KEYTAB
  SQUID_DEFINE_BOOL(HAVE_KRB5_MEMORY_KEYTAB,$squid_cv_memory_keytab,
       [Define if kerberos has MEMORY: keytab support])

  SQUID_CHECK_WORKING_GSSAPI
  SQUID_DEFINE_BOOL(HAVE_GSSAPI,$squid_cv_working_gssapi,[GSSAPI support])

  SQUID_CHECK_SPNEGO_SUPPORT
  SQUID_DEFINE_BOOL(HAVE_SPNEGO,$squid_cv_have_spnego,[SPNEGO support])

  SQUID_CHECK_WORKING_KRB5
  SQUID_DEFINE_BOOL(HAVE_KRB5,$squid_cv_working_krb5,[KRB5 support])
])
m4trace:configure.ac:24: -1- m4_include([acinclude/ldap.m4])
m4trace:acinclude/ldap.m4:9: -1- AC_DEFUN([SQUID_LDAP_TEST], [
  AC_CACHE_CHECK([for $1],[squid_cv_$1],[
    SQUID_STATE_SAVE(squid_ldap_test_state)
    LIBS="$LIBLDAP_PATH $LIBLDAP_LIBS $LIBPTHREADS"
    CPPFLAGS="-DLDAP_DEPRECATED=1 -DLDAP_REFERRALS $CPPFLAGS"
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#       if HAVE_LDAP_H
#       include <ldap.h>
#       elif HAVE_MOZLDAP_LDAP_H
#       include <mozldap/ldap.h>
#       endif
      ]],[[$2]])
    ],[
      squid_cv_$1=1
    ],[
      squid_cv_$1=0
    ],[
      squid_cv_$1=0
    ])
    SQUID_STATE_ROLLBACK(squid_ldap_test_state)
  ])
  AC_DEFINE_UNQUOTED([HAVE_$1],${squid_cv_$1},[Define to 1 if you have $1])
])
m4trace:acinclude/ldap.m4:34: -1- AC_DEFUN([SQUID_LDAP_TEST_RUN], [
  AC_CACHE_CHECK([for $1],[m4_translit([squid_cv_$1],[-+. ],[____])],[
    SQUID_STATE_SAVE(squid_ldap_test_state)
    LIBS="$LIBLDAP_PATH $LIBLDAP_LIBS $LIBPTHREADS"
    CPPFLAGS="-DLDAP_DEPRECATED=1 -DLDAP_REFERRALS $CPPFLAGS"
    AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#       if HAVE_LDAP_H
#       include <ldap.h>
#       elif HAVE_MOZLDAP_LDAP_H
#       include <mozldap/ldap.h>
#       endif
#       include <string.h>
      ]],[[$2]])
    ],[
      m4_translit([squid_cv_$1],[-+. ],[____])=1
    ],[
      m4_translit([squid_cv_$1],[-+. ],[____])=0
    ],[
      m4_translit([squid_cv_$1],[-+. ],[____])=0
    ])
    SQUID_STATE_ROLLBACK(squid_ldap_test_state)
  ])
  AC_DEFINE_UNQUOTED([m4_translit([m4_translit([HAVE_$1],[-+. abcdefghijklmnopqrstuvwxyz],[____ABCDEFGHIJKLMNOPQRSTUVWXYZ])],[-+. ],[____])],
    ${m4_translit([squid_cv_$1],[-+. ],[____])},[Define to 1 if you have $1])
])
m4trace:acinclude/ldap.m4:61: -1- AC_DEFUN([SQUID_LDAP_CHECK_VENDOR], [
  SQUID_LDAP_TEST_RUN([OpenLDAP],[return strcmp(LDAP_VENDOR_NAME,"OpenLDAP")])
  SQUID_LDAP_TEST_RUN([Sun LDAP SDK],[return strcmp(LDAP_VENDOR_NAME,"Sun Microsystems Inc.")])
  SQUID_LDAP_TEST_RUN([Mozilla LDAP SDK],[return strcmp(LDAP_VENDOR_NAME,"mozilla.org")])
])
m4trace:acinclude/ldap.m4:69: -1- AC_DEFUN([SQUID_CHECK_LDAP_API], [
  SQUID_LDAP_TEST([LDAP],[
    char host[]="";
    int port;
    ldap_init((const char *)&host, port);
  ])
  SQUID_LDAP_CHECK_VENDOR
  SQUID_LDAP_TEST([LDAP_OPT_DEBUG_LEVEL],[auto i=LDAP_OPT_DEBUG_LEVEL])
  SQUID_LDAP_TEST([LDAP_SCOPE_DEFAULT],[auto i=LDAP_SCOPE_DEFAULT])
  SQUID_LDAP_TEST([LDAP_REBIND_PROC],[LDAP_REBIND_PROC ldap_rebind])
  SQUID_LDAP_TEST([LDAP_REBINDPROC_CALLBACK],[LDAP_REBINDPROC_CALLBACK ldap_rebind])
  SQUID_LDAP_TEST([LDAP_REBIND_FUNCTION],[LDAP_REBIND_FUNCTION ldap_rebind])

  dnl TODO check this test's code actually works, it looks broken
  SQUID_LDAP_TEST([LDAP_URL_LUD_SCHEME],[struct ldap_url_desc.lud_scheme])

  AC_CHECK_LIB(ldap,[ldapssl_client_init],[
    AC_DEFINE(HAVE_LDAPSSL_CLIENT_INIT,1,[Define to 1 if you have ldapssl_client_init])
  ])
  dnl Extract library names for AC_SEARCH_LIBS() to iterate.
  LIBLDAP_NAMES="`echo "$LIBLDAP_LIBS" | sed -e 's/-l//g'`"
  dnl If a AC_SEARCH_LIBS() finds a required library X then subsequent calls
  dnl may produce a misleading "none required" result for the same library X
  dnl because the first successful search adds -lX to LIBS.
  AC_SEARCH_LIBS([ldap_url_desc2str],[$LIBLDAP_NAMES],[
    AC_DEFINE(HAVE_LDAP_URL_DESC2STR,1,[Define to 1 if you have ldap_url_desc2str])
  ])
  AC_SEARCH_LIBS([ldap_url_parse],[$LIBLDAP_NAMES],[
    AC_DEFINE(HAVE_LDAP_URL_PARSE,1,[Define to 1 if you have ldap_url_parse])
  ])
  AC_SEARCH_LIBS([ldap_start_tls_s],[$LIBLDAP_NAMES],[
    AC_DEFINE(HAVE_LDAP_START_TLS_S,1,[Define to 1 if you have ldap_start_tls_s])
  ])
])
m4trace:configure.ac:25: -1- m4_include([acinclude/pam.m4])
m4trace:acinclude/pam.m4:16: -1- AC_DEFUN([CHECK_STRUCT_PAM_CONV], [
  AH_TEMPLATE([PAM_CONV_FUNC_CONST_PARM],
    [Defined to const or empty depending on the style used by the OS to refer to the PAM message dialog func])
  AC_CACHE_CHECK([for PAM conversation struct signature type],
                  squid_cv_pam_conv_signature, [
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <security/pam_appl.h>
static int
password_conversation(int, const struct pam_message **, struct pam_response **, void *) { return 0; }
static struct pam_conv conv = { &password_conversation, 0 };
]])], [
   squid_cv_pam_conv_signature=linux
],[
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <security/pam_appl.h>
static int
password_conversation(int, struct pam_message **, struct pam_response **, void *) { return 0; }
static struct pam_conv conv = { &password_conversation, 0 };
]])], [
  squid_cv_pam_conv_signature=solaris
 ],[
  squid_cv_pam_conv_signature=unknown
  ])
    ])
  ])
  AS_IF([test "$squid_cv_pam_conv_signature" = "linux"],
    AC_DEFINE([PAM_CONV_FUNC_CONST_PARM],[const]),
    AC_DEFINE([PAM_CONV_FUNC_CONST_PARM],[])
  )
])
m4trace:configure.ac:26: -1- m4_include([acinclude/pkg.m4])
m4trace:acinclude/pkg.m4:34: -1- AC_DEFUN([PKG_PROG_PKG_CONFIG], [m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4_pattern_allow([^PKG_CONFIG(_PATH)?$])
AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])

if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
fi
if test -n "$PKG_CONFIG"; then
	_pkg_min_version=m4_default([$1], [0.9.0])
	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		PKG_CONFIG=""
	fi
fi[]dnl
])
m4trace:acinclude/pkg.m4:66: -1- AC_DEFUN([PKG_CHECK_EXISTS], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
if test -n "$PKG_CONFIG" && \
    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
  m4_default([$2], [:])
m4_ifvaln([$3], [else
  $3])dnl
fi])
m4trace:acinclude/pkg.m4:91: -1- AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])
if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi[]dnl
])
m4trace:acinclude/pkg.m4:111: -1- AC_DEFUN([PKG_CHECK_MODULES], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl

pkg_failed=no
AC_MSG_CHECKING([for $1])

_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
_PKG_CONFIG([$1][_LIBS], [libs], [$2])

m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
and $1[]_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.])

if test $pkg_failed = yes; then
   	AC_MSG_RESULT([no])
        _PKG_SHORT_ERRORS_SUPPORTED
        if test $_pkg_short_errors_supported = yes; then
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors "$2" 2>&1`
        else
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors "$2" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD

	m4_default([$4], [AC_MSG_ERROR(
[Package requirements ($2) were not met:

$$1_PKG_ERRORS

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

_PKG_TEXT])dnl
        ])
elif test $pkg_failed = untried; then
     	AC_MSG_RESULT([no])
	m4_default([$4], [AC_MSG_FAILURE(
[The pkg-config script could not be found or is too old.  Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

_PKG_TEXT

To get pkg-config, see <http://pkg-config.freedesktop.org/>.])dnl
        ])
else
	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
        AC_MSG_RESULT([yes])
	$3
fi[]dnl
])
m4trace:configure.ac:27: -1- m4_include([acinclude/tdb.m4])
m4trace:acinclude/tdb.m4:9: -1- AC_DEFUN_ONCE([SQUID_CHECK_LIBTDB], [
SQUID_AUTO_LIB(tdb,[Samba TrivialDB],[LIBTDB])
SQUID_CHECK_LIB_WORKS(tdb,[
  SQUID_STATE_SAVE(squid_libtdb_state)
  LIBS="$LIBS $LIBTDB_PATH"
  PKG_CHECK_MODULES([LIBTDB],[tdb],[:],[:])
  CPPFLAGS="$CPPFLAGS $LIBTDB_CFLAGS"
  AC_CHECK_HEADERS([sys/stat.h tdb.h],,,[
#if HAVE_SYS_STAT_H
#include <sys/stat.h>
#endif
  ])
  SQUID_STATE_ROLLBACK(squid_libtdb_state) #de-pollute LIBS
])
])
m4trace:configure.ac:28: -1- m4_include([acinclude/lib-checks.m4])
m4trace:acinclude/lib-checks.m4:8: -1- AC_DEFUN([SQUID_CHECK_LIBIPHLPAPI], [
  AC_CACHE_CHECK([for libIpHlpApi],squid_cv_have_libiphlpapi,[
    SQUID_STATE_SAVE(iphlpapi)
    LIBS="$LIBS -liphlpapi"
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
#include <winsock2.h>
#include <windows.h>
#include <iphlpapi.h>
]], [[
  MIB_IPNETTABLE i;
  unsigned long isz=sizeof(i);
  GetIpNetTable(&i,&isz,FALSE);
    ]])],
    [squid_cv_have_libiphlpapi=yes
     SQUID_STATE_COMMIT(iphlpapi)],
    [squid_cv_have_libiphlpapi=no
     SQUID_STATE_ROLLBACK(iphlpapi)])
  ])
  SQUID_STATE_ROLLBACK(iphlpapi)
])
m4trace:acinclude/lib-checks.m4:30: -1- AC_DEFUN([SQUID_CHECK_OPENSSL_TLS_METHODS], [
  AH_TEMPLATE(HAVE_OPENSSL_TLS_METHOD, "Define to 1 if the TLS_method() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_OPENSSL_TLS_CLIENT_METHOD, "Define to 1 if the TLS_client_method() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_OPENSSL_TLS_SERVER_METHOD, "Define to 1 if the TLS_server_method() OpenSSL API function exists")
  SQUID_STATE_SAVE(check_openssl_TLS_METHODS)
  LIBS="$LIBS $SSLLIB"
  AC_CHECK_LIB(ssl, TLS_method, AC_DEFINE(HAVE_OPENSSL_TLS_METHOD, 1))
  AC_CHECK_LIB(ssl, TLS_client_method, AC_DEFINE(HAVE_OPENSSL_TLS_CLIENT_METHOD, 1))
  AC_CHECK_LIB(ssl, TLS_server_method, AC_DEFINE(HAVE_OPENSSL_TLS_SERVER_METHOD, 1))
  SQUID_STATE_ROLLBACK(check_openssl_TLS_METHODS)
])
m4trace:acinclude/lib-checks.m4:43: -1- AC_DEFUN([SQUID_CHECK_LIBCRYPTO_API], [
  AH_TEMPLATE(HAVE_LIBCRYPTO_OPENSSL_LH_STRHASH, "Define to 1 if the OPENSSL_LH_strhash() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_EVP_PKEY_GET0_RSA, "Define to 1 if the EVP_PKEY_get0_RSA() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_BIO_METH_NEW, "Define to 1 if the BIO_meth_new() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_BIO_GET_DATA, "Define to 1 if the BIO_get_data() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_BIO_GET_INIT, "Define to 1 if the BIO_get_init() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_ASN1_STRING_GET0_DATA, "Define to 1 if the ASN1_STRING_get0_data() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_EVP_PKEY_UP_REF, "Define to 1 if the EVP_PKEY_up_ref() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_X509_STORE_CTX_GET0_CERT, "Define to 1 if the X509_STORE_CTX_get0_cert() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_X509_VERIFY_PARAM_GET_DEPTH, "Define to 1 if the X509_VERIFY_PARAM_get_depth() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_X509_STORE_CTX_GET0_UNTRUSTED, "Define to 1 if the X509_STORE_CTX_get0_untrusted() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_X509_VERIFY_PARAM_SET_AUTH_LEVEL, "Define to 1 if the X509_VERIFY_PARAM_set_auth_level() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_X509_UP_REF, "Define to 1 if the X509_up_ref() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_X509_CHAIN_UP_REF, "Define to 1 if the X509_chain_up_ref() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_X509_CRL_UP_REF, "Define to 1 if the X509_CRL_up_ref() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_DH_UP_REF, "Define to 1 if the DH_up_ref() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBCRYPTO_X509_GET0_SIGNATURE, "Define to 1 if the X509_get0_signature() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_SSL_GET0_PARAM, "Define to 1 of the SSL_get0_param() OpenSSL API function exists")
  SQUID_STATE_SAVE(check_openssl_libcrypto_api)
  LIBS="$LIBS $SSLLIB"
  AC_CHECK_LIB(crypto, OPENSSL_LH_strhash, AC_DEFINE(HAVE_LIBCRYPTO_OPENSSL_LH_STRHASH, 1))
  AC_CHECK_LIB(crypto, EVP_PKEY_get0_RSA, AC_DEFINE(HAVE_LIBCRYPTO_EVP_PKEY_GET0_RSA, 1))
  AC_CHECK_LIB(crypto, BIO_meth_new, AC_DEFINE(HAVE_LIBCRYPTO_BIO_METH_NEW, 1))
  AC_CHECK_LIB(crypto, BIO_get_data, AC_DEFINE(HAVE_LIBCRYPTO_BIO_GET_DATA, 1))
  AC_CHECK_LIB(crypto, BIO_get_init, AC_DEFINE(HAVE_LIBCRYPTO_BIO_GET_INIT, 1))
  AC_CHECK_LIB(crypto, ASN1_STRING_get0_data, AC_DEFINE(HAVE_LIBCRYPTO_ASN1_STRING_GET0_DATA, 1))
  AC_CHECK_LIB(crypto, EVP_PKEY_up_ref, AC_DEFINE(HAVE_LIBCRYPTO_EVP_PKEY_UP_REF, 1))
  AC_CHECK_LIB(crypto, X509_STORE_CTX_get0_cert, AC_DEFINE(HAVE_LIBCRYPTO_X509_STORE_CTX_GET0_CERT, 1))
  AC_CHECK_LIB(crypto, X509_VERIFY_PARAM_get_depth, AC_DEFINE(HAVE_LIBCRYPTO_X509_VERIFY_PARAM_GET_DEPTH, 1))
  AC_CHECK_LIB(crypto, X509_STORE_CTX_get0_untrusted, AC_DEFINE(HAVE_LIBCRYPTO_X509_STORE_CTX_GET0_UNTRUSTED, 1))
  AC_CHECK_LIB(crypto,  X509_VERIFY_PARAM_set_auth_level, AC_DEFINE(HAVE_X509_VERIFY_PARAM_SET_AUTH_LEVEL))
  AC_CHECK_LIB(crypto, X509_up_ref, AC_DEFINE(HAVE_LIBCRYPTO_X509_UP_REF, 1))
  AC_CHECK_LIB(crypto, X509_chain_up_ref, AC_DEFINE(HAVE_LIBCRYPTO_X509_CHAIN_UP_REF, 1))
  AC_CHECK_LIB(crypto, X509_CRL_up_ref, AC_DEFINE(HAVE_LIBCRYPTO_X509_CRL_UP_REF, 1))
  AC_CHECK_LIB(crypto, DH_up_ref, AC_DEFINE(HAVE_LIBCRYPTO_DH_UP_REF, 1))
  AC_CHECK_LIB(crypto, X509_get0_signature, AC_DEFINE(HAVE_LIBCRYPTO_X509_GET0_SIGNATURE, 1), AC_DEFINE(SQUID_CONST_X509_GET0_SIGNATURE_ARGS,))
  AC_CHECK_LIB(crypto, SSL_get0_param, AC_DEFINE(HAVE_SSL_GET0_PARAM, 1))
  SQUID_STATE_ROLLBACK(check_openssl_libcrypto_api)
])
m4trace:acinclude/lib-checks.m4:84: -1- AC_DEFUN([SQUID_CHECK_LIBSSL_API], [
  AH_TEMPLATE(HAVE_LIBSSL_OPENSSL_INIT_SSL, "Define to 1 if the OPENSSL_init_ssl() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBSSL_SSL_CIPHER_FIND, "Define to 1 if the SSL_CIPHER_find() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBSSL_SSL_CTX_SET_TMP_RSA_CALLBACK, "Define to 1 if the SSL_CTX_set_tmp_rsa_callback() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBSSL_SSL_SESSION_GET_ID, "Define to 1 if the SSL_SESSION_get_id() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBSSL_SSL_GET_CLIENT_RANDOM, "Define to 1 if the SSL_get_client_random() OpenSSL API function exists")
  AH_TEMPLATE(HAVE_LIBSSL_SSL_SESSION_GET_MASTER_KEY, "Define to 1 if the SSL_SESSION_get_master_key() OpenSSL API function exists")
  SQUID_STATE_SAVE(check_openssl_libssl_api)
  LIBS="$LIBS $SSLLIB"
  AC_CHECK_LIB(ssl, OPENSSL_init_ssl, AC_DEFINE(HAVE_LIBSSL_OPENSSL_INIT_SSL, 1))
  AC_CHECK_LIB(ssl, SSL_CIPHER_find, AC_DEFINE(HAVE_LIBSSL_SSL_CIPHER_FIND, 1))
  AC_CHECK_LIB(ssl, SSL_CTX_set_tmp_rsa_callback, AC_DEFINE(HAVE_LIBSSL_SSL_CTX_SET_TMP_RSA_CALLBACK, 1))
  AC_CHECK_LIB(ssl, SSL_SESSION_get_id, AC_DEFINE(HAVE_LIBSSL_SSL_SESSION_GET_ID, 1))
  AC_CHECK_LIB(ssl, SSL_get_client_random, AC_DEFINE(HAVE_LIBSSL_SSL_GET_CLIENT_RANDOM, 1))
  AC_CHECK_LIB(ssl, SSL_SESSION_get_master_key, AC_DEFINE(HAVE_LIBSSL_SSL_SESSION_GET_MASTER_KEY, 1))
  SQUID_STATE_ROLLBACK(check_openssl_libssl_api)
])
m4trace:acinclude/lib-checks.m4:104: -1- AC_DEFUN([SQUID_CHECK_OPENSSL_GETCERTIFICATE_WORKS], [
  AH_TEMPLATE(SQUID_SSLGETCERTIFICATE_BUGGY, "Define to 1 if the SSL_get_certificate crashes squid")
  AH_TEMPLATE(SQUID_USE_SSLGETCERTIFICATE_HACK, "Define to 1 to use squid workaround for SSL_get_certificate")
  SQUID_STATE_SAVE(check_SSL_get_certificate)
  LIBS="$SSLLIB $LIBS"
  AS_IF([test "x$SSLLIBDIR" != "x"],[LIBS="$LIBS -Wl,-rpath -Wl,$SSLLIBDIR"])

  AC_MSG_CHECKING(whether the SSL_get_certificate is buggy)
  AC_RUN_IFELSE([
  AC_LANG_PROGRAM(
    [
     #include <openssl/ssl.h>
     #include <openssl/err.h>
    ],
    [
#if defined(SSLeay_add_ssl_algorithms)
    SSLeay_add_ssl_algorithms();
#endif
#if HAVE_OPENSSL_TLS_METHOD
    SSL_CTX *sslContext = SSL_CTX_new(TLS_method());
#else
    SSL_CTX *sslContext = SSL_CTX_new(SSLv23_method());
#endif
    SSL *ssl = SSL_new(sslContext);
    X509* cert = SSL_get_certificate(ssl);
    return 0;
    ])
  ],
  [
   AC_MSG_RESULT([no])
  ],
  [
   AC_DEFINE(SQUID_SSLGETCERTIFICATE_BUGGY, 1)
   AC_MSG_RESULT([yes])
  ],
  [
   AC_DEFINE(SQUID_SSLGETCERTIFICATE_BUGGY, 0)
   AC_MSG_RESULT([cross-compile, assuming no])
  ])

  AC_MSG_CHECKING(whether the workaround for SSL_get_certificate works)
  AC_RUN_IFELSE([
  AC_LANG_PROGRAM(
    [
     #include <openssl/ssl.h>
     #include <openssl/err.h>
    ],
    [
#if defined(SSLeay_add_ssl_algorithms)
    SSLeay_add_ssl_algorithms();
#endif
#if HAVE_OPENSSL_TLS_METHOD
    SSL_CTX *sslContext = SSL_CTX_new(TLS_method());
#else
    SSL_CTX *sslContext = SSL_CTX_new(SSLv23_method());
#endif
    X509 ***pCert = (X509 ***)sslContext->cert;
    X509 *sslCtxCert = pCert && *pCert ? **pCert : (X509 *)0x1;
    if (sslCtxCert != NULL)
        return 1;
    return 0;
    ])
  ],
  [
   AC_MSG_RESULT([yes])
   AC_DEFINE(SQUID_USE_SSLGETCERTIFICATE_HACK, 1)
  ],
  [
   AC_MSG_RESULT([no])
  ],
  [
   AC_DEFINE(SQUID_USE_SSLGETCERTIFICATE_HACK, 0)
   AC_MSG_RESULT([cross-compile, assuming no])
  ])

SQUID_STATE_ROLLBACK(check_SSL_get_certificate)
])
m4trace:acinclude/lib-checks.m4:184: -1- AC_DEFUN([SQUID_CHECK_OPENSSL_CONST_SSL_METHOD], [
  AH_TEMPLATE(SQUID_USE_CONST_SSL_METHOD, "Define to 1 if the SSL_CTX_new and similar openSSL API functions require 'const SSL_METHOD *'")
  SQUID_STATE_SAVE(check_const_SSL_METHOD)
  AC_MSG_CHECKING(whether SSL_CTX_new and similar openSSL API functions require 'const SSL_METHOD *'")

  AC_COMPILE_IFELSE([
  AC_LANG_PROGRAM(
    [
     #include <openssl/ssl.h>
     #include <openssl/err.h>
    ],
    [
       const SSL_METHOD *method = NULL;
       SSL_CTX *sslContext = SSL_CTX_new(method);
       return (sslContext != NULL);
    ])
  ],
  [
   AC_DEFINE(SQUID_USE_CONST_SSL_METHOD, 1)
   AC_MSG_RESULT([yes])
  ],
  [
   AC_MSG_RESULT([no])
  ],
  [])

SQUID_STATE_ROLLBACK(check_const_SSL_METHOD)
])
m4trace:acinclude/lib-checks.m4:214: -1- AC_DEFUN([SQUID_CHECK_OPENSSL_CONST_CRYPTO_EX_DATA], [
  AH_TEMPLATE(SQUID_USE_CONST_CRYPTO_EX_DATA_DUP, "Define to 1 if the SSL_get_new_ex_index() dup callback accepts 'const CRYPTO_EX_DATA *'")
  SQUID_STATE_SAVE(check_const_CRYPTO_EX_DATA)
  AC_MSG_CHECKING(whether SSL_get_new_ex_index() dup callback accepts 'const CRYPTO_EX_DATA *'")
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([
#include <openssl/ssl.h>

int const_dup_func(CRYPTO_EX_DATA *, const CRYPTO_EX_DATA *, void *, int, long, void *) {
    return 0;
}
    ],[
return SSL_get_ex_new_index(0, (void*)"foo", NULL, &const_dup_func, NULL);
    ])
  ],[
   AC_DEFINE(SQUID_USE_CONST_CRYPTO_EX_DATA_DUP, 1)
   AC_MSG_RESULT([yes])
  ],[
   AC_MSG_RESULT([no])
  ])
  SQUID_STATE_ROLLBACK(check_const_CRYPTO_EX_DATA)
])
m4trace:acinclude/lib-checks.m4:237: -1- AC_DEFUN([SQUID_CHECK_OPENSSL_CONST_SSL_SESSION_CB_ARG], [
  AH_TEMPLATE(SQUID_USE_CONST_SSL_SESSION_CBID, "Define to 1 if the SSL_CTX_sess_set_get_cb() callback accepts a const ID argument")
  SQUID_STATE_SAVE(check_const_SSL_CTX_sess_set_get_cb)
  AC_MSG_CHECKING(whether SSL_CTX_sess_set_get_cb() callback accepts a const ID argument")
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([
#include <openssl/ssl.h>

SSL_SESSION *get_session_cb(SSL *, const unsigned char *ID, int, int *) {
    return NULL;
}
    ],[
SSL_CTX_sess_set_get_cb(NULL, get_session_cb);
return 0;
    ])
  ],[
   AC_DEFINE(SQUID_USE_CONST_SSL_SESSION_CBID, 1)
   AC_MSG_RESULT([yes])
  ],[
   AC_MSG_RESULT([no])
  ])
  SQUID_STATE_ROLLBACK(check_const_SSL_CTX_sess_set_get_cb)
])
m4trace:acinclude/lib-checks.m4:261: -1- AC_DEFUN([SQUID_CHECK_OPENSSL_CONST_X509_GET0_SIGNATURE_ARGS], [
  AH_TEMPLATE(SQUID_CONST_X509_GET0_SIGNATURE_ARGS, Define to const if X509_get0_signature() accepts const parameters; define as empty otherwise. Don't leave it undefined!)
  SQUID_STATE_SAVE(check_const_X509_get0_signature_args)
  AC_MSG_CHECKING("whether X509_get0_signature() accepts const parameters")
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([
#include <openssl/ssl.h>
    ],[
#if HAVE_LIBCRYPTO_X509_GET0_SIGNATURE
        const ASN1_BIT_STRING *sig = nullptr;
        const X509_ALGOR *sig_alg;
        X509_get0_signature(&sig, &sig_alg, nullptr);
#else
#error Missing X509_get0_signature()
#endif
    ])
  ],[
   AC_DEFINE(SQUID_CONST_X509_GET0_SIGNATURE_ARGS, const)
   AC_MSG_RESULT([yes])
  ],[
   AC_DEFINE(SQUID_CONST_X509_GET0_SIGNATURE_ARGS,)
   AC_MSG_RESULT([no])
  ])
  SQUID_STATE_ROLLBACK(check_const_X509_get0_signature_args)
])
m4trace:acinclude/lib-checks.m4:291: -1- AC_DEFUN([SQUID_CHECK_OPENSSL_TXTDB], [
  AH_TEMPLATE(SQUID_SSLTXTDB_PSTRINGDATA, "Define to 1 if the TXT_DB uses OPENSSL_PSTRING data member")
  AH_TEMPLATE(SQUID_STACKOF_PSTRINGDATA_HACK, "Define to 1 to use squid workaround for buggy versions of sk_OPENSSL_PSTRING_value")
  AH_TEMPLATE(SQUID_USE_SSLLHASH_HACK, "Define to 1 to use squid workaround for openssl IMPLEMENT_LHASH_* type conversion errors")

  SQUID_STATE_SAVE(check_TXTDB)

  LIBS="$LIBS $SSLLIB"
  squid_cv_check_openssl_pstring="no"
  AC_MSG_CHECKING(whether the TXT_DB use OPENSSL_PSTRING data member)
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([
      #include <openssl/txt_db.h>
    ],[
      TXT_DB *db = NULL;
      int i = sk_OPENSSL_PSTRING_num(db->data);
      return 0;
    ])
  ],[
    AC_DEFINE(SQUID_SSLTXTDB_PSTRINGDATA, 1)
    AC_MSG_RESULT([yes])
    squid_cv_check_openssl_pstring="yes"
  ],[
    AC_MSG_RESULT([no])
  ],[])

  AS_IF([test "x$squid_cv_check_openssl_pstring" = "xyes"],[
    AC_MSG_CHECKING(whether the squid workaround for buggy versions of sk_OPENSSL_PSTRING_value should used)
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([
        #include <openssl/txt_db.h>
      ],[
       TXT_DB *db = NULL;
       const char ** current_row = ((const char **)sk_OPENSSL_PSTRING_value(db->data, 0));
       return (current_row != NULL);
      ])
    ],[
      AC_MSG_RESULT([no])
    ],[
      AC_DEFINE(SQUID_STACKOF_PSTRINGDATA_HACK, 1)
      AC_MSG_RESULT([yes])
    ],[])
  ])

  AC_MSG_CHECKING(whether the workaround for OpenSSL IMPLEMENT_LHASH_  macros should used)
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([
      #include <openssl/txt_db.h>

      static unsigned long index_serial_hash(const char **a){}
      static int index_serial_cmp(const char **a, const char **b){}
      static IMPLEMENT_LHASH_HASH_FN(index_serial_hash,const char **)
      static IMPLEMENT_LHASH_COMP_FN(index_serial_cmp,const char **)
    ],[
      TXT_DB *db = NULL;
      TXT_DB_create_index(db, 1, NULL, LHASH_HASH_FN(index_serial_hash), LHASH_COMP_FN(index_serial_cmp));
    ])
  ],[
    AC_MSG_RESULT([no])
  ],[
    AC_MSG_RESULT([yes])
    AC_DEFINE(SQUID_USE_SSLLHASH_HACK, 1)
  ],[])

  SQUID_STATE_ROLLBACK(check_TXTDB)
])
m4trace:configure.ac:29: -1- m4_include([acinclude/ax_cxx_compile_stdcxx.m4])
m4trace:acinclude/ax_cxx_compile_stdcxx.m4:58: -1- AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl
  m4_if([$1], [11], [ax_cxx_compile_alternatives="11 0x"],
        [$1], [14], [ax_cxx_compile_alternatives="14 1y"],
        [$1], [17], [ax_cxx_compile_alternatives="17 1z"],
        [$1], [20], [ax_cxx_compile_alternatives="20"],
        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$2], [], [],
        [$2], [ext], [],
        [$2], [noext], [],
        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],
        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],
        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],
        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])
  AC_LANG_PUSH([C++])dnl
  ac_success=no

  m4_if([$2], [], [dnl
    AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,
                   ax_cv_cxx_compile_cxx$1,
      [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
        [ax_cv_cxx_compile_cxx$1=yes],
        [ax_cv_cxx_compile_cxx$1=no])])
    if test x$ax_cv_cxx_compile_cxx$1 = xyes; then
      ac_success=yes
    fi])

  m4_if([$2], [noext], [], [dnl
  if test x$ac_success = xno; then
    for alternative in ${ax_cxx_compile_alternatives}; do
      switch="-std=gnu++${alternative}"
      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                     $cachevar,
        [ac_save_CXX="$CXX"
         CXX="$CXX $switch"
         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
          [eval $cachevar=yes],
          [eval $cachevar=no])
         CXX="$ac_save_CXX"])
      if eval test x\$$cachevar = xyes; then
        CXX="$CXX $switch"
        if test -n "$CXXCPP" ; then
          CXXCPP="$CXXCPP $switch"
        fi
        ac_success=yes
        break
      fi
    done
  fi])

  m4_if([$2], [ext], [], [dnl
  if test x$ac_success = xno; then
    dnl HP's aCC needs +std=c++11 according to:
    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf
    dnl Cray's crayCC needs "-h std=c++11"
    for alternative in ${ax_cxx_compile_alternatives}; do
      for switch in -std=c++${alternative} +std=c++${alternative} "-h std=c++${alternative}"; do
        cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
        AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                       $cachevar,
          [ac_save_CXX="$CXX"
           CXX="$CXX $switch"
           AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
            [eval $cachevar=yes],
            [eval $cachevar=no])
           CXX="$ac_save_CXX"])
        if eval test x\$$cachevar = xyes; then
          CXX="$CXX $switch"
          if test -n "$CXXCPP" ; then
            CXXCPP="$CXXCPP $switch"
          fi
          ac_success=yes
          break
        fi
      done
      if test x$ac_success = xyes; then
        break
      fi
    done
  fi])
  AC_LANG_POP([C++])
  if test x$ax_cxx_compile_cxx$1_required = xtrue; then
    if test x$ac_success = xno; then
      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])
    fi
  fi
  if test x$ac_success = xno; then
    HAVE_CXX$1=0
    AC_MSG_NOTICE([No compiler with C++$1 support was found])
  else
    HAVE_CXX$1=1
    AC_DEFINE(HAVE_CXX$1,1,
              [define if the compiler supports basic C++$1 syntax])
  fi
  AC_SUBST(HAVE_CXX$1)
])
m4trace:configure.ac:30: -1- m4_include([acinclude/win32-sspi.m4])
m4trace:acinclude/win32-sspi.m4:11: -1- AC_DEFUN([SQUID_CHECK_WIN32_SSPI], [
  AC_CHECK_HEADERS([w32api/windows.h windows.h],[
    squid_cv_win32_sspi=yes
    # optional headers
    AC_CHECK_HEADERS([wchar.h tchar.h])
    # required headers
    AC_CHECK_HEADERS([ntsecapi.h security.h sspi.h],,[squid_cv_win32_sspi=no],[
#define SECURITY_WIN32
#if HAVE_WINDOWS_H
#include <windows.h>
#elif HAVE_W32API_WINDOWS_H
#include <w32api/windows.h>
#endif
#if HAVE_NTSECAPI_H
#include <ntsecapi.h>
#endif
#if HAVE_SECURITY_H
#include <security.h>
#endif
#if HAVE_SSPI_H
#include <sspi.h>
#endif
    ])
  ])
  AS_IF([test "x$squid_cv_win32_sspi" = "xyes"],[$1])
])
m4trace:configure.ac:40: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:40: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:52: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:52: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:52: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:52: -1- AM_SET_DEPDIR
m4trace:configure.ac:52: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:52: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:52: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:52: -1- AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
m4trace:configure.ac:52: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:52: -1- AM_DEP_TRACK
m4trace:configure.ac:52: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:52: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:52: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:52: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:52: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:52: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:52: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:52: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:52: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:52: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:52: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:52: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:52: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:52: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:53: -1- AM_PROG_CC_C_O
m4trace:configure.ac:54: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:54: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:54: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:54: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:54: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:54: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:54: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:54: -1- _AM_DEPENDENCIES([CXX])
m4trace:configure.ac:54: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:configure.ac:54: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:54: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:configure.ac:54: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:configure.ac:54: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:configure.ac:54: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:configure.ac:57: -1- AC_DEFUN([_AC_Header_stdio_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdio.h ]AS_TR_SH([stdio.h]) AS_TR_CPP([HAVE_stdio.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:57: -1- AC_DEFUN([_AC_Header_stdlib_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdlib.h ]AS_TR_SH([stdlib.h]) AS_TR_CPP([HAVE_stdlib.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:57: -1- AC_DEFUN([_AC_Header_string_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" string.h ]AS_TR_SH([string.h]) AS_TR_CPP([HAVE_string.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:57: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:57: -1- AC_DEFUN([_AC_Header_stdint_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdint.h ]AS_TR_SH([stdint.h]) AS_TR_CPP([HAVE_stdint.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:57: -1- AC_DEFUN([_AC_Header_strings_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" strings.h ]AS_TR_SH([strings.h]) AS_TR_CPP([HAVE_strings.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:57: -1- AC_DEFUN([_AC_Header_sys_stat_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/stat.h ]AS_TR_SH([sys/stat.h]) AS_TR_CPP([HAVE_sys/stat.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:57: -1- AC_DEFUN([_AC_Header_sys_types_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/types.h ]AS_TR_SH([sys/types.h]) AS_TR_CPP([HAVE_sys/types.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:57: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:57: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:57: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" wchar.h ]AS_TR_SH([wchar.h]) AS_TR_CPP([HAVE_wchar.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:57: -1- AC_DEFUN([_AC_Header_minix_config_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" minix/config.h ]AS_TR_SH([minix/config.h]) AS_TR_CPP([HAVE_minix/config.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_ALL_SOURCE$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_DARWIN_C_SOURCE$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_GNU_SOURCE$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_HPUX_ALT_XOPEN_SOCKET_API$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_NETBSD_SOURCE$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_OPENBSD_SOURCE$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_ATTRIBS_EXT__$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_BFP_EXT__$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_DFP_EXT__$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_EXT__$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_FUNCS_EXT__$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_TYPES_EXT__$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^__STDC_WANT_LIB_EXT2__$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^__STDC_WANT_MATH_SPEC_FUNCS__$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_MINIX$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_POSIX_SOURCE$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^__EXTENSIONS__$])
m4trace:configure.ac:57: -1- m4_pattern_allow([^_XOPEN_SOURCE$])
m4trace:configure.ac:65: -1- SQUID_YESNO([$enableval], [--enable-arch-native])
m4trace:configure.ac:73: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_check_marchnative], [-march=native])
m4trace:configure.ac:73: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:73: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:73: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:79: -1- AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory])
m4trace:configure.ac:79: -1- m4_pattern_allow([^HAVE_CXX17$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^HAVE_CXX17$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^BUILDCXX$])
m4trace:configure.ac:98: -1- m4_pattern_allow([^BUILDCXX$])
m4trace:configure.ac:101: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:104: -1- m4_pattern_allow([^LN_S$])
m4trace:configure.ac:105: -1- AC_PROG_EGREP
m4trace:configure.ac:105: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:105: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:107: -1- m4_pattern_allow([^SH$])
m4trace:configure.ac:108: -1- m4_pattern_allow([^FALSE$])
m4trace:configure.ac:109: -1- m4_pattern_allow([^TRUE$])
m4trace:configure.ac:110: -1- m4_pattern_allow([^MV$])
m4trace:configure.ac:111: -1- m4_pattern_allow([^MKDIR$])
m4trace:configure.ac:112: -1- m4_pattern_allow([^LN$])
m4trace:configure.ac:113: -1- m4_pattern_allow([^CHMOD$])
m4trace:configure.ac:114: -1- m4_pattern_allow([^TR$])
m4trace:configure.ac:115: -1- m4_pattern_allow([^RM$])
m4trace:configure.ac:119: -1- PKG_PROG_PKG_CONFIG
m4trace:configure.ac:119: -1- m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4trace:configure.ac:119: -1- m4_pattern_allow([^PKG_CONFIG(_PATH)?$])
m4trace:configure.ac:119: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:119: -1- m4_pattern_allow([^PKG_CONFIG_PATH$])
m4trace:configure.ac:119: -1- m4_pattern_allow([^PKG_CONFIG_LIBDIR$])
m4trace:configure.ac:119: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:125: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:129: -1- m4_pattern_allow([^POD2MAN$])
m4trace:configure.ac:130: -1- AM_CONDITIONAL([ENABLE_POD2MAN_DOC], [test "x${ac_cv_path_POD2MAN}" != "x$FALSE"])
m4trace:configure.ac:130: -1- m4_pattern_allow([^ENABLE_POD2MAN_DOC_TRUE$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^ENABLE_POD2MAN_DOC_FALSE$])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([ENABLE_POD2MAN_DOC_TRUE])
m4trace:configure.ac:130: -1- _AM_SUBST_NOTMAKE([ENABLE_POD2MAN_DOC_FALSE])
m4trace:configure.ac:132: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:134: -1- m4_pattern_allow([^AR_R$])
m4trace:configure.ac:136: -1- m4_pattern_allow([^LINUXDOC$])
m4trace:configure.ac:137: -1- AM_CONDITIONAL([ENABLE_RELEASE_DOCS], [test "x${ac_cv_path_LINUXDOC}" != "x$FALSE"])
m4trace:configure.ac:137: -1- m4_pattern_allow([^ENABLE_RELEASE_DOCS_TRUE$])
m4trace:configure.ac:137: -1- m4_pattern_allow([^ENABLE_RELEASE_DOCS_FALSE$])
m4trace:configure.ac:137: -1- _AM_SUBST_NOTMAKE([ENABLE_RELEASE_DOCS_TRUE])
m4trace:configure.ac:137: -1- _AM_SUBST_NOTMAKE([ENABLE_RELEASE_DOCS_FALSE])
m4trace:configure.ac:140: -1- m4_pattern_allow([^SQUID_RELEASE$])
m4trace:configure.ac:144: -1- m4_pattern_allow([^DEFAULT_PREFIX$])
m4trace:configure.ac:146: -1- SQUID_YESNO([$enableval], [--enable-strict-error-checking])
m4trace:configure.ac:156: -1- LT_INIT([dlopen])
m4trace:configure.ac:156: -1- m4_pattern_forbid([^_?LT_[A-Z_]+$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])
m4trace:configure.ac:156: -1- LTOPTIONS_VERSION
m4trace:configure.ac:156: -1- LTSUGAR_VERSION
m4trace:configure.ac:156: -1- LTVERSION_VERSION
m4trace:configure.ac:156: -1- LTOBSOLETE_VERSION
m4trace:configure.ac:156: -1- _LT_PROG_LTMAIN
m4trace:configure.ac:156: -1- m4_pattern_allow([^LIBTOOL$])
m4trace:configure.ac:156: -1- _LT_PREPARE_SED_QUOTE_VARS
m4trace:configure.ac:156: -1- _LT_PROG_ECHO_BACKSLASH
m4trace:configure.ac:156: -1- LT_PATH_LD
m4trace:configure.ac:156: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^FGREP$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:156: -1- LT_PATH_NM
m4trace:configure.ac:156: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^ac_ct_DUMPBIN$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:156: -1- LT_CMD_MAX_LEN
m4trace:configure.ac:156: -1- m4_pattern_allow([^FILECMD$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^ac_ct_AR$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:156: -1- _LT_WITH_SYSROOT
m4trace:configure.ac:156: -1- m4_pattern_allow([LT_OBJDIR])
m4trace:configure.ac:156: -1- m4_pattern_allow([^LT_OBJDIR$])
m4trace:configure.ac:156: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:156: -1- _LT_PATH_TOOL_PREFIX([${ac_tool_prefix}file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:156: -1- _LT_PATH_TOOL_PREFIX([file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:156: -1- LT_SUPPORTED_TAG([CC])
m4trace:configure.ac:156: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:156: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:156: -1- _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions], [lt_cv_prog_compiler_rtti_exceptions], [-fno-rtti -fno-exceptions], [], [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, )="$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, ) -fno-rtti -fno-exceptions"])
m4trace:configure.ac:156: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, ) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, )], [$_LT_TAGVAR(lt_prog_compiler_pic, )@&t@m4_if([],[],[ -DPIC],[m4_if([],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, ) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, )=" $_LT_TAGVAR(lt_prog_compiler_pic, )" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, )=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, )=no])
m4trace:configure.ac:156: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, )=])
m4trace:configure.ac:156: -1- m4_pattern_allow([^MANIFEST_TOOL$])
m4trace:configure.ac:156: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:156: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:156: -1- _LT_REQUIRED_DARWIN_CHECKS
m4trace:configure.ac:156: -1- m4_pattern_allow([^DSYMUTIL$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^NMEDIT$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^LIPO$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^OTOOL$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^OTOOL64$])
m4trace:configure.ac:156: -1- _LT_LINKER_OPTION([if $CC understands -b], [lt_cv_prog_compiler__b], [-b], [_LT_TAGVAR(archive_cmds, )='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'], [_LT_TAGVAR(archive_cmds, )='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])
m4trace:configure.ac:156: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:156: -1- LT_SYS_DLOPEN_SELF
m4trace:configure.ac:156: -1- m4_pattern_allow([^HAVE_DLFCN_H$])
m4trace:configure.ac:156: -1- LT_LANG([CXX])
m4trace:configure.ac:156: -1- LT_SUPPORTED_TAG([CXX])
m4trace:configure.ac:156: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:156: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:156: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:156: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:156: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:156: -1- LT_PATH_LD
m4trace:configure.ac:156: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:156: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:156: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:156: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, CXX) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, CXX)], [$_LT_TAGVAR(lt_prog_compiler_pic, CXX)@&t@m4_if([CXX],[],[ -DPIC],[m4_if([CXX],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, CXX) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, CXX)=" $_LT_TAGVAR(lt_prog_compiler_pic, CXX)" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, CXX)=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, CXX)=no])
m4trace:configure.ac:156: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works_CXX], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, CXX)=])
m4trace:configure.ac:156: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:157: -1- m4_pattern_allow([^top_build_prefix$])
m4trace:configure.ac:164: -1- LTDL_INIT
m4trace:configure.ac:164: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_cxx], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LIBLTDL$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LTDLDEPS$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LTDLINCL$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^INCLTDL$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_LTDL$])
m4trace:configure.ac:164: -1- _LTDL_SETUP
m4trace:configure.ac:164: -1- LT_SYS_MODULE_EXT
m4trace:configure.ac:164: -1- m4_pattern_allow([LT_MODULE_EXT])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_MODULE_EXT$])
m4trace:configure.ac:164: -1- m4_pattern_allow([LT_SHARED_EXT])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_SHARED_EXT$])
m4trace:configure.ac:164: -1- m4_pattern_allow([LT_SHARED_LIB_MEMBER])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_SHARED_LIB_MEMBER$])
m4trace:configure.ac:164: -1- LT_SYS_MODULE_PATH
m4trace:configure.ac:164: -1- m4_pattern_allow([LT_MODULE_PATH_VAR])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_MODULE_PATH_VAR$])
m4trace:configure.ac:164: -1- LT_SYS_DLSEARCH_PATH
m4trace:configure.ac:164: -1- m4_pattern_allow([LT_DLSEARCH_PATH])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_DLSEARCH_PATH$])
m4trace:configure.ac:164: -1- LT_LIB_DLLOAD
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_DLLOADERS$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_DLLOADERS$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_DLERROR$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LIBADD_DLOPEN$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_SHL_LOAD$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_SHL_LOAD$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LIBADD_SHL_LOAD$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_DYLD$])
m4trace:configure.ac:164: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_DECL_CYGWIN_CONV_PATH$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_DLD$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LIBADD_DLD_LINK$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_DLPREOPEN$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_LIBDLLOADER$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_DLPREOPEN$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LIBADD_DL$])
m4trace:configure.ac:164: -1- LT_SYS_SYMBOL_USCORE
m4trace:configure.ac:164: -1- m4_pattern_allow([^sys_symbol_underscore$])
m4trace:configure.ac:164: -1- LT_FUNC_DLSYM_USCORE
m4trace:configure.ac:164: -1- m4_pattern_allow([^NEED_USCORE$])
m4trace:configure.ac:164: -1- LT_SYS_DLOPEN_DEPLIBS
m4trace:configure.ac:164: -1- m4_pattern_allow([^LTDL_DLOPEN_DEPLIBS$])
m4trace:configure.ac:164: -1- LT_FUNC_ARGZ
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_ARGZ_H$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_ERROR_T$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^error_t$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^__error_t_defined$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^_LT_LIBOBJS$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_WORKING_ARGZ$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^_LT_LIBOBJS$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_ARGZ_H$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_PRELOADED_SYMBOLS$])
m4trace:configure.ac:164: -1- AM_CONDITIONAL([INSTALL_LTDL], [test no != "${enable_ltdl_install-no}"])
m4trace:configure.ac:164: -1- m4_pattern_allow([^INSTALL_LTDL_TRUE$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^INSTALL_LTDL_FALSE$])
m4trace:configure.ac:164: -1- _AM_SUBST_NOTMAKE([INSTALL_LTDL_TRUE])
m4trace:configure.ac:164: -1- _AM_SUBST_NOTMAKE([INSTALL_LTDL_FALSE])
m4trace:configure.ac:164: -1- AM_CONDITIONAL([CONVENIENCE_LTDL], [test no != "${enable_ltdl_convenience-no}"])
m4trace:configure.ac:164: -1- m4_pattern_allow([^CONVENIENCE_LTDL_TRUE$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^CONVENIENCE_LTDL_FALSE$])
m4trace:configure.ac:164: -1- _AM_SUBST_NOTMAKE([CONVENIENCE_LTDL_TRUE])
m4trace:configure.ac:164: -1- _AM_SUBST_NOTMAKE([CONVENIENCE_LTDL_FALSE])
m4trace:configure.ac:164: -1- m4_pattern_allow([^subdirs$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_CONFIG_H$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_UNISTD_H$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_DL_H$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_SYS_DL_H$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_DLD_H$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_MACH_O_DYLD_H$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^HAVE_DIRENT_H$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^_LT_LIBOBJS$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^_LT_LIBOBJS$])
m4trace:configure.ac:164: -1- m4_pattern_allow([LT_LIBEXT])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_LIBEXT$])
m4trace:configure.ac:164: -1- m4_pattern_allow([LT_LIBPREFIX])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LT_LIBPREFIX$])
m4trace:configure.ac:164: -1- m4_pattern_allow([^LTDLOPEN$])
m4trace:configure.ac:167: -1- LT_LIB_DLLOAD
m4trace:configure.ac:167: -1- m4_pattern_allow([^LT_DLLOADERS$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^LT_DLLOADERS$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE_DLERROR$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^LIBADD_DLOPEN$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE_SHL_LOAD$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE_SHL_LOAD$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^LIBADD_SHL_LOAD$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE_DYLD$])
m4trace:configure.ac:167: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE_DECL_CYGWIN_CONV_PATH$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE_DLD$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^LIBADD_DLD_LINK$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^LT_DLPREOPEN$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^HAVE_LIBDLLOADER$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^LT_DLPREOPEN$])
m4trace:configure.ac:167: -1- m4_pattern_allow([^LIBADD_DL$])
m4trace:configure.ac:170: -1- m4_pattern_allow([^INCLTDL$])
m4trace:configure.ac:171: -1- m4_pattern_allow([^LIBLTDL$])
m4trace:configure.ac:174: -1- m4_pattern_allow([^USE_LOADABLE_MODULES$])
m4trace:configure.ac:175: -1- AM_CONDITIONAL([ENABLE_LOADABLE_MODULES], [test "x${enable_shared:=yes}" = "xyes"])
m4trace:configure.ac:175: -1- m4_pattern_allow([^ENABLE_LOADABLE_MODULES_TRUE$])
m4trace:configure.ac:175: -1- m4_pattern_allow([^ENABLE_LOADABLE_MODULES_FALSE$])
m4trace:configure.ac:175: -1- _AM_SUBST_NOTMAKE([ENABLE_LOADABLE_MODULES_TRUE])
m4trace:configure.ac:175: -1- _AM_SUBST_NOTMAKE([ENABLE_LOADABLE_MODULES_FALSE])
m4trace:configure.ac:178: -1- SQUID_CC_GUESS_VARIANT
m4trace:configure.ac:179: -1- SQUID_CC_GUESS_OPTIONS
m4trace:configure.ac:186: -1- m4_pattern_allow([^CGIEXT$])
m4trace:configure.ac:188: -1- AM_CONDITIONAL([ENABLE_WIN32SPECIFIC], [test "x$squid_host_os" = "xmingw"])
m4trace:configure.ac:188: -1- m4_pattern_allow([^ENABLE_WIN32SPECIFIC_TRUE$])
m4trace:configure.ac:188: -1- m4_pattern_allow([^ENABLE_WIN32SPECIFIC_FALSE$])
m4trace:configure.ac:188: -1- _AM_SUBST_NOTMAKE([ENABLE_WIN32SPECIFIC_TRUE])
m4trace:configure.ac:188: -1- _AM_SUBST_NOTMAKE([ENABLE_WIN32SPECIFIC_FALSE])
m4trace:configure.ac:189: -1- AM_CONDITIONAL([ENABLE_WIN32_IPC], [test "x$squid_host_os" = "xmingw"])
m4trace:configure.ac:189: -1- m4_pattern_allow([^ENABLE_WIN32_IPC_TRUE$])
m4trace:configure.ac:189: -1- m4_pattern_allow([^ENABLE_WIN32_IPC_FALSE$])
m4trace:configure.ac:189: -1- _AM_SUBST_NOTMAKE([ENABLE_WIN32_IPC_TRUE])
m4trace:configure.ac:189: -1- _AM_SUBST_NOTMAKE([ENABLE_WIN32_IPC_FALSE])
m4trace:configure.ac:191: -1- SQUID_CHECK_WINSOCK_LIB
m4trace:configure.ac:191: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:191: -1- SQUID_STATE_SAVE([winsock])
m4trace:configure.ac:191: -1- SQUID_SEARCH_LIBS([squid_getprotobynumber], [ws2_32], [], [], [], [
#if HAVE_WINSOCK2_H
#include <winsock2.h>
#endif
/* ugly hack. */
void squid_getprotobynumber(void) {
    getprotobynumber(1);
}
  ])
m4trace:configure.ac:191: -1- SQUID_STATE_ROLLBACK([winsock])
m4trace:configure.ac:191: -1- SQUID_STATE_COMMIT([winsock])
m4trace:configure.ac:191: -1- m4_pattern_allow([^HAVE_WS2TCPIP_H$])
m4trace:configure.ac:191: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:191: -1- m4_pattern_allow([^HAVE_WINDOWS_H$])
m4trace:configure.ac:191: -1- m4_pattern_allow([^HAVE_IO_H$])
m4trace:configure.ac:191: -1- m4_pattern_allow([^MINGW_LIBS$])
m4trace:configure.ac:191: -1- m4_pattern_allow([^HAVE_FSYNC$])
m4trace:configure.ac:222: -1- m4_pattern_allow([^CONFIG_HOST_TYPE$])
m4trace:configure.ac:224: -1- m4_pattern_allow([^SQUID_CONFIGURE_OPTIONS$])
m4trace:configure.ac:232: -1- m4_pattern_allow([^CACHE_EFFECTIVE_USER$])
m4trace:configure.ac:243: -1- m4_pattern_allow([^DEFAULT_LOG_DIR$])
m4trace:configure.ac:254: -1- m4_pattern_allow([^DEFAULT_PID_FILE$])
m4trace:configure.ac:265: -1- m4_pattern_allow([^DEFAULT_SWAP_DIR$])
m4trace:configure.ac:305: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED([$squid_cv_cc_option_wall])
m4trace:configure.ac:305: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_([$squid_cv_cc_option_wall], [squid_cv_cc_arg_squid_cv_cc_option_wall])
m4trace:configure.ac:305: -1- SQUID_STATE_SAVE([CXXARGTEST])
m4trace:configure.ac:305: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_squid_cv_cc_option_wall], [$squid_cv_cc_option_wall])
m4trace:configure.ac:305: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:305: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:305: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:305: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_squid_cv_cc_option_wall], [-Werror $squid_cv_cc_option_wall])
m4trace:configure.ac:305: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:305: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:305: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:305: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_squid_cv_cc_option_wall], [$squid_cv_cxx_option_werror $squid_cv_cc_option_wall])
m4trace:configure.ac:305: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:305: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:305: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:305: -1- SQUID_STATE_ROLLBACK([CXXARGTEST])
m4trace:configure.ac:305: -1- SQUID_STATE_COMMIT([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED([-Wextra])
m4trace:configure.ac:308: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_([-Wextra], [squid_cv_cc_arg_wextra])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wextra], [-Werror=extra])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wextra], [-Werror -Wextra])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wextra], [$squid_cv_cxx_option_werror -Wextra])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED([-Wno-unused-private-field])
m4trace:configure.ac:308: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_([-Wno-unused-private-field], [squid_cv_cc_arg_wno_unused_private_field])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wno_unused_private_field], [-Werror=no-unused-private-field])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wno_unused_private_field], [-Werror -Wno-unused-private-field])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wno_unused_private_field], [$squid_cv_cxx_option_werror -Wno-unused-private-field])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED([-Wimplicit-fallthrough=5])
m4trace:configure.ac:308: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_([-Wimplicit-fallthrough=5], [squid_cv_cc_arg_wimplicit_fallthrough_5])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wimplicit_fallthrough_5], [-Werror=implicit-fallthrough=5])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wimplicit_fallthrough_5], [-Werror -Wimplicit-fallthrough=5])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wimplicit_fallthrough_5], [$squid_cv_cxx_option_werror -Wimplicit-fallthrough=5])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED([-Wno-implicit-fallthrough])
m4trace:configure.ac:308: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_([-Wno-implicit-fallthrough], [squid_cv_cc_arg_wno_implicit_fallthrough])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wno_implicit_fallthrough], [-Werror=no-implicit-fallthrough])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wno_implicit_fallthrough], [-Werror -Wno-implicit-fallthrough])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wno_implicit_fallthrough], [$squid_cv_cxx_option_werror -Wno-implicit-fallthrough])
m4trace:configure.ac:308: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:308: -1- SQUID_STATE_ROLLBACK([CXXARGTEST])
m4trace:configure.ac:308: -1- SQUID_STATE_COMMIT([CXXARGTEST])
m4trace:configure.ac:327: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED([-Wpointer-arith])
m4trace:configure.ac:327: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_([-Wpointer-arith], [squid_cv_cc_arg_wpointer_arith])
m4trace:configure.ac:327: -1- SQUID_STATE_SAVE([CXXARGTEST])
m4trace:configure.ac:327: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wpointer_arith], [-Werror=pointer-arith])
m4trace:configure.ac:327: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:327: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:327: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:327: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wpointer_arith], [-Werror -Wpointer-arith])
m4trace:configure.ac:327: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:327: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:327: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:327: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wpointer_arith], [$squid_cv_cxx_option_werror -Wpointer-arith])
m4trace:configure.ac:327: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:327: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:327: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:327: -1- SQUID_STATE_ROLLBACK([CXXARGTEST])
m4trace:configure.ac:327: -1- SQUID_STATE_COMMIT([CXXARGTEST])
m4trace:configure.ac:328: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED([-Wwrite-strings])
m4trace:configure.ac:328: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_([-Wwrite-strings], [squid_cv_cc_arg_wwrite_strings])
m4trace:configure.ac:328: -1- SQUID_STATE_SAVE([CXXARGTEST])
m4trace:configure.ac:328: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wwrite_strings], [-Werror=write-strings])
m4trace:configure.ac:328: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:328: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:328: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:328: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wwrite_strings], [-Werror -Wwrite-strings])
m4trace:configure.ac:328: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:328: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:328: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:328: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wwrite_strings], [$squid_cv_cxx_option_werror -Wwrite-strings])
m4trace:configure.ac:328: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:328: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:328: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:328: -1- SQUID_STATE_ROLLBACK([CXXARGTEST])
m4trace:configure.ac:328: -1- SQUID_STATE_COMMIT([CXXARGTEST])
m4trace:configure.ac:329: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED([-Wcomments])
m4trace:configure.ac:329: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_([-Wcomments], [squid_cv_cc_arg_wcomments])
m4trace:configure.ac:329: -1- SQUID_STATE_SAVE([CXXARGTEST])
m4trace:configure.ac:329: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wcomments], [-Werror=comments])
m4trace:configure.ac:329: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:329: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:329: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:329: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wcomments], [-Werror -Wcomments])
m4trace:configure.ac:329: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:329: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:329: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:329: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wcomments], [$squid_cv_cxx_option_werror -Wcomments])
m4trace:configure.ac:329: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:329: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:329: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:329: -1- SQUID_STATE_ROLLBACK([CXXARGTEST])
m4trace:configure.ac:329: -1- SQUID_STATE_COMMIT([CXXARGTEST])
m4trace:configure.ac:330: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED([-Wshadow])
m4trace:configure.ac:330: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_([-Wshadow], [squid_cv_cc_arg_wshadow])
m4trace:configure.ac:330: -1- SQUID_STATE_SAVE([CXXARGTEST])
m4trace:configure.ac:330: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wshadow], [-Werror=shadow])
m4trace:configure.ac:330: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:330: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:330: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:330: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wshadow], [-Werror -Wshadow])
m4trace:configure.ac:330: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:330: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:330: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:330: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wshadow], [$squid_cv_cxx_option_werror -Wshadow])
m4trace:configure.ac:330: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:330: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:330: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:330: -1- SQUID_STATE_ROLLBACK([CXXARGTEST])
m4trace:configure.ac:330: -1- SQUID_STATE_COMMIT([CXXARGTEST])
m4trace:configure.ac:331: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED([-Wmissing-declarations])
m4trace:configure.ac:331: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_([-Wmissing-declarations], [squid_cv_cc_arg_wmissing_declarations])
m4trace:configure.ac:331: -1- SQUID_STATE_SAVE([CXXARGTEST])
m4trace:configure.ac:331: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wmissing_declarations], [-Werror=missing-declarations])
m4trace:configure.ac:331: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:331: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:331: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:331: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wmissing_declarations], [-Werror -Wmissing-declarations])
m4trace:configure.ac:331: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:331: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:331: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:331: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_wmissing_declarations], [$squid_cv_cxx_option_werror -Wmissing-declarations])
m4trace:configure.ac:331: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:331: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:331: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:331: -1- SQUID_STATE_ROLLBACK([CXXARGTEST])
m4trace:configure.ac:331: -1- SQUID_STATE_COMMIT([CXXARGTEST])
m4trace:configure.ac:332: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED([-Woverloaded-virtual])
m4trace:configure.ac:332: -1- SQUID_CC_ADD_CXXFLAG_WARNING_IF_SUPPORTED_([-Woverloaded-virtual], [squid_cv_cc_arg_woverloaded_virtual])
m4trace:configure.ac:332: -1- SQUID_STATE_SAVE([CXXARGTEST])
m4trace:configure.ac:332: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_woverloaded_virtual], [-Werror=overloaded-virtual])
m4trace:configure.ac:332: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:332: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:332: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:332: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_woverloaded_virtual], [-Werror -Woverloaded-virtual])
m4trace:configure.ac:332: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:332: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:332: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:332: -1- SQUID_CC_CHECK_ARGUMENT([squid_cv_cc_arg_woverloaded_virtual], [$squid_cv_cxx_option_werror -Woverloaded-virtual])
m4trace:configure.ac:332: -1- SQUID_STATE_SAVE([ARGCHECK])
m4trace:configure.ac:332: -1- SQUID_STATE_ROLLBACK([ARGCHECK])
m4trace:configure.ac:332: -1- SQUID_STATE_COMMIT([ARGCHECK])
m4trace:configure.ac:332: -1- SQUID_STATE_ROLLBACK([CXXARGTEST])
m4trace:configure.ac:332: -1- SQUID_STATE_COMMIT([CXXARGTEST])
m4trace:configure.ac:335: -1- SQUID_CC_REQUIRE_ARGUMENT([ac_cv_require_wno_deprecated_register], [-Werror -Wno-deprecated-register], [[#include <arpa/inet.h>]], [[int fox=ntohs(1);]])
m4trace:configure.ac:335: -1- SQUID_STATE_SAVE([ARGREQ])
m4trace:configure.ac:335: -1- SQUID_STATE_ROLLBACK([ARGREQ])
m4trace:configure.ac:335: -1- SQUID_STATE_COMMIT([ARGREQ])
m4trace:configure.ac:351: -1- SQUID_EMBED_BUILD_INFO
m4trace:configure.ac:351: -1- m4_pattern_allow([^GIT$])
m4trace:configure.ac:351: -1- m4_pattern_allow([^SQUID_BUILD_INFO$])
m4trace:configure.ac:372: -1- SQUID_YESNO([$enableval], [--enable-xmalloc-statistics])
m4trace:configure.ac:377: -1- SQUID_DEFINE_BOOL([XMALLOC_STATISTICS], [${enable_xmalloc_statistics:=no}], [Show malloc statistics in status page])
m4trace:configure.ac:377: -1- m4_pattern_allow([^XMALLOC_STATISTICS$])
m4trace:configure.ac:390: -1- m4_pattern_allow([^AUFS_IO_THREADS$])
m4trace:configure.ac:397: -1- SQUID_AUTO_LIB([dl], [dynamic linking], [LIBDL])
m4trace:configure.ac:398: -1- SQUID_CHECK_LIB_WORKS([dl], [
  LDFLAGS="$LIBDL_PATH $LDFLAGS"
  AC_CHECK_LIB(dl, dlopen,[LIBDL_LIBS="-ldl"])
])
m4trace:configure.ac:398: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:398: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:398: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:398: -1- m4_pattern_allow([^HAVE_LIBDL$])
m4trace:configure.ac:398: -1- AM_CONDITIONAL([ENABLE_LIBDL], [test "x$with_dl" != "xno"])
m4trace:configure.ac:398: -1- m4_pattern_allow([^ENABLE_LIBDL_TRUE$])
m4trace:configure.ac:398: -1- m4_pattern_allow([^ENABLE_LIBDL_FALSE$])
m4trace:configure.ac:398: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBDL_TRUE])
m4trace:configure.ac:398: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBDL_FALSE])
m4trace:configure.ac:398: -1- m4_pattern_allow([^LIBDL_LIBS$])
m4trace:configure.ac:403: -1- AC_DEFUN([LIBATOMIC_CHECKER], [
  AC_MSG_CHECKING(whether linking $1 -latomic works)
  AC_LINK_IFELSE([
    AC_LANG_SOURCE([[
#include <atomic>
#include <cstdint>
      int
      main(int argc, char **) {
          return (
              std::atomic<uint8_t>(uint8_t(argc)).exchange(0) &&
              std::atomic<uint64_t>{}.is_lock_free()
              ) ? 0 : 1;
      }
  ]])],[
    AC_MSG_RESULT(yes)
    libatomic_checker_result="yes"],[
    AC_MSG_RESULT(no)
    libatomic_checker_result="no"
])])
m4trace:configure.ac:424: -1- SQUID_STATE_SAVE([LIBATOMIC])
m4trace:configure.ac:425: -1- LIBATOMIC_CHECKER([without])
m4trace:configure.ac:426: -1- LIBATOMIC_CHECKER([with])
m4trace:configure.ac:433: -1- SQUID_STATE_ROLLBACK([LIBATOMIC])
m4trace:configure.ac:433: -1- SQUID_STATE_COMMIT([LIBATOMIC])
m4trace:configure.ac:434: -1- m4_pattern_allow([^ATOMICLIB$])
m4trace:configure.ac:436: -1- SQUID_AUTO_LIB([psapi], [Windows PSAPI.dll], [LIBPSAPI])
m4trace:configure.ac:437: -1- SQUID_CHECK_LIB_WORKS([psapi], [
  CPPFLAGS="$LIBPSAPI_CFLAGS $CPPFLAGS"
  LIBS="$LIBPSAPI_PATH $LIBS"
  AC_CHECK_LIB([psapi],[K32GetProcessMemoryInfo],[
    LIBPSAPI_LIBS="-lpsapi"
    AC_CHECK_HEADERS([psapi.h],,,[
#if HAVE_WINDOWS_H
#include <windows.h>
#endif
    ])
  ])
])
m4trace:configure.ac:437: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:437: -1- m4_pattern_allow([^HAVE_PSAPI_H$])
m4trace:configure.ac:437: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:437: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:437: -1- m4_pattern_allow([^HAVE_LIBPSAPI$])
m4trace:configure.ac:437: -1- AM_CONDITIONAL([ENABLE_LIBPSAPI], [test "x$with_psapi" != "xno"])
m4trace:configure.ac:437: -1- m4_pattern_allow([^ENABLE_LIBPSAPI_TRUE$])
m4trace:configure.ac:437: -1- m4_pattern_allow([^ENABLE_LIBPSAPI_FALSE$])
m4trace:configure.ac:437: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBPSAPI_TRUE])
m4trace:configure.ac:437: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBPSAPI_FALSE])
m4trace:configure.ac:437: -1- m4_pattern_allow([^LIBPSAPI_LIBS$])
m4trace:configure.ac:451: -1- m4_pattern_allow([^HAVE_SHM$])
m4trace:configure.ac:471: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/DiskIO], [squid_disk_module_candidates])
m4trace:configure.ac:477: -1- SQUID_CLEANUP_MODULES_LIST([squid_disk_module_candidates])
m4trace:configure.ac:478: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/DiskIO], [squid_disk_module_candidates])
m4trace:configure.ac:480: -1- SQUID_DEFINE_BOOL([USE_DISKIO], [$enable_disk_io], [DiskIO modules are expected to be available.])
m4trace:configure.ac:480: -1- m4_pattern_allow([^USE_DISKIO$])
m4trace:configure.ac:503: -1- m4_pattern_allow([^HAVE_AIO_H$])
m4trace:configure.ac:503: -1- m4_pattern_allow([^HAVE_DISKIO_MODULE_AIO$])
m4trace:configure.ac:503: -1- m4_pattern_allow([^HAVE_DISKIO_MODULE_BLOCKING$])
m4trace:configure.ac:503: -1- m4_pattern_allow([^HAVE_DISKIO_MODULE_DISKDAEMON$])
m4trace:configure.ac:503: -1- SQUID_STATE_SAVE([diskthreads_state], [SQUID_CFLAGS SQUID_CXXFLAGS])
m4trace:configure.ac:503: -1- m4_pattern_allow([^HAVE_DISKIO_MODULE_DISKTHREADS$])
m4trace:configure.ac:503: -1- SQUID_STATE_ROLLBACK([diskthreads_state])
m4trace:configure.ac:503: -1- SQUID_STATE_COMMIT([diskthreads_state])
m4trace:configure.ac:503: -1- m4_pattern_allow([^HAVE_DISKIO_MODULE_IPCIO$])
m4trace:configure.ac:503: -1- m4_pattern_allow([^HAVE_DISKIO_MODULE_MMAPPED$])
m4trace:configure.ac:678: -1- m4_pattern_allow([^DISK_MODULES$])
m4trace:configure.ac:679: -1- m4_pattern_allow([^DISK_LIBS$])
m4trace:configure.ac:680: -1- AM_CONDITIONAL([ENABLE_DISKIO_AIO], [test "x$squid_disk_module_candidates_AIO" = "xyes"])
m4trace:configure.ac:680: -1- m4_pattern_allow([^ENABLE_DISKIO_AIO_TRUE$])
m4trace:configure.ac:680: -1- m4_pattern_allow([^ENABLE_DISKIO_AIO_FALSE$])
m4trace:configure.ac:680: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_AIO_TRUE])
m4trace:configure.ac:680: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_AIO_FALSE])
m4trace:configure.ac:681: -1- m4_pattern_allow([^AIOLIB$])
m4trace:configure.ac:682: -1- AM_CONDITIONAL([ENABLE_WIN32_AIO], [test "x$squid_disk_module_candidates_AIO" = "xyes" -a "x$ENABLE_WIN32_AIO" = "x1"])
m4trace:configure.ac:682: -1- m4_pattern_allow([^ENABLE_WIN32_AIO_TRUE$])
m4trace:configure.ac:682: -1- m4_pattern_allow([^ENABLE_WIN32_AIO_FALSE$])
m4trace:configure.ac:682: -1- _AM_SUBST_NOTMAKE([ENABLE_WIN32_AIO_TRUE])
m4trace:configure.ac:682: -1- _AM_SUBST_NOTMAKE([ENABLE_WIN32_AIO_FALSE])
m4trace:configure.ac:683: -1- AM_CONDITIONAL([ENABLE_DISKIO_BLOCKING], [test "x$squid_disk_module_candidates_Blocking" = "xyes"])
m4trace:configure.ac:683: -1- m4_pattern_allow([^ENABLE_DISKIO_BLOCKING_TRUE$])
m4trace:configure.ac:683: -1- m4_pattern_allow([^ENABLE_DISKIO_BLOCKING_FALSE$])
m4trace:configure.ac:683: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_BLOCKING_TRUE])
m4trace:configure.ac:683: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_BLOCKING_FALSE])
m4trace:configure.ac:684: -1- AM_CONDITIONAL([ENABLE_DISKIO_DISKDAEMON], [test "x$squid_disk_module_candidates_DiskDaemon" = "xyes"])
m4trace:configure.ac:684: -1- m4_pattern_allow([^ENABLE_DISKIO_DISKDAEMON_TRUE$])
m4trace:configure.ac:684: -1- m4_pattern_allow([^ENABLE_DISKIO_DISKDAEMON_FALSE$])
m4trace:configure.ac:684: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_DISKDAEMON_TRUE])
m4trace:configure.ac:684: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_DISKDAEMON_FALSE])
m4trace:configure.ac:685: -1- AM_CONDITIONAL([ENABLE_DISKIO_DISKTHREADS], [test "x$squid_disk_module_candidates_DiskThreads" = "xyes"])
m4trace:configure.ac:685: -1- m4_pattern_allow([^ENABLE_DISKIO_DISKTHREADS_TRUE$])
m4trace:configure.ac:685: -1- m4_pattern_allow([^ENABLE_DISKIO_DISKTHREADS_FALSE$])
m4trace:configure.ac:685: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_DISKTHREADS_TRUE])
m4trace:configure.ac:685: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_DISKTHREADS_FALSE])
m4trace:configure.ac:686: -1- m4_pattern_allow([^LIBPTHREADS$])
m4trace:configure.ac:687: -1- AM_CONDITIONAL([ENABLE_WIN32_AIOPS], [test "x$squid_disk_module_candidates_DiskThreads" = "xyes" -a "x$ENABLE_WIN32_AIOPS" = "x1"])
m4trace:configure.ac:687: -1- m4_pattern_allow([^ENABLE_WIN32_AIOPS_TRUE$])
m4trace:configure.ac:687: -1- m4_pattern_allow([^ENABLE_WIN32_AIOPS_FALSE$])
m4trace:configure.ac:687: -1- _AM_SUBST_NOTMAKE([ENABLE_WIN32_AIOPS_TRUE])
m4trace:configure.ac:687: -1- _AM_SUBST_NOTMAKE([ENABLE_WIN32_AIOPS_FALSE])
m4trace:configure.ac:688: -1- AM_CONDITIONAL([ENABLE_DISKIO_IPCIO], [test "x$squid_disk_module_candidates_IpcIo" = "xyes"])
m4trace:configure.ac:688: -1- m4_pattern_allow([^ENABLE_DISKIO_IPCIO_TRUE$])
m4trace:configure.ac:688: -1- m4_pattern_allow([^ENABLE_DISKIO_IPCIO_FALSE$])
m4trace:configure.ac:688: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_IPCIO_TRUE])
m4trace:configure.ac:688: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_IPCIO_FALSE])
m4trace:configure.ac:689: -1- AM_CONDITIONAL([ENABLE_DISKIO_MMAPPED], [test "x$squid_disk_module_candidates_Mmapped" = "xyes"])
m4trace:configure.ac:689: -1- m4_pattern_allow([^ENABLE_DISKIO_MMAPPED_TRUE$])
m4trace:configure.ac:689: -1- m4_pattern_allow([^ENABLE_DISKIO_MMAPPED_FALSE$])
m4trace:configure.ac:689: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_MMAPPED_TRUE])
m4trace:configure.ac:689: -1- _AM_SUBST_NOTMAKE([ENABLE_DISKIO_MMAPPED_FALSE])
m4trace:configure.ac:710: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/fs], [squid_storeio_module_candidates])
m4trace:configure.ac:713: -1- SQUID_CLEANUP_MODULES_LIST([squid_storeio_module_candidates])
m4trace:configure.ac:714: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/fs], [squid_storeio_module_candidates])
m4trace:configure.ac:747: -1- AM_CONDITIONAL([ENABLE_FS_UFS], [test "x$squid_do_build_ufs" = "xtrue"])
m4trace:configure.ac:747: -1- m4_pattern_allow([^ENABLE_FS_UFS_TRUE$])
m4trace:configure.ac:747: -1- m4_pattern_allow([^ENABLE_FS_UFS_FALSE$])
m4trace:configure.ac:747: -1- _AM_SUBST_NOTMAKE([ENABLE_FS_UFS_TRUE])
m4trace:configure.ac:747: -1- _AM_SUBST_NOTMAKE([ENABLE_FS_UFS_FALSE])
m4trace:configure.ac:748: -1- AM_CONDITIONAL([ENABLE_FS_ROCK], [test "x$squid_do_build_rock" = "xtrue"])
m4trace:configure.ac:748: -1- m4_pattern_allow([^ENABLE_FS_ROCK_TRUE$])
m4trace:configure.ac:748: -1- m4_pattern_allow([^ENABLE_FS_ROCK_FALSE$])
m4trace:configure.ac:748: -1- _AM_SUBST_NOTMAKE([ENABLE_FS_ROCK_TRUE])
m4trace:configure.ac:748: -1- _AM_SUBST_NOTMAKE([ENABLE_FS_ROCK_FALSE])
m4trace:configure.ac:766: -1- SQUID_TOUPPER_VAR_CONTENTS([fs])
m4trace:configure.ac:770: -1- m4_pattern_allow([^STORE_LIBS_TO_BUILD$])
m4trace:configure.ac:771: -1- m4_pattern_allow([^STORE_LIBS_TO_ADD$])
m4trace:configure.ac:772: -1- m4_pattern_allow([^STORE_TESTS$])
m4trace:configure.ac:779: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/repl], [REPL_POLICIES])
m4trace:configure.ac:792: -1- SQUID_CLEANUP_MODULES_LIST([REPL_POLICIES])
m4trace:configure.ac:793: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/repl], [REPL_POLICIES])
m4trace:configure.ac:797: -1- m4_pattern_allow([^REPL_POLICIES$])
m4trace:configure.ac:798: -1- m4_pattern_allow([^REPL_OBJS$])
m4trace:configure.ac:799: -1- m4_pattern_allow([^REPL_LIBS$])
m4trace:configure.ac:801: -1- AM_CONDITIONAL([ENABLE_PINGER], [false])
m4trace:configure.ac:801: -1- m4_pattern_allow([^ENABLE_PINGER_TRUE$])
m4trace:configure.ac:801: -1- m4_pattern_allow([^ENABLE_PINGER_FALSE$])
m4trace:configure.ac:801: -1- _AM_SUBST_NOTMAKE([ENABLE_PINGER_TRUE])
m4trace:configure.ac:801: -1- _AM_SUBST_NOTMAKE([ENABLE_PINGER_FALSE])
m4trace:configure.ac:802: -1- m4_pattern_allow([^USE_ICMP$])
m4trace:configure.ac:802: -1- AM_CONDITIONAL([ENABLE_PINGER], [true])
m4trace:configure.ac:802: -1- m4_pattern_allow([^ENABLE_PINGER_TRUE$])
m4trace:configure.ac:802: -1- m4_pattern_allow([^ENABLE_PINGER_FALSE$])
m4trace:configure.ac:802: -1- _AM_SUBST_NOTMAKE([ENABLE_PINGER_TRUE])
m4trace:configure.ac:802: -1- _AM_SUBST_NOTMAKE([ENABLE_PINGER_FALSE])
m4trace:configure.ac:811: -1- AM_CONDITIONAL([ENABLE_DELAY_POOLS], [false])
m4trace:configure.ac:811: -1- m4_pattern_allow([^ENABLE_DELAY_POOLS_TRUE$])
m4trace:configure.ac:811: -1- m4_pattern_allow([^ENABLE_DELAY_POOLS_FALSE$])
m4trace:configure.ac:811: -1- _AM_SUBST_NOTMAKE([ENABLE_DELAY_POOLS_TRUE])
m4trace:configure.ac:811: -1- _AM_SUBST_NOTMAKE([ENABLE_DELAY_POOLS_FALSE])
m4trace:configure.ac:812: -1- m4_pattern_allow([^USE_DELAY_POOLS$])
m4trace:configure.ac:812: -1- AM_CONDITIONAL([ENABLE_DELAY_POOLS], [true])
m4trace:configure.ac:812: -1- m4_pattern_allow([^ENABLE_DELAY_POOLS_TRUE$])
m4trace:configure.ac:812: -1- m4_pattern_allow([^ENABLE_DELAY_POOLS_FALSE$])
m4trace:configure.ac:812: -1- _AM_SUBST_NOTMAKE([ENABLE_DELAY_POOLS_TRUE])
m4trace:configure.ac:812: -1- _AM_SUBST_NOTMAKE([ENABLE_DELAY_POOLS_FALSE])
m4trace:configure.ac:824: -1- SQUID_YESNO([$enableval], [--enable-icap-client])
m4trace:configure.ac:828: -1- SQUID_DEFINE_BOOL([ICAP_CLIENT], [${enable_icap_client:=yes}], [Enable ICAP client features in Squid])
m4trace:configure.ac:828: -1- m4_pattern_allow([^ICAP_CLIENT$])
m4trace:configure.ac:830: -1- AM_CONDITIONAL([ENABLE_ICAP_CLIENT], [test "x$enable_icap_client" != "xno"])
m4trace:configure.ac:830: -1- m4_pattern_allow([^ENABLE_ICAP_CLIENT_TRUE$])
m4trace:configure.ac:830: -1- m4_pattern_allow([^ENABLE_ICAP_CLIENT_FALSE$])
m4trace:configure.ac:830: -1- _AM_SUBST_NOTMAKE([ENABLE_ICAP_CLIENT_TRUE])
m4trace:configure.ac:830: -1- _AM_SUBST_NOTMAKE([ENABLE_ICAP_CLIENT_FALSE])
m4trace:configure.ac:832: -1- SQUID_YESNO([$enableval], [--enable-ecap])
m4trace:configure.ac:838: -1- PKG_CHECK_MODULES([EXT_LIBECAP], [libecap >= 1.0 libecap < 1.1])
m4trace:configure.ac:838: -1- m4_pattern_allow([^EXT_LIBECAP_CFLAGS$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^EXT_LIBECAP_LIBS$])
m4trace:configure.ac:838: -1- PKG_CHECK_EXISTS([libecap >= 1.0 libecap < 1.1], [pkg_cv_[]EXT_LIBECAP_CFLAGS=`$PKG_CONFIG --[]cflags "libecap >= 1.0 libecap < 1.1" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:838: -1- PKG_CHECK_EXISTS([libecap >= 1.0 libecap < 1.1], [pkg_cv_[]EXT_LIBECAP_LIBS=`$PKG_CONFIG --[]libs "libecap >= 1.0 libecap < 1.1" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:838: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:838: -1- SQUID_STATE_SAVE([squid_ecap_state])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_ADAPTER_SERVICE_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_ADAPTER_XACTION_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_AREA_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_BODY_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_DELAY_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_FORWARD_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_HEADER_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_MEMORY_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_MESSAGE_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_NAME_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_NAMED_VALUES_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_NAMES_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_OPTIONS_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_REGISTRY_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_COMMON_VERSION_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_HOST_HOST_H$])
m4trace:configure.ac:838: -1- m4_pattern_allow([^HAVE_LIBECAP_HOST_XACTION_H$])
m4trace:configure.ac:838: -1- SQUID_STATE_ROLLBACK([squid_ecap_state])
m4trace:configure.ac:838: -1- SQUID_STATE_COMMIT([squid_ecap_state])
m4trace:configure.ac:906: -1- SQUID_DEFINE_BOOL([USE_ECAP], [${enable_ecap:=no}], [Whether to use eCAP support])
m4trace:configure.ac:906: -1- m4_pattern_allow([^USE_ECAP$])
m4trace:configure.ac:907: -1- AM_CONDITIONAL([ENABLE_ECAP], [test "x$enable_ecap" = "xyes"])
m4trace:configure.ac:907: -1- m4_pattern_allow([^ENABLE_ECAP_TRUE$])
m4trace:configure.ac:907: -1- m4_pattern_allow([^ENABLE_ECAP_FALSE$])
m4trace:configure.ac:907: -1- _AM_SUBST_NOTMAKE([ENABLE_ECAP_TRUE])
m4trace:configure.ac:907: -1- _AM_SUBST_NOTMAKE([ENABLE_ECAP_FALSE])
m4trace:configure.ac:912: -1- SQUID_DEFINE_BOOL([USE_ADAPTATION], [${squid_opt_use_adaptation:=no}], [common adaptation support])
m4trace:configure.ac:912: -1- m4_pattern_allow([^USE_ADAPTATION$])
m4trace:configure.ac:913: -1- AM_CONDITIONAL([ENABLE_ADAPTATION], [test "x$squid_opt_use_adaptation" = "xyes"])
m4trace:configure.ac:913: -1- m4_pattern_allow([^ENABLE_ADAPTATION_TRUE$])
m4trace:configure.ac:913: -1- m4_pattern_allow([^ENABLE_ADAPTATION_FALSE$])
m4trace:configure.ac:913: -1- _AM_SUBST_NOTMAKE([ENABLE_ADAPTATION_TRUE])
m4trace:configure.ac:913: -1- _AM_SUBST_NOTMAKE([ENABLE_ADAPTATION_FALSE])
m4trace:configure.ac:914: -1- m4_pattern_allow([^ADAPTATION_LIBS$])
m4trace:configure.ac:917: -1- SQUID_YESNO([$enableval], [--enable-wccp])
m4trace:configure.ac:921: -1- SQUID_DEFINE_BOOL([USE_WCCP], [${enable_wccp:=yes}], [Define to enable WCCP])
m4trace:configure.ac:921: -1- m4_pattern_allow([^USE_WCCP$])
m4trace:configure.ac:925: -1- SQUID_YESNO([$enableval], [--enable-wccpv2])
m4trace:configure.ac:930: -1- SQUID_DEFINE_BOOL([USE_WCCPv2], [${enable_wccpv2:=yes}], [Define to enable WCCP V2])
m4trace:configure.ac:930: -1- m4_pattern_allow([^USE_WCCPv2$])
m4trace:configure.ac:934: -1- SQUID_YESNO([$enableval], [--enable-snmp])
m4trace:configure.ac:938: -1- SQUID_DEFINE_BOOL([SQUID_SNMP], [${enable_snmp:=yes}], [Define to enable SNMP monitoring of Squid])
m4trace:configure.ac:938: -1- m4_pattern_allow([^SQUID_SNMP$])
m4trace:configure.ac:940: -1- AM_CONDITIONAL([ENABLE_SNMP], [test "x$enable_snmp" = "xyes"])
m4trace:configure.ac:940: -1- m4_pattern_allow([^ENABLE_SNMP_TRUE$])
m4trace:configure.ac:940: -1- m4_pattern_allow([^ENABLE_SNMP_FALSE$])
m4trace:configure.ac:940: -1- _AM_SUBST_NOTMAKE([ENABLE_SNMP_TRUE])
m4trace:configure.ac:940: -1- _AM_SUBST_NOTMAKE([ENABLE_SNMP_FALSE])
m4trace:configure.ac:943: -1- m4_pattern_allow([^SNMPLIB$])
m4trace:configure.ac:945: -1- SQUID_YESNO([$enableval], [--enable-eui])
m4trace:configure.ac:950: -1- SQUID_STATE_SAVE([LIBEUI])
m4trace:configure.ac:950: -1- m4_pattern_allow([^HAVE_WINDOWS_H$])
m4trace:configure.ac:950: -1- m4_pattern_allow([^HAVE_SYS_SOCKIO_H$])
m4trace:configure.ac:950: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:950: -1- m4_pattern_allow([^HAVE_NET_IF_ARP_H$])
m4trace:configure.ac:950: -1- m4_pattern_allow([^HAVE_NET_ROUTE_H$])
m4trace:configure.ac:950: -1- m4_pattern_allow([^HAVE_NET_IF_DL_H$])
m4trace:configure.ac:950: -1- m4_pattern_allow([^HAVE_SYS_SYSCTL_H$])
m4trace:configure.ac:950: -1- SQUID_STATE_ROLLBACK([LIBEUI])
m4trace:configure.ac:950: -1- SQUID_STATE_COMMIT([LIBEUI])
m4trace:configure.ac:990: -1- m4_pattern_allow([^EUILIB$])
m4trace:configure.ac:992: -1- SQUID_DEFINE_BOOL([USE_SQUID_EUI], [$enable_eui], [Define this to include code which lets you use ethernet addresses. This code uses API initially defined in 4.4-BSD.])
m4trace:configure.ac:992: -1- m4_pattern_allow([^USE_SQUID_EUI$])
m4trace:configure.ac:994: -1- AM_CONDITIONAL([ENABLE_EUI], [test "x$enable_eui" = "xyes" ])
m4trace:configure.ac:994: -1- m4_pattern_allow([^ENABLE_EUI_TRUE$])
m4trace:configure.ac:994: -1- m4_pattern_allow([^ENABLE_EUI_FALSE$])
m4trace:configure.ac:994: -1- _AM_SUBST_NOTMAKE([ENABLE_EUI_TRUE])
m4trace:configure.ac:994: -1- _AM_SUBST_NOTMAKE([ENABLE_EUI_FALSE])
m4trace:configure.ac:997: -1- SQUID_YESNO([$enableval], [--enable-htcp])
m4trace:configure.ac:1001: -1- SQUID_DEFINE_BOOL([USE_HTCP], [${enable_htcp:=yes}], [Define this to include code for the Hypertext Cache Protocol (HTCP)])
m4trace:configure.ac:1001: -1- m4_pattern_allow([^USE_HTCP$])
m4trace:configure.ac:1003: -1- AM_CONDITIONAL([ENABLE_HTCP], [test "x$enable_htcp" = "xyes"])
m4trace:configure.ac:1003: -1- m4_pattern_allow([^ENABLE_HTCP_TRUE$])
m4trace:configure.ac:1003: -1- m4_pattern_allow([^ENABLE_HTCP_FALSE$])
m4trace:configure.ac:1003: -1- _AM_SUBST_NOTMAKE([ENABLE_HTCP_TRUE])
m4trace:configure.ac:1003: -1- _AM_SUBST_NOTMAKE([ENABLE_HTCP_FALSE])
m4trace:configure.ac:1007: -1- SQUID_AUTO_LIB([nettle], [Nettle crypto], [LIBNETTLE])
m4trace:configure.ac:1008: -1- SQUID_CHECK_LIB_WORKS([nettle], [
  PKG_CHECK_MODULES([LIBNETTLE],[nettle >= 3.4],[
    CPPFLAGS="$LIBNETTLE_CFLAGS $CPPFLAGS"
    AC_CHECK_HEADERS(nettle/base64.h nettle/md5.h)
  ],[:])
])
m4trace:configure.ac:1008: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:1008: -1- PKG_CHECK_MODULES([LIBNETTLE], [nettle >= 3.4], [
    CPPFLAGS="$LIBNETTLE_CFLAGS $CPPFLAGS"
    AC_CHECK_HEADERS(nettle/base64.h nettle/md5.h)
  ], [:])
m4trace:configure.ac:1008: -1- m4_pattern_allow([^LIBNETTLE_CFLAGS$])
m4trace:configure.ac:1008: -1- m4_pattern_allow([^LIBNETTLE_LIBS$])
m4trace:configure.ac:1008: -1- PKG_CHECK_EXISTS([nettle >= 3.4], [pkg_cv_[]LIBNETTLE_CFLAGS=`$PKG_CONFIG --[]cflags "nettle >= 3.4" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1008: -1- PKG_CHECK_EXISTS([nettle >= 3.4], [pkg_cv_[]LIBNETTLE_LIBS=`$PKG_CONFIG --[]libs "nettle >= 3.4" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1008: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1008: -1- m4_pattern_allow([^HAVE_NETTLE_BASE64_H$])
m4trace:configure.ac:1008: -1- m4_pattern_allow([^HAVE_NETTLE_MD5_H$])
m4trace:configure.ac:1008: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:1008: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:1008: -1- m4_pattern_allow([^HAVE_LIBNETTLE$])
m4trace:configure.ac:1008: -1- AM_CONDITIONAL([ENABLE_LIBNETTLE], [test "x$with_nettle" != "xno"])
m4trace:configure.ac:1008: -1- m4_pattern_allow([^ENABLE_LIBNETTLE_TRUE$])
m4trace:configure.ac:1008: -1- m4_pattern_allow([^ENABLE_LIBNETTLE_FALSE$])
m4trace:configure.ac:1008: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBNETTLE_TRUE])
m4trace:configure.ac:1008: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBNETTLE_FALSE])
m4trace:configure.ac:1008: -1- m4_pattern_allow([^LIBNETTLE_LIBS$])
m4trace:configure.ac:1022: -1- m4_pattern_allow([^CRYPTLIB$])
m4trace:configure.ac:1024: -1- SQUID_AUTO_LIB([gnutls], [GnuTLS crypto], [LIBGNUTLS])
m4trace:configure.ac:1025: -1- SQUID_CHECK_LIB_WORKS([gnutls], [
  PKG_CHECK_MODULES([LIBGNUTLS],[gnutls >= 3.4.0],[
    CPPFLAGS="$LIBGNUTLS_CFLAGS $CPPFLAGS"
    AC_CHECK_HEADERS(gnutls/gnutls.h gnutls/x509.h gnutls/abstract.h)
  ],[:])
])
m4trace:configure.ac:1025: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:1025: -1- PKG_CHECK_MODULES([LIBGNUTLS], [gnutls >= 3.4.0], [
    CPPFLAGS="$LIBGNUTLS_CFLAGS $CPPFLAGS"
    AC_CHECK_HEADERS(gnutls/gnutls.h gnutls/x509.h gnutls/abstract.h)
  ], [:])
m4trace:configure.ac:1025: -1- m4_pattern_allow([^LIBGNUTLS_CFLAGS$])
m4trace:configure.ac:1025: -1- m4_pattern_allow([^LIBGNUTLS_LIBS$])
m4trace:configure.ac:1025: -1- PKG_CHECK_EXISTS([gnutls >= 3.4.0], [pkg_cv_[]LIBGNUTLS_CFLAGS=`$PKG_CONFIG --[]cflags "gnutls >= 3.4.0" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1025: -1- PKG_CHECK_EXISTS([gnutls >= 3.4.0], [pkg_cv_[]LIBGNUTLS_LIBS=`$PKG_CONFIG --[]libs "gnutls >= 3.4.0" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1025: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1025: -1- m4_pattern_allow([^HAVE_GNUTLS_GNUTLS_H$])
m4trace:configure.ac:1025: -1- m4_pattern_allow([^HAVE_GNUTLS_X509_H$])
m4trace:configure.ac:1025: -1- m4_pattern_allow([^HAVE_GNUTLS_ABSTRACT_H$])
m4trace:configure.ac:1025: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:1025: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:1025: -1- m4_pattern_allow([^HAVE_LIBGNUTLS$])
m4trace:configure.ac:1025: -1- AM_CONDITIONAL([ENABLE_LIBGNUTLS], [test "x$with_gnutls" != "xno"])
m4trace:configure.ac:1025: -1- m4_pattern_allow([^ENABLE_LIBGNUTLS_TRUE$])
m4trace:configure.ac:1025: -1- m4_pattern_allow([^ENABLE_LIBGNUTLS_FALSE$])
m4trace:configure.ac:1025: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBGNUTLS_TRUE])
m4trace:configure.ac:1025: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBGNUTLS_FALSE])
m4trace:configure.ac:1025: -1- m4_pattern_allow([^LIBGNUTLS_LIBS$])
m4trace:configure.ac:1034: -1- SQUID_OPTIONAL_LIB([openssl], [OpenSSL], [LIBOPENSSL])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_ASN1_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_BIO_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_BN_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_CRYPTO_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_DECODER_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_DH_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_ERR_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_EVP_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_LHASH_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_MD5_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_OPENSSLV_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_RSA_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_SSL_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_X509_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_X509V3_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_ENGINE_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_TXT_DB_H$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_OPENSSL_PEM_H$])
m4trace:configure.ac:1037: -1- SQUID_STATE_SAVE([squid_openssl_state])
m4trace:configure.ac:1037: -1- PKG_CHECK_MODULES([LIBOPENSSL], [openssl], [], [
    ## For some OS pkg-config is broken or unavailable.
    ## Detect libraries the hard way.

    # Windows MinGW has some special libraries ...
    AS_IF([test "x$squid_host_os" = "xmingw"],[
      LIBOPENSSL_LIBS='-lssleay32 -leay32 -lgdi32 $LIBOPENSSL_LIBS'
      AC_MSG_NOTICE([Windows OpenSSL library support: yes -lssleay32 -leay32 -lgdi32])
    ])

    AC_CHECK_LIB(crypto,[CRYPTO_new_ex_data],[LIBOPENSSL_LIBS="-lcrypto $LIBOPENSSL_LIBS"],[
      AC_MSG_ERROR([library 'crypto' is required for OpenSSL])
    ],$LIBOPENSSL_LIBS)
    AC_CHECK_LIB(ssl,[SSL_CTX_new],[LIBOPENSSL_LIBS="-lssl $LIBOPENSSL_LIBS"],[
      AC_MSG_ERROR([library 'ssl' is required for OpenSSL])
    ],$LIBOPENSSL_LIBS)
  ])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^LIBOPENSSL_CFLAGS$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^LIBOPENSSL_LIBS$])
m4trace:configure.ac:1037: -1- PKG_CHECK_EXISTS([openssl], [pkg_cv_[]LIBOPENSSL_CFLAGS=`$PKG_CONFIG --[]cflags "openssl" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1037: -1- PKG_CHECK_EXISTS([openssl], [pkg_cv_[]LIBOPENSSL_LIBS=`$PKG_CONFIG --[]libs "openssl" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1037: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1037: -1- SQUID_STATE_ROLLBACK([squid_openssl_state])
m4trace:configure.ac:1037: -1- SQUID_STATE_COMMIT([squid_openssl_state])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^USE_OPENSSL$])
m4trace:configure.ac:1037: -1- SQUID_CHECK_LIBCRYPTO_API
m4trace:configure.ac:1037: -1- SQUID_STATE_SAVE([check_openssl_libcrypto_api])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_OPENSSL_LH_STRHASH$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_EVP_PKEY_GET0_RSA$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_BIO_METH_NEW$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_BIO_GET_DATA$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_BIO_GET_INIT$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_ASN1_STRING_GET0_DATA$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_EVP_PKEY_UP_REF$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_X509_STORE_CTX_GET0_CERT$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_X509_VERIFY_PARAM_GET_DEPTH$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_X509_STORE_CTX_GET0_UNTRUSTED$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_X509_VERIFY_PARAM_SET_AUTH_LEVEL$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_X509_UP_REF$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_X509_CHAIN_UP_REF$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_X509_CRL_UP_REF$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_DH_UP_REF$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBCRYPTO_X509_GET0_SIGNATURE$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^SQUID_CONST_X509_GET0_SIGNATURE_ARGS$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_SSL_GET0_PARAM$])
m4trace:configure.ac:1037: -1- SQUID_STATE_ROLLBACK([check_openssl_libcrypto_api])
m4trace:configure.ac:1037: -1- SQUID_STATE_COMMIT([check_openssl_libcrypto_api])
m4trace:configure.ac:1037: -1- SQUID_CHECK_LIBSSL_API
m4trace:configure.ac:1037: -1- SQUID_STATE_SAVE([check_openssl_libssl_api])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBSSL_OPENSSL_INIT_SSL$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBSSL_SSL_CIPHER_FIND$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBSSL_SSL_CTX_SET_TMP_RSA_CALLBACK$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBSSL_SSL_SESSION_GET_ID$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBSSL_SSL_GET_CLIENT_RANDOM$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_LIBSSL_SSL_SESSION_GET_MASTER_KEY$])
m4trace:configure.ac:1037: -1- SQUID_STATE_ROLLBACK([check_openssl_libssl_api])
m4trace:configure.ac:1037: -1- SQUID_STATE_COMMIT([check_openssl_libssl_api])
m4trace:configure.ac:1037: -1- SQUID_CHECK_OPENSSL_TLS_METHODS
m4trace:configure.ac:1037: -1- SQUID_STATE_SAVE([check_openssl_TLS_METHODS])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_OPENSSL_TLS_METHOD$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_OPENSSL_TLS_CLIENT_METHOD$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^HAVE_OPENSSL_TLS_SERVER_METHOD$])
m4trace:configure.ac:1037: -1- SQUID_STATE_ROLLBACK([check_openssl_TLS_METHODS])
m4trace:configure.ac:1037: -1- SQUID_STATE_COMMIT([check_openssl_TLS_METHODS])
m4trace:configure.ac:1037: -1- SQUID_STATE_SAVE([check_SSL_CTX_get0_certificate])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^HAVE_SSL_CTX_GET0_CERTIFICATE$])
m4trace:configure.ac:1037: -1- SQUID_STATE_ROLLBACK([check_SSL_CTX_get0_certificate])
m4trace:configure.ac:1037: -1- SQUID_STATE_COMMIT([check_SSL_CTX_get0_certificate])
m4trace:configure.ac:1037: -2- SQUID_CHECK_OPENSSL_GETCERTIFICATE_WORKS
m4trace:configure.ac:1037: -2- SQUID_STATE_SAVE([check_SSL_get_certificate])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^SQUID_SSLGETCERTIFICATE_BUGGY$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^SQUID_SSLGETCERTIFICATE_BUGGY$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^SQUID_USE_SSLGETCERTIFICATE_HACK$])
m4trace:configure.ac:1037: -2- m4_pattern_allow([^SQUID_USE_SSLGETCERTIFICATE_HACK$])
m4trace:configure.ac:1037: -2- SQUID_STATE_ROLLBACK([check_SSL_get_certificate])
m4trace:configure.ac:1037: -2- SQUID_STATE_COMMIT([check_SSL_get_certificate])
m4trace:configure.ac:1037: -1- SQUID_CHECK_OPENSSL_CONST_SSL_METHOD
m4trace:configure.ac:1037: -1- SQUID_STATE_SAVE([check_const_SSL_METHOD])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^SQUID_USE_CONST_SSL_METHOD$])
m4trace:configure.ac:1037: -1- SQUID_STATE_ROLLBACK([check_const_SSL_METHOD])
m4trace:configure.ac:1037: -1- SQUID_STATE_COMMIT([check_const_SSL_METHOD])
m4trace:configure.ac:1037: -1- SQUID_CHECK_OPENSSL_CONST_CRYPTO_EX_DATA
m4trace:configure.ac:1037: -1- SQUID_STATE_SAVE([check_const_CRYPTO_EX_DATA])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^SQUID_USE_CONST_CRYPTO_EX_DATA_DUP$])
m4trace:configure.ac:1037: -1- SQUID_STATE_ROLLBACK([check_const_CRYPTO_EX_DATA])
m4trace:configure.ac:1037: -1- SQUID_STATE_COMMIT([check_const_CRYPTO_EX_DATA])
m4trace:configure.ac:1037: -1- SQUID_CHECK_OPENSSL_CONST_SSL_SESSION_CB_ARG
m4trace:configure.ac:1037: -1- SQUID_STATE_SAVE([check_const_SSL_CTX_sess_set_get_cb])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^SQUID_USE_CONST_SSL_SESSION_CBID$])
m4trace:configure.ac:1037: -1- SQUID_STATE_ROLLBACK([check_const_SSL_CTX_sess_set_get_cb])
m4trace:configure.ac:1037: -1- SQUID_STATE_COMMIT([check_const_SSL_CTX_sess_set_get_cb])
m4trace:configure.ac:1037: -1- SQUID_CHECK_OPENSSL_CONST_X509_GET0_SIGNATURE_ARGS
m4trace:configure.ac:1037: -1- SQUID_STATE_SAVE([check_const_X509_get0_signature_args])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^SQUID_CONST_X509_GET0_SIGNATURE_ARGS$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^SQUID_CONST_X509_GET0_SIGNATURE_ARGS$])
m4trace:configure.ac:1037: -1- SQUID_STATE_ROLLBACK([check_const_X509_get0_signature_args])
m4trace:configure.ac:1037: -1- SQUID_STATE_COMMIT([check_const_X509_get0_signature_args])
m4trace:configure.ac:1037: -1- SQUID_CHECK_OPENSSL_TXTDB
m4trace:configure.ac:1037: -1- SQUID_STATE_SAVE([check_TXTDB])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^SQUID_SSLTXTDB_PSTRINGDATA$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^SQUID_STACKOF_PSTRINGDATA_HACK$])
m4trace:configure.ac:1037: -1- m4_pattern_allow([^SQUID_USE_SSLLHASH_HACK$])
m4trace:configure.ac:1037: -1- SQUID_STATE_ROLLBACK([check_TXTDB])
m4trace:configure.ac:1037: -1- SQUID_STATE_COMMIT([check_TXTDB])
m4trace:configure.ac:1114: -1- AM_CONDITIONAL([ENABLE_SSL], [ test "x$with_openssl" = "xyes" ])
m4trace:configure.ac:1114: -1- m4_pattern_allow([^ENABLE_SSL_TRUE$])
m4trace:configure.ac:1114: -1- m4_pattern_allow([^ENABLE_SSL_FALSE$])
m4trace:configure.ac:1114: -1- _AM_SUBST_NOTMAKE([ENABLE_SSL_TRUE])
m4trace:configure.ac:1114: -1- _AM_SUBST_NOTMAKE([ENABLE_SSL_FALSE])
m4trace:configure.ac:1115: -1- m4_pattern_allow([^SSLLIB$])
m4trace:configure.ac:1118: -1- SQUID_AUTO_LIB([mit-krb5], [MIT Kerberos], [LIB_KRB5])
m4trace:configure.ac:1121: -1- SQUID_CHECK_LIB_WORKS([mit-krb5], [
  AS_IF([test "x$squid_host_os" = "xsolaris"],[
    # pkg-config not available for Solaris krb5 implementation
    SQUID_CHECK_SOLARIS_KRB5
  ],[
    PKG_CHECK_MODULES([LIBMIT_KRB5],[mit-krb5 mit-krb5-gssapi],[
      AS_IF([test "x$squid_host_os" = "xdarwin"],[
        AC_DEFINE(USE_APPLE_KRB5,1,[Apple Kerberos support is available])
        AC_CHECK_LIB(resolv,[main],[LIBMIT_KRB5_LIBS="$LIBMIT_KRB5_LIBS -lresolv"],[
          AC_MSG_ERROR([library 'resolv' is required for Apple Kerberos])
        ])
      ])
      CPPFLAGS="$LIBMIT_KRB5_CFLAGS $CPPFLAGS"
      LIBS="$LIBMIT_KRB5_PATH $LIBMIT_KRB5_LIBS $LIBS"
      AC_CHECK_HEADERS(gssapi.h gssapi/gssapi.h gssapi/gssapi_krb5.h)
      AC_CHECK_HEADERS(gssapi/gssapi_ext.h gssapi/gssapi_generic.h)
      AC_CHECK_HEADERS(krb5.h com_err.h et/com_err.h)
      AC_CHECK_HEADERS(profile.h)
      SQUID_CHECK_KRB5_FUNCS
    ],[:])
  ])
])
m4trace:configure.ac:1121: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:1121: -1- SQUID_CHECK_SOLARIS_KRB5
m4trace:configure.ac:1121: -1- m4_pattern_allow([^krb5_config$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^USE_SOLARIS_KRB5$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_KRB5_SOLARIS_BROKEN_KRB5_H
m4trace:configure.ac:1121: -1- SQUID_STATE_SAVE([squid_krb5_solaris_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_ROLLBACK([squid_krb5_solaris_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_COMMIT([squid_krb5_solaris_test])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_BROKEN_SOLARIS_KRB5_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI_GSSAPI_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI_GSSAPI_KRB5_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI_GSSAPI_EXT_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI_GSSAPI_GENERIC_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_KRB5_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_COM_ERR_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_ET_COM_ERR_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_PROFILE_H$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_KRB5_FUNCS
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_ERROR_MESSAGE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_ERROR_MESSAGE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_ERR_TEXT$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_ERROR_MESSAGE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_FREE_ERROR_MESSAGE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_FREE_ERROR_STRING$])
m4trace:configure.ac:1121: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_cxx], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_DECL_KRB5_KT_FREE_ENTRY$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_PAC$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_KT_FREE_ENTRY$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_GET_INIT_CREDS_KEYTAB$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_MAX_TIME_SKEW$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_PROFILE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_PROFILE_GET_INTEGER$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_PROFILE_RELEASE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_RENEWED_CREDS$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_PRINCIPAL_GET_REALM$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_INIT_CREDS_OPT_ALLOC$])
m4trace:configure.ac:1121: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_KRB5_GET_INIT_CREDS_FREE_CONTEXT$])
m4trace:configure.ac:1121: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_GSS_MAP_ANY_TO_ANY$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSS_MAP_NAME_TO_ANY$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_GSSKRB5_EXTRACT_AUTHZ_DATA_FROM_SEC_CONTEXT$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSKRB5_EXTRACT_AUTHZ_DATA_FROM_SEC_CONTEXT$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_KRB5_CONTEXT_MEMORY_CACHE
m4trace:configure.ac:1121: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_DEFINE_BOOL([HAVE_KRB5_MEMORY_CACHE], [$squid_cv_memory_cache], [Define if kerberos has MEMORY: cache support])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_KRB5_MEMORY_CACHE$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_KRB5_CONTEXT_MEMORY_KEYTAB
m4trace:configure.ac:1121: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_DEFINE_BOOL([HAVE_KRB5_MEMORY_KEYTAB], [$squid_cv_memory_keytab], [Define if kerberos has MEMORY: keytab support])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_KRB5_MEMORY_KEYTAB$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_WORKING_GSSAPI
m4trace:configure.ac:1121: -1- SQUID_DEFINE_BOOL([HAVE_GSSAPI], [$squid_cv_working_gssapi], [GSSAPI support])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_SPNEGO_SUPPORT
m4trace:configure.ac:1121: -1- SQUID_DEFINE_BOOL([HAVE_SPNEGO], [$squid_cv_have_spnego], [SPNEGO support])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_SPNEGO$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_WORKING_KRB5
m4trace:configure.ac:1121: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_DEFINE_BOOL([HAVE_KRB5], [$squid_cv_working_krb5], [KRB5 support])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_KRB5$])
m4trace:configure.ac:1121: -1- PKG_CHECK_MODULES([LIBMIT_KRB5], [mit-krb5 mit-krb5-gssapi], [
      AS_IF([test "x$squid_host_os" = "xdarwin"],[
        AC_DEFINE(USE_APPLE_KRB5,1,[Apple Kerberos support is available])
        AC_CHECK_LIB(resolv,[main],[LIBMIT_KRB5_LIBS="$LIBMIT_KRB5_LIBS -lresolv"],[
          AC_MSG_ERROR([library 'resolv' is required for Apple Kerberos])
        ])
      ])
      CPPFLAGS="$LIBMIT_KRB5_CFLAGS $CPPFLAGS"
      LIBS="$LIBMIT_KRB5_PATH $LIBMIT_KRB5_LIBS $LIBS"
      AC_CHECK_HEADERS(gssapi.h gssapi/gssapi.h gssapi/gssapi_krb5.h)
      AC_CHECK_HEADERS(gssapi/gssapi_ext.h gssapi/gssapi_generic.h)
      AC_CHECK_HEADERS(krb5.h com_err.h et/com_err.h)
      AC_CHECK_HEADERS(profile.h)
      SQUID_CHECK_KRB5_FUNCS
    ], [:])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^LIBMIT_KRB5_CFLAGS$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^LIBMIT_KRB5_LIBS$])
m4trace:configure.ac:1121: -1- PKG_CHECK_EXISTS([mit-krb5 mit-krb5-gssapi], [pkg_cv_[]LIBMIT_KRB5_CFLAGS=`$PKG_CONFIG --[]cflags "mit-krb5 mit-krb5-gssapi" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1121: -1- PKG_CHECK_EXISTS([mit-krb5 mit-krb5-gssapi], [pkg_cv_[]LIBMIT_KRB5_LIBS=`$PKG_CONFIG --[]libs "mit-krb5 mit-krb5-gssapi" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1121: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1121: -1- m4_pattern_allow([^USE_APPLE_KRB5$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI_GSSAPI_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI_GSSAPI_KRB5_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI_GSSAPI_EXT_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI_GSSAPI_GENERIC_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_KRB5_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_COM_ERR_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_ET_COM_ERR_H$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_PROFILE_H$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_KRB5_FUNCS
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_ERROR_MESSAGE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_ERROR_MESSAGE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_ERR_TEXT$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_ERROR_MESSAGE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_FREE_ERROR_MESSAGE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_FREE_ERROR_STRING$])
m4trace:configure.ac:1121: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_cxx], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_DECL_KRB5_KT_FREE_ENTRY$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_PAC$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_KT_FREE_ENTRY$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_GET_INIT_CREDS_KEYTAB$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_MAX_TIME_SKEW$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_PROFILE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_PROFILE_GET_INTEGER$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_PROFILE_RELEASE$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_RENEWED_CREDS$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_PRINCIPAL_GET_REALM$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_KRB5_GET_INIT_CREDS_OPT_ALLOC$])
m4trace:configure.ac:1121: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_KRB5_GET_INIT_CREDS_FREE_CONTEXT$])
m4trace:configure.ac:1121: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_GSS_MAP_ANY_TO_ANY$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSS_MAP_NAME_TO_ANY$])
m4trace:configure.ac:1121: -2- m4_pattern_allow([^HAVE_GSSKRB5_EXTRACT_AUTHZ_DATA_FROM_SEC_CONTEXT$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSKRB5_EXTRACT_AUTHZ_DATA_FROM_SEC_CONTEXT$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_KRB5_CONTEXT_MEMORY_CACHE
m4trace:configure.ac:1121: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_DEFINE_BOOL([HAVE_KRB5_MEMORY_CACHE], [$squid_cv_memory_cache], [Define if kerberos has MEMORY: cache support])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_KRB5_MEMORY_CACHE$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_KRB5_CONTEXT_MEMORY_KEYTAB
m4trace:configure.ac:1121: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_DEFINE_BOOL([HAVE_KRB5_MEMORY_KEYTAB], [$squid_cv_memory_keytab], [Define if kerberos has MEMORY: keytab support])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_KRB5_MEMORY_KEYTAB$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_WORKING_GSSAPI
m4trace:configure.ac:1121: -1- SQUID_DEFINE_BOOL([HAVE_GSSAPI], [$squid_cv_working_gssapi], [GSSAPI support])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_GSSAPI$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_SPNEGO_SUPPORT
m4trace:configure.ac:1121: -1- SQUID_DEFINE_BOOL([HAVE_SPNEGO], [$squid_cv_have_spnego], [SPNEGO support])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_SPNEGO$])
m4trace:configure.ac:1121: -1- SQUID_CHECK_WORKING_KRB5
m4trace:configure.ac:1121: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1121: -1- SQUID_DEFINE_BOOL([HAVE_KRB5], [$squid_cv_working_krb5], [KRB5 support])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_KRB5$])
m4trace:configure.ac:1121: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:1121: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^HAVE_LIBMIT_KRB5$])
m4trace:configure.ac:1121: -1- AM_CONDITIONAL([ENABLE_LIBMIT_KRB5], [test "x$with_mit_krb5" != "xno"])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^ENABLE_LIBMIT_KRB5_TRUE$])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^ENABLE_LIBMIT_KRB5_FALSE$])
m4trace:configure.ac:1121: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBMIT_KRB5_TRUE])
m4trace:configure.ac:1121: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBMIT_KRB5_FALSE])
m4trace:configure.ac:1121: -1- m4_pattern_allow([^LIBMIT_KRB5_LIBS$])
m4trace:configure.ac:1145: -1- SQUID_AUTO_LIB([heimdal-krb5], [Heimdal Kerberos], [LIBHEIMDAL_KRB5])
m4trace:configure.ac:1146: -1- SQUID_CHECK_LIB_WORKS([heimdal-krb5], [
  AS_IF([test "x$LIBMIT_KRB5_LIBS" = "x"],[
    PKG_CHECK_MODULES([LIBHEIMDAL_KRB5],[heimdal-krb5 heimdal-gssapi],[
      CPPFLAGS="$LIBHEIMDAL_KRB5_CFLAGS $CPPFLAGS"
      AC_CHECK_HEADERS(gssapi.h gssapi/gssapi.h gssapi/gssapi_krb5.h)
      AC_CHECK_HEADERS(krb5.h com_err.h et/com_err.h)

      LIBS="$LIBHEIMDAL_KRB5_PATH $LIBHEIMDAL_KRB5_LIBS $LIBS"
      SQUID_CHECK_KRB5_HEIMDAL_BROKEN_KRB5_H
      SQUID_CHECK_KRB5_FUNCS
    ],[:])
  ])
])
m4trace:configure.ac:1146: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:1146: -1- PKG_CHECK_MODULES([LIBHEIMDAL_KRB5], [heimdal-krb5 heimdal-gssapi], [
      CPPFLAGS="$LIBHEIMDAL_KRB5_CFLAGS $CPPFLAGS"
      AC_CHECK_HEADERS(gssapi.h gssapi/gssapi.h gssapi/gssapi_krb5.h)
      AC_CHECK_HEADERS(krb5.h com_err.h et/com_err.h)

      LIBS="$LIBHEIMDAL_KRB5_PATH $LIBHEIMDAL_KRB5_LIBS $LIBS"
      SQUID_CHECK_KRB5_HEIMDAL_BROKEN_KRB5_H
      SQUID_CHECK_KRB5_FUNCS
    ], [:])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^LIBHEIMDAL_KRB5_CFLAGS$])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^LIBHEIMDAL_KRB5_LIBS$])
m4trace:configure.ac:1146: -1- PKG_CHECK_EXISTS([heimdal-krb5 heimdal-gssapi], [pkg_cv_[]LIBHEIMDAL_KRB5_CFLAGS=`$PKG_CONFIG --[]cflags "heimdal-krb5 heimdal-gssapi" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1146: -1- PKG_CHECK_EXISTS([heimdal-krb5 heimdal-gssapi], [pkg_cv_[]LIBHEIMDAL_KRB5_LIBS=`$PKG_CONFIG --[]libs "heimdal-krb5 heimdal-gssapi" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1146: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_GSSAPI_H$])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_GSSAPI_GSSAPI_H$])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_GSSAPI_GSSAPI_KRB5_H$])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_KRB5_H$])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_COM_ERR_H$])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_ET_COM_ERR_H$])
m4trace:configure.ac:1146: -1- SQUID_CHECK_KRB5_HEIMDAL_BROKEN_KRB5_H
m4trace:configure.ac:1146: -1- SQUID_STATE_SAVE([squid_krb5_heimdal_test])
m4trace:configure.ac:1146: -1- SQUID_STATE_ROLLBACK([squid_krb5_heimdal_test])
m4trace:configure.ac:1146: -1- SQUID_STATE_COMMIT([squid_krb5_heimdal_test])
m4trace:configure.ac:1146: -1- SQUID_DEFINE_BOOL([HAVE_BROKEN_HEIMDAL_KRB5_H], [$squid_cv_broken_heimdal_krb5_h], [Heimdal krb5.h is broken for C++])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_BROKEN_HEIMDAL_KRB5_H$])
m4trace:configure.ac:1146: -1- SQUID_CHECK_KRB5_FUNCS
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_ERROR_MESSAGE$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_ERROR_MESSAGE$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_KRB5_GET_ERR_TEXT$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_KRB5_GET_ERROR_MESSAGE$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_KRB5_FREE_ERROR_MESSAGE$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_KRB5_FREE_ERROR_STRING$])
m4trace:configure.ac:1146: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_cxx], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_DECL_KRB5_KT_FREE_ENTRY$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_KRB5_PAC$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_KRB5_KT_FREE_ENTRY$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_GET_INIT_CREDS_KEYTAB$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_KRB5_GET_MAX_TIME_SKEW$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_KRB5_GET_PROFILE$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_PROFILE_GET_INTEGER$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_PROFILE_RELEASE$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_KRB5_GET_RENEWED_CREDS$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_KRB5_PRINCIPAL_GET_REALM$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_KRB5_GET_INIT_CREDS_OPT_ALLOC$])
m4trace:configure.ac:1146: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_KRB5_GET_INIT_CREDS_FREE_CONTEXT$])
m4trace:configure.ac:1146: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1146: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_GSS_MAP_ANY_TO_ANY$])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_GSS_MAP_NAME_TO_ANY$])
m4trace:configure.ac:1146: -2- m4_pattern_allow([^HAVE_GSSKRB5_EXTRACT_AUTHZ_DATA_FROM_SEC_CONTEXT$])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_GSSKRB5_EXTRACT_AUTHZ_DATA_FROM_SEC_CONTEXT$])
m4trace:configure.ac:1146: -1- SQUID_CHECK_KRB5_CONTEXT_MEMORY_CACHE
m4trace:configure.ac:1146: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1146: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1146: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1146: -1- SQUID_DEFINE_BOOL([HAVE_KRB5_MEMORY_CACHE], [$squid_cv_memory_cache], [Define if kerberos has MEMORY: cache support])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_KRB5_MEMORY_CACHE$])
m4trace:configure.ac:1146: -1- SQUID_CHECK_KRB5_CONTEXT_MEMORY_KEYTAB
m4trace:configure.ac:1146: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1146: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1146: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1146: -1- SQUID_DEFINE_BOOL([HAVE_KRB5_MEMORY_KEYTAB], [$squid_cv_memory_keytab], [Define if kerberos has MEMORY: keytab support])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_KRB5_MEMORY_KEYTAB$])
m4trace:configure.ac:1146: -1- SQUID_CHECK_WORKING_GSSAPI
m4trace:configure.ac:1146: -1- SQUID_DEFINE_BOOL([HAVE_GSSAPI], [$squid_cv_working_gssapi], [GSSAPI support])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_GSSAPI$])
m4trace:configure.ac:1146: -1- SQUID_CHECK_SPNEGO_SUPPORT
m4trace:configure.ac:1146: -1- SQUID_DEFINE_BOOL([HAVE_SPNEGO], [$squid_cv_have_spnego], [SPNEGO support])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_SPNEGO$])
m4trace:configure.ac:1146: -1- SQUID_CHECK_WORKING_KRB5
m4trace:configure.ac:1146: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1146: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1146: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1146: -1- SQUID_DEFINE_BOOL([HAVE_KRB5], [$squid_cv_working_krb5], [KRB5 support])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_KRB5$])
m4trace:configure.ac:1146: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:1146: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^HAVE_LIBHEIMDAL_KRB5$])
m4trace:configure.ac:1146: -1- AM_CONDITIONAL([ENABLE_LIBHEIMDAL_KRB5], [test "x$with_heimdal_krb5" != "xno"])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^ENABLE_LIBHEIMDAL_KRB5_TRUE$])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^ENABLE_LIBHEIMDAL_KRB5_FALSE$])
m4trace:configure.ac:1146: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBHEIMDAL_KRB5_TRUE])
m4trace:configure.ac:1146: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBHEIMDAL_KRB5_FALSE])
m4trace:configure.ac:1146: -1- m4_pattern_allow([^LIBHEIMDAL_KRB5_LIBS$])
m4trace:configure.ac:1161: -1- SQUID_AUTO_LIB([gss], [GNU gss], [LIBGSS])
m4trace:configure.ac:1162: -1- SQUID_CHECK_LIB_WORKS([gss], [
  AS_IF([test "x$LIBMIT_KRB5_LIBS" = "x" -a "x$LIBHEIMDAL_KRB5_LIBS" = "x"],[
    PKG_CHECK_MODULES([LIBGSS],[gss],[
      CPPFLAGS="$LIBGSS_CFLAGS $CPPFLAGS"
      AC_CHECK_HEADERS(gss.h)
      LIBS="$LIBGSS_PATH $LIBS"
      SQUID_CHECK_WORKING_GSSAPI
      SQUID_DEFINE_BOOL(HAVE_GSSAPI,$squid_cv_working_gssapi,[GSSAPI support])
      SQUID_CHECK_SPNEGO_SUPPORT
      SQUID_DEFINE_BOOL(HAVE_SPNEGO,$squid_cv_have_spnego,[SPNEGO support])
      SQUID_CHECK_WORKING_KRB5
      SQUID_DEFINE_BOOL(HAVE_KRB5,$squid_cv_working_krb5,[KRB5 support])
    ],[:])
  ])
])
m4trace:configure.ac:1162: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:1162: -1- PKG_CHECK_MODULES([LIBGSS], [gss], [
      CPPFLAGS="$LIBGSS_CFLAGS $CPPFLAGS"
      AC_CHECK_HEADERS(gss.h)
      LIBS="$LIBGSS_PATH $LIBS"
      SQUID_CHECK_WORKING_GSSAPI
      SQUID_DEFINE_BOOL(HAVE_GSSAPI,$squid_cv_working_gssapi,[GSSAPI support])
      SQUID_CHECK_SPNEGO_SUPPORT
      SQUID_DEFINE_BOOL(HAVE_SPNEGO,$squid_cv_have_spnego,[SPNEGO support])
      SQUID_CHECK_WORKING_KRB5
      SQUID_DEFINE_BOOL(HAVE_KRB5,$squid_cv_working_krb5,[KRB5 support])
    ], [:])
m4trace:configure.ac:1162: -1- m4_pattern_allow([^LIBGSS_CFLAGS$])
m4trace:configure.ac:1162: -1- m4_pattern_allow([^LIBGSS_LIBS$])
m4trace:configure.ac:1162: -1- PKG_CHECK_EXISTS([gss], [pkg_cv_[]LIBGSS_CFLAGS=`$PKG_CONFIG --[]cflags "gss" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1162: -1- PKG_CHECK_EXISTS([gss], [pkg_cv_[]LIBGSS_LIBS=`$PKG_CONFIG --[]libs "gss" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1162: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1162: -1- m4_pattern_allow([^HAVE_GSS_H$])
m4trace:configure.ac:1162: -1- SQUID_CHECK_WORKING_GSSAPI
m4trace:configure.ac:1162: -1- SQUID_DEFINE_BOOL([HAVE_GSSAPI], [$squid_cv_working_gssapi], [GSSAPI support])
m4trace:configure.ac:1162: -1- m4_pattern_allow([^HAVE_GSSAPI$])
m4trace:configure.ac:1162: -1- SQUID_CHECK_SPNEGO_SUPPORT
m4trace:configure.ac:1162: -1- SQUID_DEFINE_BOOL([HAVE_SPNEGO], [$squid_cv_have_spnego], [SPNEGO support])
m4trace:configure.ac:1162: -1- m4_pattern_allow([^HAVE_SPNEGO$])
m4trace:configure.ac:1162: -1- SQUID_CHECK_WORKING_KRB5
m4trace:configure.ac:1162: -1- SQUID_STATE_SAVE([squid_krb5_test])
m4trace:configure.ac:1162: -1- SQUID_STATE_ROLLBACK([squid_krb5_test])
m4trace:configure.ac:1162: -1- SQUID_STATE_COMMIT([squid_krb5_test])
m4trace:configure.ac:1162: -1- SQUID_DEFINE_BOOL([HAVE_KRB5], [$squid_cv_working_krb5], [KRB5 support])
m4trace:configure.ac:1162: -1- m4_pattern_allow([^HAVE_KRB5$])
m4trace:configure.ac:1162: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:1162: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:1162: -1- m4_pattern_allow([^HAVE_LIBGSS$])
m4trace:configure.ac:1162: -1- AM_CONDITIONAL([ENABLE_LIBGSS], [test "x$with_gss" != "xno"])
m4trace:configure.ac:1162: -1- m4_pattern_allow([^ENABLE_LIBGSS_TRUE$])
m4trace:configure.ac:1162: -1- m4_pattern_allow([^ENABLE_LIBGSS_FALSE$])
m4trace:configure.ac:1162: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBGSS_TRUE])
m4trace:configure.ac:1162: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBGSS_FALSE])
m4trace:configure.ac:1162: -1- m4_pattern_allow([^LIBGSS_LIBS$])
m4trace:configure.ac:1178: -1- SQUID_AUTO_LIB([ldap], [LDAP], [LIBLDAP])
m4trace:configure.ac:1179: -1- SQUID_CHECK_LIB_WORKS([ldap], [
  PKG_CHECK_MODULES([LIBLDAP],[ldap],[:],[:])
  AS_IF([test "$squid_host_os" = "mingw" -a "x$LIBLDAP_LIBS" = "x"],[
    dnl On MinGW OpenLDAP is not available, try Windows LDAP libraries
    dnl TODO: use AC_CHECK_LIB
    LIBLDAP_LIBS="-lwldap32"
    AC_CHECK_HEADERS(winldap.h)
  ])
  AC_CHECK_HEADERS(ldap.h lber.h)
  AC_CHECK_HEADERS(mozldap/ldap.h)
  SQUID_CHECK_LDAP_API
])
m4trace:configure.ac:1179: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:1179: -1- PKG_CHECK_MODULES([LIBLDAP], [ldap], [:], [:])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^LIBLDAP_CFLAGS$])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^LIBLDAP_LIBS$])
m4trace:configure.ac:1179: -1- PKG_CHECK_EXISTS([ldap], [pkg_cv_[]LIBLDAP_CFLAGS=`$PKG_CONFIG --[]cflags "ldap" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1179: -1- PKG_CHECK_EXISTS([ldap], [pkg_cv_[]LIBLDAP_LIBS=`$PKG_CONFIG --[]libs "ldap" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1179: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_WINLDAP_H$])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAP_H$])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LBER_H$])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_MOZLDAP_LDAP_H$])
m4trace:configure.ac:1179: -1- SQUID_CHECK_LDAP_API
m4trace:configure.ac:1179: -1- SQUID_LDAP_TEST([LDAP], [
    char host[]="";
    int port;
    ldap_init((const char *)&host, port);
  ])
m4trace:configure.ac:1179: -1- SQUID_STATE_SAVE([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_ROLLBACK([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_COMMIT([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAP$])
m4trace:configure.ac:1179: -1- SQUID_LDAP_CHECK_VENDOR
m4trace:configure.ac:1179: -1- SQUID_LDAP_TEST_RUN([OpenLDAP], [return strcmp(LDAP_VENDOR_NAME,"OpenLDAP")])
m4trace:configure.ac:1179: -1- SQUID_STATE_SAVE([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_ROLLBACK([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_COMMIT([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^m4_translit$])
m4trace:configure.ac:1179: -1- SQUID_LDAP_TEST_RUN([Sun LDAP SDK], [return strcmp(LDAP_VENDOR_NAME,"Sun Microsystems Inc.")])
m4trace:configure.ac:1179: -1- SQUID_STATE_SAVE([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_ROLLBACK([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_COMMIT([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^m4_translit$])
m4trace:configure.ac:1179: -1- SQUID_LDAP_TEST_RUN([Mozilla LDAP SDK], [return strcmp(LDAP_VENDOR_NAME,"mozilla.org")])
m4trace:configure.ac:1179: -1- SQUID_STATE_SAVE([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_ROLLBACK([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_COMMIT([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^m4_translit$])
m4trace:configure.ac:1179: -1- SQUID_LDAP_TEST([LDAP_OPT_DEBUG_LEVEL], [auto i=LDAP_OPT_DEBUG_LEVEL])
m4trace:configure.ac:1179: -1- SQUID_STATE_SAVE([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_ROLLBACK([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_COMMIT([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAP_OPT_DEBUG_LEVEL$])
m4trace:configure.ac:1179: -1- SQUID_LDAP_TEST([LDAP_SCOPE_DEFAULT], [auto i=LDAP_SCOPE_DEFAULT])
m4trace:configure.ac:1179: -1- SQUID_STATE_SAVE([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_ROLLBACK([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_COMMIT([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAP_SCOPE_DEFAULT$])
m4trace:configure.ac:1179: -1- SQUID_LDAP_TEST([LDAP_REBIND_PROC], [LDAP_REBIND_PROC ldap_rebind])
m4trace:configure.ac:1179: -1- SQUID_STATE_SAVE([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_ROLLBACK([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_COMMIT([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAP_REBIND_PROC$])
m4trace:configure.ac:1179: -1- SQUID_LDAP_TEST([LDAP_REBINDPROC_CALLBACK], [LDAP_REBINDPROC_CALLBACK ldap_rebind])
m4trace:configure.ac:1179: -1- SQUID_STATE_SAVE([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_ROLLBACK([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_COMMIT([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAP_REBINDPROC_CALLBACK$])
m4trace:configure.ac:1179: -1- SQUID_LDAP_TEST([LDAP_REBIND_FUNCTION], [LDAP_REBIND_FUNCTION ldap_rebind])
m4trace:configure.ac:1179: -1- SQUID_STATE_SAVE([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_ROLLBACK([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_COMMIT([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAP_REBIND_FUNCTION$])
m4trace:configure.ac:1179: -1- SQUID_LDAP_TEST([LDAP_URL_LUD_SCHEME], [struct ldap_url_desc.lud_scheme])
m4trace:configure.ac:1179: -1- SQUID_STATE_SAVE([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_ROLLBACK([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_COMMIT([squid_ldap_test_state])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAP_URL_LUD_SCHEME$])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAPSSL_CLIENT_INIT$])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAP_URL_DESC2STR$])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAP_URL_PARSE$])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LDAP_START_TLS_S$])
m4trace:configure.ac:1179: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:1179: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^HAVE_LIBLDAP$])
m4trace:configure.ac:1179: -1- AM_CONDITIONAL([ENABLE_LIBLDAP], [test "x$with_ldap" != "xno"])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^ENABLE_LIBLDAP_TRUE$])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^ENABLE_LIBLDAP_FALSE$])
m4trace:configure.ac:1179: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBLDAP_TRUE])
m4trace:configure.ac:1179: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBLDAP_FALSE])
m4trace:configure.ac:1179: -1- m4_pattern_allow([^LIBLDAP_LIBS$])
m4trace:configure.ac:1192: -1- SQUID_AUTO_LIB([sasl], [Cyrus SASL], [LIBSASL])
m4trace:configure.ac:1193: -1- SQUID_CHECK_LIB_WORKS([sasl], [
  PKG_CHECK_MODULES([LIBSASL],[libsasl2],[:],[:])
  CPPFLAGS="$LIBSASL_CFLAGS $CPPFLAGS"
  LIBS="$LIBSASL_LIBS $LIBS"
  AC_CHECK_HEADERS([sasl/sasl.h sasl.h])
])
m4trace:configure.ac:1193: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:1193: -1- PKG_CHECK_MODULES([LIBSASL], [libsasl2], [:], [:])
m4trace:configure.ac:1193: -1- m4_pattern_allow([^LIBSASL_CFLAGS$])
m4trace:configure.ac:1193: -1- m4_pattern_allow([^LIBSASL_LIBS$])
m4trace:configure.ac:1193: -1- PKG_CHECK_EXISTS([libsasl2], [pkg_cv_[]LIBSASL_CFLAGS=`$PKG_CONFIG --[]cflags "libsasl2" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1193: -1- PKG_CHECK_EXISTS([libsasl2], [pkg_cv_[]LIBSASL_LIBS=`$PKG_CONFIG --[]libs "libsasl2" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1193: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1193: -1- m4_pattern_allow([^HAVE_SASL_SASL_H$])
m4trace:configure.ac:1193: -1- m4_pattern_allow([^HAVE_SASL_H$])
m4trace:configure.ac:1193: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:1193: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:1193: -1- m4_pattern_allow([^HAVE_LIBSASL$])
m4trace:configure.ac:1193: -1- AM_CONDITIONAL([ENABLE_LIBSASL], [test "x$with_sasl" != "xno"])
m4trace:configure.ac:1193: -1- m4_pattern_allow([^ENABLE_LIBSASL_TRUE$])
m4trace:configure.ac:1193: -1- m4_pattern_allow([^ENABLE_LIBSASL_FALSE$])
m4trace:configure.ac:1193: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBSASL_TRUE])
m4trace:configure.ac:1193: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBSASL_FALSE])
m4trace:configure.ac:1193: -1- m4_pattern_allow([^LIBSASL_LIBS$])
m4trace:configure.ac:1200: -1- SQUID_AUTO_LIB([systemd], [systemd API for start-up notification], [LIBSYSTEMD])
m4trace:configure.ac:1201: -1- SQUID_CHECK_LIB_WORKS([systemd], [
  LIBS="$LIBS $LIBSYSTEMD_PATH"
  PKG_CHECK_MODULES(LIBSYSTEMD,[libsystemd >= 209],[
    AC_CHECK_HEADERS(systemd/sd-daemon.h)
  ],[:])
])
m4trace:configure.ac:1201: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:1201: -1- PKG_CHECK_MODULES([LIBSYSTEMD], [libsystemd >= 209], [
    AC_CHECK_HEADERS(systemd/sd-daemon.h)
  ], [:])
m4trace:configure.ac:1201: -1- m4_pattern_allow([^LIBSYSTEMD_CFLAGS$])
m4trace:configure.ac:1201: -1- m4_pattern_allow([^LIBSYSTEMD_LIBS$])
m4trace:configure.ac:1201: -1- PKG_CHECK_EXISTS([libsystemd >= 209], [pkg_cv_[]LIBSYSTEMD_CFLAGS=`$PKG_CONFIG --[]cflags "libsystemd >= 209" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1201: -1- PKG_CHECK_EXISTS([libsystemd >= 209], [pkg_cv_[]LIBSYSTEMD_LIBS=`$PKG_CONFIG --[]libs "libsystemd >= 209" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1201: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1201: -1- m4_pattern_allow([^HAVE_SYSTEMD_SD_DAEMON_H$])
m4trace:configure.ac:1201: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:1201: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:1201: -1- m4_pattern_allow([^HAVE_LIBSYSTEMD$])
m4trace:configure.ac:1201: -1- AM_CONDITIONAL([ENABLE_LIBSYSTEMD], [test "x$with_systemd" != "xno"])
m4trace:configure.ac:1201: -1- m4_pattern_allow([^ENABLE_LIBSYSTEMD_TRUE$])
m4trace:configure.ac:1201: -1- m4_pattern_allow([^ENABLE_LIBSYSTEMD_FALSE$])
m4trace:configure.ac:1201: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBSYSTEMD_TRUE])
m4trace:configure.ac:1201: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBSYSTEMD_FALSE])
m4trace:configure.ac:1201: -1- m4_pattern_allow([^LIBSYSTEMD_LIBS$])
m4trace:configure.ac:1208: -1- SQUID_YESNO([$enableval], [--enable-forw-via-db])
m4trace:configure.ac:1212: -1- SQUID_DEFINE_BOOL([USE_FORW_VIA_DB], [${enable_forw_via_db:=no}], [Enable Forw/Via database])
m4trace:configure.ac:1212: -1- m4_pattern_allow([^USE_FORW_VIA_DB$])
m4trace:configure.ac:1216: -1- SQUID_YESNO([$enableval], [--enable-cache-digests])
m4trace:configure.ac:1221: -1- SQUID_DEFINE_BOOL([USE_CACHE_DIGESTS], [${enable_cache_digests:=no}], [Use Cache Digests for locating objects in neighbor caches.])
m4trace:configure.ac:1221: -1- m4_pattern_allow([^USE_CACHE_DIGESTS$])
m4trace:configure.ac:1232: -1- SQUID_YESNO([$enableval], [--enable-select])
m4trace:configure.ac:1239: -1- SQUID_YESNO([$enableval], [--enable-poll])
m4trace:configure.ac:1246: -1- SQUID_YESNO([$enableval], [--enable-kqueue])
m4trace:configure.ac:1251: -1- m4_pattern_allow([^HAVE_SYS_EVENT_H$])
m4trace:configure.ac:1251: -1- m4_pattern_allow([^HAVE_KQUEUE$])
m4trace:configure.ac:1271: -1- SQUID_YESNO([$enableval], [--enable-epoll])
m4trace:configure.ac:1281: -1- SQUID_STATE_SAVE([squid_epoll_state])
m4trace:configure.ac:1281: -1- m4_pattern_allow([^EPOLL_LIBS$])
m4trace:configure.ac:1281: -1- SQUID_STATE_ROLLBACK([squid_epoll_state])
m4trace:configure.ac:1281: -1- SQUID_STATE_COMMIT([squid_epoll_state])
m4trace:configure.ac:1281: -1- m4_pattern_allow([^HAVE_SYS_EPOLL_H$])
m4trace:configure.ac:1281: -2- SQUID_CHECK_EPOLL
m4trace:configure.ac:1304: -1- SQUID_YESNO([$enableval], [--enable-devpoll])
m4trace:configure.ac:1312: -1- m4_pattern_allow([^HAVE_IOCTL$])
m4trace:configure.ac:1312: -1- m4_pattern_allow([^HAVE_WRITE$])
m4trace:configure.ac:1312: -1- m4_pattern_allow([^HAVE_SYS_DEVPOLL_H$])
m4trace:configure.ac:1312: -2- SQUID_CHECK_DEVPOLL
m4trace:configure.ac:1333: -1- SQUID_YESNO([$enableval], [--enable-http-violations])
m4trace:configure.ac:1339: -1- SQUID_DEFINE_BOOL([USE_HTTP_VIOLATIONS], [${enable_http_violations:=yes}], [Define to enable code which volates the HTTP standard specification])
m4trace:configure.ac:1339: -1- m4_pattern_allow([^USE_HTTP_VIOLATIONS$])
m4trace:configure.ac:1344: -1- SQUID_YESNO([$enableval], [--enable-ipfw-transparent])
m4trace:configure.ac:1350: -1- SQUID_DEFINE_BOOL([IPFW_TRANSPARENT], [${enable_ipfw_transparent:=no}], [Enable support for Transparent Proxy on systems using FreeBSD IPFW-style firewalling.])
m4trace:configure.ac:1350: -1- m4_pattern_allow([^IPFW_TRANSPARENT$])
m4trace:configure.ac:1355: -1- SQUID_YESNO([$enableval], [--enable-ipf-transparent])
m4trace:configure.ac:1365: -1- SQUID_YESNO([$enableval], [--enable-pf-transparent])
m4trace:configure.ac:1374: -1- SQUID_YESNO([$withval], [--with-nat-devpf])
m4trace:configure.ac:1383: -1- SQUID_YESNO([$enableval], [--enable-linux-netfilter])
m4trace:configure.ac:1393: -1- SQUID_AUTO_LIB([netfilter-conntrack], [Netfilter conntrack], [LIBNETFILTER_CONNTRACK])
m4trace:configure.ac:1394: -1- SQUID_CHECK_LIB_WORKS([netfilter-conntrack], [
  PKG_CHECK_MODULES([LIBNETFILTER_CONNTRACK],[libnetfilter_conntrack],[:],[:])
  CPPFLAGS="$LIBNETFILTER_CONNTRACK_CFLAGS $CPPFLAGS"
  LIBS="$LIBNETFILTER_CONNTRACK_PATH $LIBNETFILTER_CONNTRACK_LIBS $LIBS"
  AC_CHECK_HEADERS([ \
    libnetfilter_conntrack/libnetfilter_conntrack.h \
    libnetfilter_conntrack/libnetfilter_conntrack_tcp.h \
  ])
])
m4trace:configure.ac:1394: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:1394: -1- PKG_CHECK_MODULES([LIBNETFILTER_CONNTRACK], [libnetfilter_conntrack], [:], [:])
m4trace:configure.ac:1394: -1- m4_pattern_allow([^LIBNETFILTER_CONNTRACK_CFLAGS$])
m4trace:configure.ac:1394: -1- m4_pattern_allow([^LIBNETFILTER_CONNTRACK_LIBS$])
m4trace:configure.ac:1394: -1- PKG_CHECK_EXISTS([libnetfilter_conntrack], [pkg_cv_[]LIBNETFILTER_CONNTRACK_CFLAGS=`$PKG_CONFIG --[]cflags "libnetfilter_conntrack" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1394: -1- PKG_CHECK_EXISTS([libnetfilter_conntrack], [pkg_cv_[]LIBNETFILTER_CONNTRACK_LIBS=`$PKG_CONFIG --[]libs "libnetfilter_conntrack" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1394: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1394: -1- m4_pattern_allow([^HAVE_LIBNETFILTER_CONNTRACK_LIBNETFILTER_CONNTRACK_H$])
m4trace:configure.ac:1394: -1- m4_pattern_allow([^HAVE_LIBNETFILTER_CONNTRACK_LIBNETFILTER_CONNTRACK_TCP_H$])
m4trace:configure.ac:1394: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:1394: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:1394: -1- m4_pattern_allow([^HAVE_LIBNETFILTER_CONNTRACK$])
m4trace:configure.ac:1394: -1- AM_CONDITIONAL([ENABLE_LIBNETFILTER_CONNTRACK], [test "x$with_netfilter_conntrack" != "xno"])
m4trace:configure.ac:1394: -1- m4_pattern_allow([^ENABLE_LIBNETFILTER_CONNTRACK_TRUE$])
m4trace:configure.ac:1394: -1- m4_pattern_allow([^ENABLE_LIBNETFILTER_CONNTRACK_FALSE$])
m4trace:configure.ac:1394: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBNETFILTER_CONNTRACK_TRUE])
m4trace:configure.ac:1394: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBNETFILTER_CONNTRACK_FALSE])
m4trace:configure.ac:1394: -1- m4_pattern_allow([^LIBNETFILTER_CONNTRACK_LIBS$])
m4trace:configure.ac:1407: -1- SQUID_YESNO([$withval], [--with-large-files])
m4trace:configure.ac:1434: -1- m4_pattern_allow([^SIZEOF_LONG$])
m4trace:configure.ac:1485: -1- SQUID_YESNO([$enableval], [--enable-follow-x-forwarded-for])
m4trace:configure.ac:1494: -1- SQUID_DEFINE_BOOL([FOLLOW_X_FORWARDED_FOR], [$enable_follow_x_forwarded_for], [Enable following X-Forwarded-For headers])
m4trace:configure.ac:1494: -1- m4_pattern_allow([^FOLLOW_X_FORWARDED_FOR$])
m4trace:configure.ac:1514: -1- m4_pattern_allow([^DEFAULT_HOSTS$])
m4trace:configure.ac:1517: -1- SQUID_YESNO([$enableval], [--enable-auth])
m4trace:configure.ac:1524: -1- SQUID_DEFINE_BOOL([USE_AUTH], [$enable_auth], [Enable support for authentication])
m4trace:configure.ac:1524: -1- m4_pattern_allow([^USE_AUTH$])
m4trace:configure.ac:1525: -1- AM_CONDITIONAL([ENABLE_AUTH], [test "x$enable_auth" != "xno"])
m4trace:configure.ac:1525: -1- m4_pattern_allow([^ENABLE_AUTH_TRUE$])
m4trace:configure.ac:1525: -1- m4_pattern_allow([^ENABLE_AUTH_FALSE$])
m4trace:configure.ac:1525: -1- _AM_SUBST_NOTMAKE([ENABLE_AUTH_TRUE])
m4trace:configure.ac:1525: -1- _AM_SUBST_NOTMAKE([ENABLE_AUTH_FALSE])
m4trace:configure.ac:1540: -1- m4_include([src/auth/basic/helpers.m4])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_HELPER_FEATURE_CHECK([auth_basic], [$enable_auth], [auth/basic], [
    # NP: we only need this list because m4_include() does not accept variables
    SQUID_CHECK_HELPER([DB],[auth/basic])
    SQUID_CHECK_HELPER([LDAP],[auth/basic])
    SQUID_CHECK_HELPER([NCSA],[auth/basic])
    SQUID_CHECK_HELPER([NIS],[auth/basic])
    SQUID_CHECK_HELPER([PAM],[auth/basic])
    SQUID_CHECK_HELPER([POP3],[auth/basic])
    SQUID_CHECK_HELPER([RADIUS],[auth/basic])
    SQUID_CHECK_HELPER([SASL],[auth/basic])
    SQUID_CHECK_HELPER([SMB],[auth/basic])
    SQUID_CHECK_HELPER([SMB_LM],[auth/basic])
    SQUID_CHECK_HELPER([SSPI],[auth/basic])
    SQUID_CHECK_HELPER([fake],[auth/basic])
    SQUID_CHECK_HELPER([getpwnam],[auth/basic])
  ])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/auth/basic], [enable_auth_basic])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CLEANUP_MODULES_LIST([enable_auth_basic])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/auth/basic], [enable_auth_basic])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([DB], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/DB/required.m4])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([LDAP], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/LDAP/required.m4])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([NCSA], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/NCSA/required.m4])
m4trace:src/auth/basic/NCSA/required.m4:11: -1- SQUID_STATE_SAVE([ncsa_helper])
m4trace:src/auth/basic/NCSA/required.m4:13: -1- m4_pattern_allow([^HAVE_CRYPT$])
m4trace:src/auth/basic/NCSA/required.m4:14: -1- SQUID_STATE_ROLLBACK([ncsa_helper])
m4trace:src/auth/basic/NCSA/required.m4:14: -1- SQUID_STATE_COMMIT([ncsa_helper])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([NIS], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/NIS/required.m4])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([PAM], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/PAM/required.m4])
m4trace:src/auth/basic/PAM/required.m4:8: -1- m4_pattern_allow([^HAVE_SECURITY_PAM_APPL_H$])
m4trace:src/auth/basic/PAM/required.m4:8: -1- CHECK_STRUCT_PAM_CONV
m4trace:src/auth/basic/PAM/required.m4:8: -2- m4_pattern_allow([^PAM_CONV_FUNC_CONST_PARM$])
m4trace:src/auth/basic/PAM/required.m4:8: -2- m4_pattern_allow([^PAM_CONV_FUNC_CONST_PARM$])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([POP3], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/POP3/required.m4])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([RADIUS], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/RADIUS/required.m4])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([SASL], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/SASL/required.m4])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([SMB], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/SMB/required.m4])
m4trace:src/auth/basic/SMB/required.m4:11: -1- m4_pattern_allow([^SMBCLIENT$])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([SMB_LM], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/SMB_LM/required.m4])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([SSPI], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/SSPI/required.m4])
m4trace:src/auth/basic/SSPI/required.m4:8: -1- SQUID_CHECK_WIN32_SSPI([
  BUILD_HELPER="SSPI"
  require_sspi="yes"
])
m4trace:src/auth/basic/SSPI/required.m4:8: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:src/auth/basic/SSPI/required.m4:8: -1- m4_pattern_allow([^HAVE_TCHAR_H$])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([fake], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/fake/required.m4])
m4trace:src/auth/basic/helpers.m4:8: -1- SQUID_CHECK_HELPER([getpwnam], [auth/basic])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_include([src/auth/basic/getpwnam/required.m4])
m4trace:src/auth/basic/getpwnam/required.m4:8: -1- m4_pattern_allow([^HAVE_PWD_H$])
m4trace:src/auth/basic/getpwnam/required.m4:8: -1- SQUID_STATE_SAVE([getpwnam_helper])
m4trace:src/auth/basic/getpwnam/required.m4:8: -1- m4_pattern_allow([^HAVE_CRYPT$])
m4trace:src/auth/basic/getpwnam/required.m4:8: -1- SQUID_STATE_ROLLBACK([getpwnam_helper])
m4trace:src/auth/basic/getpwnam/required.m4:8: -1- SQUID_STATE_COMMIT([getpwnam_helper])
m4trace:src/auth/basic/getpwnam/required.m4:8: -1- m4_pattern_allow([^HAVE_UNISTD_H$])
m4trace:src/auth/basic/getpwnam/required.m4:8: -1- m4_pattern_allow([^HAVE_CRYPT_H$])
m4trace:src/auth/basic/getpwnam/required.m4:8: -1- m4_pattern_allow([^HAVE_SHADOW_H$])
m4trace:src/auth/basic/helpers.m4:8: -1- m4_pattern_allow([^HAVE_AUTH_MODULE_BASIC$])
m4trace:src/auth/basic/helpers.m4:31: -1- AM_CONDITIONAL([ENABLE_AUTH_BASIC], [test "x$enable_auth_basic" != "xno"])
m4trace:src/auth/basic/helpers.m4:31: -1- m4_pattern_allow([^ENABLE_AUTH_BASIC_TRUE$])
m4trace:src/auth/basic/helpers.m4:31: -1- m4_pattern_allow([^ENABLE_AUTH_BASIC_FALSE$])
m4trace:src/auth/basic/helpers.m4:31: -1- _AM_SUBST_NOTMAKE([ENABLE_AUTH_BASIC_TRUE])
m4trace:src/auth/basic/helpers.m4:31: -1- _AM_SUBST_NOTMAKE([ENABLE_AUTH_BASIC_FALSE])
m4trace:src/auth/basic/helpers.m4:32: -1- m4_pattern_allow([^BASIC_AUTH_HELPERS$])
m4trace:configure.ac:1552: -1- m4_include([src/auth/digest/helpers.m4])
m4trace:src/auth/digest/helpers.m4:8: -1- SQUID_HELPER_FEATURE_CHECK([auth_digest], [$enable_auth], [auth/digest], [
    # NP: we only need this list because m4_include() does not accept variables
    SQUID_CHECK_HELPER([eDirectory],[auth/digest])
    SQUID_CHECK_HELPER([file],[auth/digest])
    SQUID_CHECK_HELPER([LDAP],[auth/digest])
  ])
m4trace:src/auth/digest/helpers.m4:8: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/auth/digest], [enable_auth_digest])
m4trace:src/auth/digest/helpers.m4:8: -1- SQUID_CLEANUP_MODULES_LIST([enable_auth_digest])
m4trace:src/auth/digest/helpers.m4:8: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/auth/digest], [enable_auth_digest])
m4trace:src/auth/digest/helpers.m4:8: -1- SQUID_CHECK_HELPER([eDirectory], [auth/digest])
m4trace:src/auth/digest/helpers.m4:8: -1- m4_include([src/auth/digest/eDirectory/required.m4])
m4trace:src/auth/digest/helpers.m4:8: -1- SQUID_CHECK_HELPER([file], [auth/digest])
m4trace:src/auth/digest/helpers.m4:8: -1- m4_include([src/auth/digest/file/required.m4])
m4trace:src/auth/digest/helpers.m4:8: -1- SQUID_CHECK_HELPER([LDAP], [auth/digest])
m4trace:src/auth/digest/helpers.m4:8: -1- m4_include([src/auth/digest/LDAP/required.m4])
m4trace:src/auth/digest/helpers.m4:8: -1- m4_pattern_allow([^HAVE_AUTH_MODULE_DIGEST$])
m4trace:src/auth/digest/helpers.m4:20: -1- AM_CONDITIONAL([ENABLE_AUTH_DIGEST], [test "x$enable_auth_digest" != "xno"])
m4trace:src/auth/digest/helpers.m4:20: -1- m4_pattern_allow([^ENABLE_AUTH_DIGEST_TRUE$])
m4trace:src/auth/digest/helpers.m4:20: -1- m4_pattern_allow([^ENABLE_AUTH_DIGEST_FALSE$])
m4trace:src/auth/digest/helpers.m4:20: -1- _AM_SUBST_NOTMAKE([ENABLE_AUTH_DIGEST_TRUE])
m4trace:src/auth/digest/helpers.m4:20: -1- _AM_SUBST_NOTMAKE([ENABLE_AUTH_DIGEST_FALSE])
m4trace:src/auth/digest/helpers.m4:21: -1- m4_pattern_allow([^DIGEST_AUTH_HELPERS$])
m4trace:configure.ac:1566: -1- m4_include([src/auth/negotiate/helpers.m4])
m4trace:src/auth/negotiate/helpers.m4:8: -1- SQUID_HELPER_FEATURE_CHECK([auth_negotiate], [$enable_auth], [auth/negotiate], [
    # NP: we only need this list because m4_include() does not accept variables
    SQUID_CHECK_HELPER([SSPI],[auth/negotiate])
    SQUID_CHECK_HELPER([kerberos],[auth/negotiate])
    SQUID_CHECK_HELPER([wrapper],[auth/negotiate])
  ])
m4trace:src/auth/negotiate/helpers.m4:8: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/auth/negotiate], [enable_auth_negotiate])
m4trace:src/auth/negotiate/helpers.m4:8: -1- SQUID_CLEANUP_MODULES_LIST([enable_auth_negotiate])
m4trace:src/auth/negotiate/helpers.m4:8: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/auth/negotiate], [enable_auth_negotiate])
m4trace:src/auth/negotiate/helpers.m4:8: -1- SQUID_CHECK_HELPER([SSPI], [auth/negotiate])
m4trace:src/auth/negotiate/helpers.m4:8: -1- m4_include([src/auth/negotiate/SSPI/required.m4])
m4trace:src/auth/negotiate/SSPI/required.m4:8: -1- SQUID_CHECK_WIN32_SSPI([
  BUILD_HELPER="SSPI"
  require_sspi="yes"
])
m4trace:src/auth/negotiate/SSPI/required.m4:8: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:src/auth/negotiate/SSPI/required.m4:8: -1- m4_pattern_allow([^HAVE_TCHAR_H$])
m4trace:src/auth/negotiate/helpers.m4:8: -1- SQUID_CHECK_HELPER([kerberos], [auth/negotiate])
m4trace:src/auth/negotiate/helpers.m4:8: -1- m4_include([src/auth/negotiate/kerberos/required.m4])
m4trace:src/auth/negotiate/helpers.m4:8: -1- SQUID_CHECK_HELPER([wrapper], [auth/negotiate])
m4trace:src/auth/negotiate/helpers.m4:8: -1- m4_include([src/auth/negotiate/wrapper/required.m4])
m4trace:src/auth/negotiate/helpers.m4:8: -1- m4_pattern_allow([^HAVE_AUTH_MODULE_NEGOTIATE$])
m4trace:src/auth/negotiate/helpers.m4:20: -1- AM_CONDITIONAL([ENABLE_AUTH_NEGOTIATE], [test "x$enable_auth_negotiate" != "xno"])
m4trace:src/auth/negotiate/helpers.m4:20: -1- m4_pattern_allow([^ENABLE_AUTH_NEGOTIATE_TRUE$])
m4trace:src/auth/negotiate/helpers.m4:20: -1- m4_pattern_allow([^ENABLE_AUTH_NEGOTIATE_FALSE$])
m4trace:src/auth/negotiate/helpers.m4:20: -1- _AM_SUBST_NOTMAKE([ENABLE_AUTH_NEGOTIATE_TRUE])
m4trace:src/auth/negotiate/helpers.m4:20: -1- _AM_SUBST_NOTMAKE([ENABLE_AUTH_NEGOTIATE_FALSE])
m4trace:src/auth/negotiate/helpers.m4:21: -1- m4_pattern_allow([^NEGOTIATE_AUTH_HELPERS$])
m4trace:configure.ac:1577: -1- m4_include([src/auth/ntlm/helpers.m4])
m4trace:src/auth/ntlm/helpers.m4:7: -1- SQUID_HELPER_FEATURE_CHECK([auth_ntlm], [$enable_auth], [auth/ntlm], [
    # NP: we only need this list because m4_include() does not accept variables
    SQUID_CHECK_HELPER([fake],[auth/ntlm])
    SQUID_CHECK_HELPER([SMB_LM],[auth/ntlm])
    SQUID_CHECK_HELPER([SSPI],[auth/ntlm])
  ])
m4trace:src/auth/ntlm/helpers.m4:7: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/auth/ntlm], [enable_auth_ntlm])
m4trace:src/auth/ntlm/helpers.m4:7: -1- SQUID_CLEANUP_MODULES_LIST([enable_auth_ntlm])
m4trace:src/auth/ntlm/helpers.m4:7: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/auth/ntlm], [enable_auth_ntlm])
m4trace:src/auth/ntlm/helpers.m4:7: -1- SQUID_CHECK_HELPER([fake], [auth/ntlm])
m4trace:src/auth/ntlm/helpers.m4:7: -1- m4_include([src/auth/ntlm/fake/required.m4])
m4trace:src/auth/ntlm/helpers.m4:7: -1- SQUID_CHECK_HELPER([SMB_LM], [auth/ntlm])
m4trace:src/auth/ntlm/helpers.m4:7: -1- m4_include([src/auth/ntlm/SMB_LM/required.m4])
m4trace:src/auth/ntlm/helpers.m4:7: -1- SQUID_CHECK_HELPER([SSPI], [auth/ntlm])
m4trace:src/auth/ntlm/helpers.m4:7: -1- m4_include([src/auth/ntlm/SSPI/required.m4])
m4trace:src/auth/ntlm/SSPI/required.m4:8: -1- SQUID_CHECK_WIN32_SSPI([
  BUILD_HELPER="SSPI"
  require_sspi="yes"
])
m4trace:src/auth/ntlm/SSPI/required.m4:8: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:src/auth/ntlm/SSPI/required.m4:8: -1- m4_pattern_allow([^HAVE_TCHAR_H$])
m4trace:src/auth/ntlm/helpers.m4:7: -1- m4_pattern_allow([^HAVE_AUTH_MODULE_NTLM$])
m4trace:src/auth/ntlm/helpers.m4:19: -1- AM_CONDITIONAL([ENABLE_AUTH_NTLM], [test "x$enable_auth_ntlm" != "xno"])
m4trace:src/auth/ntlm/helpers.m4:19: -1- m4_pattern_allow([^ENABLE_AUTH_NTLM_TRUE$])
m4trace:src/auth/ntlm/helpers.m4:19: -1- m4_pattern_allow([^ENABLE_AUTH_NTLM_FALSE$])
m4trace:src/auth/ntlm/helpers.m4:19: -1- _AM_SUBST_NOTMAKE([ENABLE_AUTH_NTLM_TRUE])
m4trace:src/auth/ntlm/helpers.m4:19: -1- _AM_SUBST_NOTMAKE([ENABLE_AUTH_NTLM_FALSE])
m4trace:src/auth/ntlm/helpers.m4:20: -1- m4_pattern_allow([^NTLM_AUTH_HELPERS$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_MACHINE_BYTE_SWAP_H$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_SYS_BSWAP_H$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_ENDIAN_H$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_SYS_ENDIAN_H$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_BSWAP_16$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_BSWAP16$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_BSWAP_32$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_BSWAP32$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_HTOLE16$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE___HTOLE16$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_HTOLE32$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE___HTOLE32$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_LE16TOH$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE___LE16TOH$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE_LE32TOH$])
m4trace:src/auth/ntlm/helpers.m4:23: -1- m4_pattern_allow([^HAVE___LE32TOH$])
m4trace:configure.ac:1586: -1- m4_pattern_allow([^AUTH_MODULES$])
m4trace:configure.ac:1587: -1- m4_pattern_allow([^AUTH_LIBS_TO_BUILD$])
m4trace:configure.ac:1588: -1- AM_CONDITIONAL([ENABLE_SMBLIB], [test "x$require_smblib" = "xyes"])
m4trace:configure.ac:1588: -1- m4_pattern_allow([^ENABLE_SMBLIB_TRUE$])
m4trace:configure.ac:1588: -1- m4_pattern_allow([^ENABLE_SMBLIB_FALSE$])
m4trace:configure.ac:1588: -1- _AM_SUBST_NOTMAKE([ENABLE_SMBLIB_TRUE])
m4trace:configure.ac:1588: -1- _AM_SUBST_NOTMAKE([ENABLE_SMBLIB_FALSE])
m4trace:configure.ac:1589: -1- AM_CONDITIONAL([ENABLE_SSPI], [test "x$require_sspi" = "xyes"])
m4trace:configure.ac:1589: -1- m4_pattern_allow([^ENABLE_SSPI_TRUE$])
m4trace:configure.ac:1589: -1- m4_pattern_allow([^ENABLE_SSPI_FALSE$])
m4trace:configure.ac:1589: -1- _AM_SUBST_NOTMAKE([ENABLE_SSPI_TRUE])
m4trace:configure.ac:1589: -1- _AM_SUBST_NOTMAKE([ENABLE_SSPI_FALSE])
m4trace:configure.ac:1600: -1- m4_include([src/log/helpers.m4])
m4trace:src/log/helpers.m4:9: -1- SQUID_HELPER_FEATURE_CHECK([log_daemon_helpers], [yes], [log], [
  # NP: we only need this list because m4_include() does not accept variables
  SQUID_CHECK_HELPER([DB],[log])
  SQUID_CHECK_HELPER([file],[log])
])
m4trace:src/log/helpers.m4:9: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/log], [enable_log_daemon_helpers])
m4trace:src/log/helpers.m4:9: -1- SQUID_CLEANUP_MODULES_LIST([enable_log_daemon_helpers])
m4trace:src/log/helpers.m4:9: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/log], [enable_log_daemon_helpers])
m4trace:src/log/helpers.m4:9: -1- SQUID_CHECK_HELPER([DB], [log])
m4trace:src/log/helpers.m4:9: -1- m4_include([src/log/DB/required.m4])
m4trace:src/log/helpers.m4:9: -1- SQUID_CHECK_HELPER([file], [log])
m4trace:src/log/helpers.m4:9: -1- m4_include([src/log/file/required.m4])
m4trace:src/log/helpers.m4:15: -1- m4_pattern_allow([^LOG_DAEMON_HELPERS$])
m4trace:configure.ac:1612: -1- m4_include([src/acl/external/helpers.m4])
m4trace:src/acl/external/helpers.m4:8: -1- SQUID_CHECK_LIBTDB
m4trace:src/acl/external/helpers.m4:8: -1- SQUID_AUTO_LIB([tdb], [Samba TrivialDB], [LIBTDB])
m4trace:src/acl/external/helpers.m4:8: -1- SQUID_CHECK_LIB_WORKS([tdb], [
  SQUID_STATE_SAVE(squid_libtdb_state)
  LIBS="$LIBS $LIBTDB_PATH"
  PKG_CHECK_MODULES([LIBTDB],[tdb],[:],[:])
  CPPFLAGS="$CPPFLAGS $LIBTDB_CFLAGS"
  AC_CHECK_HEADERS([sys/stat.h tdb.h],,,[
#if HAVE_SYS_STAT_H
#include <sys/stat.h>
#endif
  ])
  SQUID_STATE_ROLLBACK(squid_libtdb_state) #de-pollute LIBS
])
m4trace:src/acl/external/helpers.m4:8: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:src/acl/external/helpers.m4:8: -1- SQUID_STATE_SAVE([squid_libtdb_state])
m4trace:src/acl/external/helpers.m4:8: -1- PKG_CHECK_MODULES([LIBTDB], [tdb], [:], [:])
m4trace:src/acl/external/helpers.m4:8: -1- m4_pattern_allow([^LIBTDB_CFLAGS$])
m4trace:src/acl/external/helpers.m4:8: -1- m4_pattern_allow([^LIBTDB_LIBS$])
m4trace:src/acl/external/helpers.m4:8: -1- PKG_CHECK_EXISTS([tdb], [pkg_cv_[]LIBTDB_CFLAGS=`$PKG_CONFIG --[]cflags "tdb" 2>/dev/null`], [pkg_failed=yes])
m4trace:src/acl/external/helpers.m4:8: -1- PKG_CHECK_EXISTS([tdb], [pkg_cv_[]LIBTDB_LIBS=`$PKG_CONFIG --[]libs "tdb" 2>/dev/null`], [pkg_failed=yes])
m4trace:src/acl/external/helpers.m4:8: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:src/acl/external/helpers.m4:8: -1- m4_pattern_allow([^HAVE_SYS_STAT_H$])
m4trace:src/acl/external/helpers.m4:8: -1- m4_pattern_allow([^HAVE_TDB_H$])
m4trace:src/acl/external/helpers.m4:8: -1- SQUID_STATE_ROLLBACK([squid_libtdb_state])
m4trace:src/acl/external/helpers.m4:8: -1- SQUID_STATE_COMMIT([squid_libtdb_state])
m4trace:src/acl/external/helpers.m4:8: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:src/acl/external/helpers.m4:8: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:src/acl/external/helpers.m4:8: -1- m4_pattern_allow([^HAVE_LIBTDB$])
m4trace:src/acl/external/helpers.m4:8: -1- AM_CONDITIONAL([ENABLE_LIBTDB], [test "x$with_tdb" != "xno"])
m4trace:src/acl/external/helpers.m4:8: -1- m4_pattern_allow([^ENABLE_LIBTDB_TRUE$])
m4trace:src/acl/external/helpers.m4:8: -1- m4_pattern_allow([^ENABLE_LIBTDB_FALSE$])
m4trace:src/acl/external/helpers.m4:8: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBTDB_TRUE])
m4trace:src/acl/external/helpers.m4:8: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBTDB_FALSE])
m4trace:src/acl/external/helpers.m4:8: -1- m4_pattern_allow([^LIBTDB_LIBS$])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_HELPER_FEATURE_CHECK([external_acl_helpers], [yes], [acl/external], [
  # NP: we only need this list because m4_include() does not accept variables
  SQUID_CHECK_HELPER([AD_group],[acl/external])
  SQUID_CHECK_HELPER([LDAP_group],[acl/external])
  SQUID_CHECK_HELPER([LM_group],[acl/external])
  SQUID_CHECK_HELPER([delayer],[acl/external])
  SQUID_CHECK_HELPER([SQL_session],[acl/external])
  SQUID_CHECK_HELPER([eDirectory_userip],[acl/external])
  SQUID_CHECK_HELPER([file_userip],[acl/external])
  SQUID_CHECK_HELPER([kerberos_ldap_group],[acl/external])
  SQUID_CHECK_HELPER([kerberos_sid_group],[acl/external])
  SQUID_CHECK_HELPER([session],[acl/external])
  SQUID_CHECK_HELPER([time_quota],[acl/external])
  SQUID_CHECK_HELPER([unix_group],[acl/external])
  SQUID_CHECK_HELPER([wbinfo_group],[acl/external])
])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/acl/external], [enable_external_acl_helpers])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CLEANUP_MODULES_LIST([enable_external_acl_helpers])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/acl/external], [enable_external_acl_helpers])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([AD_group], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/AD_group/required.m4])
m4trace:src/acl/external/AD_group/required.m4:8: -1- m4_pattern_allow([^HAVE_DSROLE_H$])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([LDAP_group], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/LDAP_group/required.m4])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([LM_group], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/LM_group/required.m4])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([delayer], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/delayer/required.m4])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([SQL_session], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/SQL_session/required.m4])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([eDirectory_userip], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/eDirectory_userip/required.m4])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([file_userip], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/file_userip/required.m4])
m4trace:src/acl/external/file_userip/required.m4:8: -1- m4_pattern_allow([^HAVE_SYS_SOCKET_H$])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([kerberos_ldap_group], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/kerberos_ldap_group/required.m4])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([kerberos_sid_group], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/kerberos_sid_group/required.m4])
m4trace:src/acl/external/kerberos_sid_group/required.m4:8: -1- m4_pattern_allow([^LDAPSEARCH$])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([session], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/session/required.m4])
m4trace:src/acl/external/session/required.m4:13: -1- m4_pattern_allow([^HAVE_DB_H$])
m4trace:src/acl/external/session/required.m4:13: -1- m4_pattern_allow([^USE_BERKLEYDB$])
m4trace:src/acl/external/session/required.m4:24: -1- m4_pattern_allow([^LIBBDB_LIBS$])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([time_quota], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/time_quota/required.m4])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([unix_group], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/unix_group/required.m4])
m4trace:src/acl/external/unix_group/required.m4:8: -1- m4_pattern_allow([^HAVE_PWD_H$])
m4trace:src/acl/external/helpers.m4:11: -1- SQUID_CHECK_HELPER([wbinfo_group], [acl/external])
m4trace:src/acl/external/helpers.m4:11: -1- m4_include([src/acl/external/wbinfo_group/required.m4])
m4trace:src/acl/external/wbinfo_group/required.m4:12: -1- m4_pattern_allow([^WBINFO$])
m4trace:src/acl/external/helpers.m4:28: -1- m4_pattern_allow([^EXTERNAL_ACL_HELPERS$])
m4trace:configure.ac:1624: -1- m4_include([src/http/url_rewriters/helpers.m4])
m4trace:src/http/url_rewriters/helpers.m4:9: -1- SQUID_HELPER_FEATURE_CHECK([url_rewrite_helpers], [yes], [http/url_rewriters], [
  # NP: we only need this list because m4_include() does not accept variables
  SQUID_CHECK_HELPER([fake],[http/url_rewriters])
  SQUID_CHECK_HELPER([LFS],[http/url_rewriters])
])
m4trace:src/http/url_rewriters/helpers.m4:9: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/http/url_rewriters], [enable_url_rewrite_helpers])
m4trace:src/http/url_rewriters/helpers.m4:9: -1- SQUID_CLEANUP_MODULES_LIST([enable_url_rewrite_helpers])
m4trace:src/http/url_rewriters/helpers.m4:9: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/http/url_rewriters], [enable_url_rewrite_helpers])
m4trace:src/http/url_rewriters/helpers.m4:9: -1- SQUID_CHECK_HELPER([fake], [http/url_rewriters])
m4trace:src/http/url_rewriters/helpers.m4:9: -1- m4_include([src/http/url_rewriters/fake/required.m4])
m4trace:src/http/url_rewriters/helpers.m4:9: -1- SQUID_CHECK_HELPER([LFS], [http/url_rewriters])
m4trace:src/http/url_rewriters/helpers.m4:9: -1- m4_include([src/http/url_rewriters/LFS/required.m4])
m4trace:src/http/url_rewriters/helpers.m4:15: -1- m4_pattern_allow([^URL_REWRITE_HELPERS$])
m4trace:configure.ac:1636: -1- m4_include([src/security/cert_validators/helpers.m4])
m4trace:src/security/cert_validators/helpers.m4:9: -1- SQUID_HELPER_FEATURE_CHECK([security_cert_validators], [yes], [security/cert_validators], [
  # NP: we only need this list because m4_include() does not accept variables
  SQUID_CHECK_HELPER([fake],[security/cert_validators])
])
m4trace:src/security/cert_validators/helpers.m4:9: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/security/cert_validators], [enable_security_cert_validators])
m4trace:src/security/cert_validators/helpers.m4:9: -1- SQUID_CLEANUP_MODULES_LIST([enable_security_cert_validators])
m4trace:src/security/cert_validators/helpers.m4:9: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/security/cert_validators], [enable_security_cert_validators])
m4trace:src/security/cert_validators/helpers.m4:9: -1- SQUID_CHECK_HELPER([fake], [security/cert_validators])
m4trace:src/security/cert_validators/helpers.m4:9: -1- m4_include([src/security/cert_validators/fake/required.m4])
m4trace:src/security/cert_validators/helpers.m4:14: -1- m4_pattern_allow([^SECURITY_CERTV_HELPERS$])
m4trace:configure.ac:1647: -1- m4_include([src/security/cert_generators/helpers.m4])
m4trace:src/security/cert_generators/helpers.m4:9: -1- SQUID_HELPER_FEATURE_CHECK([security_cert_generators], [yes], [security/cert_generators], [
  # NP: we only need this list because m4_include() does not accept variables
  SQUID_CHECK_HELPER([file],[security/cert_generators])
])
m4trace:src/security/cert_generators/helpers.m4:9: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/security/cert_generators], [enable_security_cert_generators])
m4trace:src/security/cert_generators/helpers.m4:9: -1- SQUID_CLEANUP_MODULES_LIST([enable_security_cert_generators])
m4trace:src/security/cert_generators/helpers.m4:9: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/security/cert_generators], [enable_security_cert_generators])
m4trace:src/security/cert_generators/helpers.m4:9: -1- SQUID_CHECK_HELPER([file], [security/cert_generators])
m4trace:src/security/cert_generators/helpers.m4:9: -1- m4_include([src/security/cert_generators/file/required.m4])
m4trace:src/security/cert_generators/helpers.m4:14: -1- m4_pattern_allow([^SECURITY_CERTGEN_HELPERS$])
m4trace:src/security/cert_generators/helpers.m4:17: -1- SQUID_YESNO([$enableval], [--enable-ssl-crtd])
m4trace:src/security/cert_generators/helpers.m4:27: -1- SQUID_DEFINE_BOOL([USE_SSL_CRTD], [${enable_ssl_crtd:=no}], [Use ssl-crtd daemon])
m4trace:src/security/cert_generators/helpers.m4:27: -1- m4_pattern_allow([^USE_SSL_CRTD$])
m4trace:configure.ac:1659: -1- m4_include([src/store/id_rewriters/helpers.m4])
m4trace:src/store/id_rewriters/helpers.m4:9: -1- SQUID_HELPER_FEATURE_CHECK([storeid_rewrite_helpers], [yes], [store/id_rewriters], [
  # NP: we only need this list because m4_include() does not accept variables
  SQUID_CHECK_HELPER([file],[store/id_rewriters])
])
m4trace:src/store/id_rewriters/helpers.m4:9: -1- SQUID_LOOK_FOR_MODULES([$srcdir/src/store/id_rewriters], [enable_storeid_rewrite_helpers])
m4trace:src/store/id_rewriters/helpers.m4:9: -1- SQUID_CLEANUP_MODULES_LIST([enable_storeid_rewrite_helpers])
m4trace:src/store/id_rewriters/helpers.m4:9: -1- SQUID_CHECK_EXISTING_MODULES([$srcdir/src/store/id_rewriters], [enable_storeid_rewrite_helpers])
m4trace:src/store/id_rewriters/helpers.m4:9: -1- SQUID_CHECK_HELPER([file], [store/id_rewriters])
m4trace:src/store/id_rewriters/helpers.m4:9: -1- m4_include([src/store/id_rewriters/file/required.m4])
m4trace:src/store/id_rewriters/helpers.m4:14: -1- m4_pattern_allow([^STOREID_REWRITE_HELPERS$])
m4trace:configure.ac:1661: -1- SQUID_YESNO([$withval], [--with-valgrind-debug])
m4trace:configure.ac:1661: -1- m4_pattern_allow([^HAVE_VALGRIND_MEMCHECK_H$])
m4trace:configure.ac:1672: -1- SQUID_DEFINE_BOOL([WITH_VALGRIND], [${with_valgrind_debug:=no}], [Valgrind memory debugger support])
m4trace:configure.ac:1672: -1- m4_pattern_allow([^WITH_VALGRIND$])
m4trace:configure.ac:1677: -1- SQUID_YESNO([$enableval], [--enable-win32-service])
m4trace:configure.ac:1683: -1- SQUID_DEFINE_BOOL([USE_WIN32_SERVICE], [${enable_win32_service:=no}], [Enable code supporting MS Windows service mode])
m4trace:configure.ac:1683: -1- m4_pattern_allow([^USE_WIN32_SERVICE$])
m4trace:configure.ac:1689: -1- SQUID_YESNO([$enableval], [--enable-unlinkd])
m4trace:configure.ac:1693: -1- SQUID_DEFINE_BOOL([USE_UNLINKD], [${enable_unlinkd:=yes}], [Enable useage of unlinkd])
m4trace:configure.ac:1693: -1- m4_pattern_allow([^USE_UNLINKD$])
m4trace:configure.ac:1695: -1- AM_CONDITIONAL([ENABLE_UNLINKD], [test "x$enable_unlinkd" = "xyes"])
m4trace:configure.ac:1695: -1- m4_pattern_allow([^ENABLE_UNLINKD_TRUE$])
m4trace:configure.ac:1695: -1- m4_pattern_allow([^ENABLE_UNLINKD_FALSE$])
m4trace:configure.ac:1695: -1- _AM_SUBST_NOTMAKE([ENABLE_UNLINKD_TRUE])
m4trace:configure.ac:1695: -1- _AM_SUBST_NOTMAKE([ENABLE_UNLINKD_FALSE])
m4trace:configure.ac:1699: -1- SQUID_YESNO([$enableval], [--enable-stacktraces])
m4trace:configure.ac:1704: -1- SQUID_DEFINE_BOOL([PRINT_STACK_TRACE], [${enable_stacktraces:=no}], [Print stack traces on fatal errors])
m4trace:configure.ac:1704: -1- m4_pattern_allow([^PRINT_STACK_TRACE$])
m4trace:configure.ac:1709: -1- SQUID_YESNO([$enableval], [--enable-x-accelerator-vary])
m4trace:configure.ac:1718: -1- SQUID_DEFINE_BOOL([X_ACCELERATOR_VARY], [${enable_x_accelerator_vary:=no}], [Enable support for the X-Accelerator-Vary HTTP header])
m4trace:configure.ac:1718: -1- m4_pattern_allow([^X_ACCELERATOR_VARY$])
m4trace:configure.ac:1722: -1- SQUID_AUTO_LIB([cppunit], [cppunit test framework], [LIBCPPUNIT])
m4trace:configure.ac:1723: -1- SQUID_CHECK_LIB_WORKS([cppunit], [
  PKG_CHECK_MODULES([LIBCPPUNIT],[cppunit],[
    squid_cv_cppunit_version="`pkg-config --modversion cppunit`"
    AC_MSG_NOTICE([using system installed cppunit version $squid_cv_cppunit_version])
    AS_UNSET(squid_cv_cppunit_version)

    CXXFLAGS="${CXXFLAGS} ${LIBCPPUNIT_CFLAGS}"
    LIBS="${LIBS} ${LIBCPPUNIT_LIBS}"
    AC_CHECK_HEADERS(cppunit/extensions/HelperMacros.h)
  ],[
    AC_MSG_WARN([cppunit does not appear to be installed. Squid does not require this, but code testing with 'make check' will fail.])
  ])
])
m4trace:configure.ac:1723: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:1723: -1- PKG_CHECK_MODULES([LIBCPPUNIT], [cppunit], [
    squid_cv_cppunit_version="`pkg-config --modversion cppunit`"
    AC_MSG_NOTICE([using system installed cppunit version $squid_cv_cppunit_version])
    AS_UNSET(squid_cv_cppunit_version)

    CXXFLAGS="${CXXFLAGS} ${LIBCPPUNIT_CFLAGS}"
    LIBS="${LIBS} ${LIBCPPUNIT_LIBS}"
    AC_CHECK_HEADERS(cppunit/extensions/HelperMacros.h)
  ], [
    AC_MSG_WARN([cppunit does not appear to be installed. Squid does not require this, but code testing with 'make check' will fail.])
  ])
m4trace:configure.ac:1723: -1- m4_pattern_allow([^LIBCPPUNIT_CFLAGS$])
m4trace:configure.ac:1723: -1- m4_pattern_allow([^LIBCPPUNIT_LIBS$])
m4trace:configure.ac:1723: -1- PKG_CHECK_EXISTS([cppunit], [pkg_cv_[]LIBCPPUNIT_CFLAGS=`$PKG_CONFIG --[]cflags "cppunit" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1723: -1- PKG_CHECK_EXISTS([cppunit], [pkg_cv_[]LIBCPPUNIT_LIBS=`$PKG_CONFIG --[]libs "cppunit" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1723: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1723: -1- m4_pattern_allow([^HAVE_CPPUNIT_EXTENSIONS_HELPERMACROS_H$])
m4trace:configure.ac:1723: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:1723: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:1723: -1- m4_pattern_allow([^HAVE_LIBCPPUNIT$])
m4trace:configure.ac:1723: -1- AM_CONDITIONAL([ENABLE_LIBCPPUNIT], [test "x$with_cppunit" != "xno"])
m4trace:configure.ac:1723: -1- m4_pattern_allow([^ENABLE_LIBCPPUNIT_TRUE$])
m4trace:configure.ac:1723: -1- m4_pattern_allow([^ENABLE_LIBCPPUNIT_FALSE$])
m4trace:configure.ac:1723: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBCPPUNIT_TRUE])
m4trace:configure.ac:1723: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBCPPUNIT_FALSE])
m4trace:configure.ac:1723: -1- m4_pattern_allow([^LIBCPPUNIT_LIBS$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_ARPA_INET_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_ARPA_NAMESER_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_ASSERT_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_BSTRING_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_CRYPT_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_CTYPE_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_DIRECT_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_DIRENT_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_ERRNO_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_EXECINFO_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_FCNTL_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_FNMATCH_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_GETOPT_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_GLOB_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_GNUMALLOC_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_GRP_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_IPL_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_LIBC_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_LIMITS_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_LINUX_POSIX_TYPES_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_LINUX_TYPES_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_MALLOC_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_MATH_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_MEMORY_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_MOUNT_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_NETDB_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_NETINET_IN_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_NETINET_IN_SYSTM_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_NETINET_TCP_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_PATHS_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_POLL_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_PRIV_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_PWD_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_REGEX_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SCHED_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SIGINFO_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SIGNAL_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_STDARG_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_STDDEF_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_STDIO_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_STDLIB_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_STRING_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_STRINGS_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_BITYPES_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_FILE_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_IOCTL_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_IPC_CC$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_PRCTL_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_PROCCTL_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_MD5_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_MMAN_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_MSG_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_RESOURCE_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_SELECT_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_SHM_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_SOCKET_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_STAT_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYSCALL_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_SYSCALL_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_TIME_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_TYPES_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_UIO_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_UN_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_VFS_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYS_WAIT_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_SYSLOG_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_TIME_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_UNISTD_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_UTIME_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_VARARGS_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_BYTESWAP_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_GLIB_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_INTTYPES_H$])
m4trace:configure.ac:1738: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:1821: -2- SQUID_DEFAULT_INCLUDES
m4trace:configure.ac:1817: -1- m4_pattern_allow([^HAVE_LINUX_NETFILTER_IPV4_H$])
m4trace:configure.ac:1817: -1- m4_pattern_allow([^HAVE_LINUX_NETFILTER_IPV6_IP6_TABLES_H$])
m4trace:configure.ac:1847: -2- SQUID_BSDNET_INCLUDES
m4trace:configure.ac:1847: -2- SQUID_DEFAULT_INCLUDES
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_NET_IF_H$])
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_NETINET_IF_ETHER_H$])
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_NETINET_ICMP6_H$])
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_NETINET_IN_H$])
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_NETINET_IP_H$])
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_NETINET_IP6_H$])
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_NETINET_IP_ICMP_H$])
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_NETINET_IPL_H$])
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_NET_PF_PFVAR_H$])
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_NET_PFVAR_H$])
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_SYS_MOUNT_H$])
m4trace:configure.ac:1833: -1- m4_pattern_allow([^HAVE_RESOLV_H$])
m4trace:configure.ac:1849: -1- m4_pattern_allow([^const$])
m4trace:configure.ac:1850: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:1850: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:1852: -1- m4_pattern_allow([^HAVE_STRUCT_TM_TM_GMTOFF$])
m4trace:configure.ac:1858: -2- m4_pattern_allow([^HAVE_STRUCT_RUSAGE$])
m4trace:configure.ac:1867: -1- m4_pattern_allow([^HAVE_STRUCT_IPHDR_IP_HL$])
m4trace:configure.ac:1884: -1- m4_pattern_allow([^SIZEOF_VOID_P$])
m4trace:configure.ac:1887: -1- m4_pattern_allow([^int8_t$])
m4trace:configure.ac:1888: -1- m4_pattern_allow([^_UINT8_T$])
m4trace:configure.ac:1888: -1- m4_pattern_allow([^uint8_t$])
m4trace:configure.ac:1889: -1- m4_pattern_allow([^int16_t$])
m4trace:configure.ac:1890: -1- m4_pattern_allow([^uint16_t$])
m4trace:configure.ac:1891: -1- m4_pattern_allow([^int32_t$])
m4trace:configure.ac:1892: -1- m4_pattern_allow([^_UINT32_T$])
m4trace:configure.ac:1892: -1- m4_pattern_allow([^uint32_t$])
m4trace:configure.ac:1893: -1- m4_pattern_allow([^int64_t$])
m4trace:configure.ac:1894: -1- m4_pattern_allow([^_UINT64_T$])
m4trace:configure.ac:1894: -1- m4_pattern_allow([^uint64_t$])
m4trace:configure.ac:1895: -1- m4_pattern_allow([^pid_t$])
m4trace:configure.ac:1896: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:1897: -1- m4_pattern_allow([^ssize_t$])
m4trace:configure.ac:1898: -1- m4_pattern_allow([^off_t$])
m4trace:configure.ac:1899: -1- m4_pattern_allow([^uid_t$])
m4trace:configure.ac:1899: -1- m4_pattern_allow([^gid_t$])
m4trace:configure.ac:1902: -1- m4_pattern_allow([^SIZEOF_INT64_T$])
m4trace:configure.ac:1903: -1- m4_pattern_allow([^SIZEOF_LONG$])
m4trace:configure.ac:1905: -1- m4_pattern_allow([^SIZEOF_OFF_T$])
m4trace:configure.ac:1906: -1- m4_pattern_allow([^SIZEOF_SIZE_T$])
m4trace:configure.ac:1912: -2- m4_pattern_allow([^HAVE_PAD128_T$])
m4trace:configure.ac:1913: -2- SQUID_DEFAULT_INCLUDES
m4trace:configure.ac:1916: -2- m4_pattern_allow([^HAVE_UPAD128_T$])
m4trace:configure.ac:1917: -2- SQUID_DEFAULT_INCLUDES
m4trace:configure.ac:1919: -2- m4_pattern_allow([^HAVE_MODE_T$])
m4trace:configure.ac:1919: -2- SQUID_DEFAULT_INCLUDES
m4trace:configure.ac:1920: -2- m4_pattern_allow([^HAVE_FD_MASK$])
m4trace:configure.ac:1920: -2- SQUID_DEFAULT_INCLUDES
m4trace:configure.ac:1922: -2- m4_pattern_allow([^HAVE_SOCKLEN_T$])
m4trace:configure.ac:1929: -2- m4_pattern_allow([^HAVE_MTYP_T$])
m4trace:configure.ac:1935: -2- m4_pattern_allow([^HAVE_CPU_SET_T$])
m4trace:configure.ac:1942: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:1942: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:1942: -1- m4_pattern_allow([^ALLOCA$])
m4trace:configure.ac:1942: -1- m4_pattern_allow([^C_ALLOCA$])
m4trace:configure.ac:1942: -1- m4_pattern_allow([^STACK_DIRECTION$])
m4trace:configure.ac:1944: -1- SQUID_AUTO_LIB([cap], [Linux capabilities], [LIBCAP])
m4trace:configure.ac:1945: -1- SQUID_CHECK_LIB_WORKS([cap], [
  PKG_CHECK_MODULES([LIBCAP],[libcap >= 2.09],[:],[:])
  CPPFLAGS="$LIBCAP_CFLAGS $CPPFLAGS"
  LIBS="$LIBCAP_PATH $LIBCAP_LIBS $LIBS"
  SQUID_CHECK_FUNCTIONAL_LIBCAP2
  AC_MSG_NOTICE([libcap headers are ok: $squid_cv_sys_capability_works])
  AS_IF([test "x$squid_cv_sys_capability_works" = "xno"],[LIBCAP_LIBS=""])
])
m4trace:configure.ac:1945: -1- SQUID_STATE_SAVE([check_lib_works_state])
m4trace:configure.ac:1945: -1- PKG_CHECK_MODULES([LIBCAP], [libcap >= 2.09], [:], [:])
m4trace:configure.ac:1945: -1- m4_pattern_allow([^LIBCAP_CFLAGS$])
m4trace:configure.ac:1945: -1- m4_pattern_allow([^LIBCAP_LIBS$])
m4trace:configure.ac:1945: -1- PKG_CHECK_EXISTS([libcap >= 2.09], [pkg_cv_[]LIBCAP_CFLAGS=`$PKG_CONFIG --[]cflags "libcap >= 2.09" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1945: -1- PKG_CHECK_EXISTS([libcap >= 2.09], [pkg_cv_[]LIBCAP_LIBS=`$PKG_CONFIG --[]libs "libcap >= 2.09" 2>/dev/null`], [pkg_failed=yes])
m4trace:configure.ac:1945: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1945: -1- SQUID_CHECK_FUNCTIONAL_LIBCAP2
m4trace:configure.ac:1945: -1- m4_pattern_allow([^HAVE_SYS_CAPABILITY_H$])
m4trace:configure.ac:1945: -1- SQUID_STATE_ROLLBACK([check_lib_works_state])
m4trace:configure.ac:1945: -1- SQUID_STATE_COMMIT([check_lib_works_state])
m4trace:configure.ac:1945: -1- m4_pattern_allow([^HAVE_LIBCAP$])
m4trace:configure.ac:1945: -1- AM_CONDITIONAL([ENABLE_LIBCAP], [test "x$with_cap" != "xno"])
m4trace:configure.ac:1945: -1- m4_pattern_allow([^ENABLE_LIBCAP_TRUE$])
m4trace:configure.ac:1945: -1- m4_pattern_allow([^ENABLE_LIBCAP_FALSE$])
m4trace:configure.ac:1945: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBCAP_TRUE])
m4trace:configure.ac:1945: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBCAP_FALSE])
m4trace:configure.ac:1945: -1- m4_pattern_allow([^LIBCAP_LIBS$])
m4trace:configure.ac:1963: -1- SQUID_CHECK_UNIX_SOCKET
m4trace:configure.ac:1964: -1- SQUID_DEFINE_BOOL([HAVE_UNIXSOCKET], [$squid_cv_unixsocket], [System supports unix sockets])
m4trace:configure.ac:1964: -1- m4_pattern_allow([^HAVE_UNIXSOCKET$])
m4trace:configure.ac:1966: -1- m4_pattern_allow([^HAVE_LIBGNUMALLOC$])
m4trace:configure.ac:1967: -1- m4_pattern_allow([^HAVE_LIBMALLOC$])
m4trace:configure.ac:2011: -1- SQUID_CHECK_DEFAULT_FD_SETSIZE
m4trace:configure.ac:2011: -1- m4_pattern_allow([^DEFAULT_FD_SETSIZE$])
m4trace:configure.ac:2012: -1- SQUID_CHECK_MAXFD
m4trace:configure.ac:2012: -1- m4_pattern_allow([^HAVE_GETRLIMIT$])
m4trace:configure.ac:2012: -1- m4_pattern_allow([^HAVE_SETRLIMIT$])
m4trace:configure.ac:2012: -1- SQUID_STATE_SAVE([maxfd])
m4trace:configure.ac:2012: -1- SQUID_STATE_ROLLBACK([maxfd])
m4trace:configure.ac:2012: -1- SQUID_STATE_COMMIT([maxfd])
m4trace:configure.ac:2012: -1- m4_pattern_allow([^SQUID_MAXFD$])
m4trace:configure.ac:2017: -1- SQUID_YESNO([$enableval], [--enable-ipv6])
m4trace:configure.ac:2022: -1- SQUID_DEFINE_BOOL([USE_IPV6], [$enable_ipv6], [Enable support for IPv6 ])
m4trace:configure.ac:2022: -1- m4_pattern_allow([^USE_IPV6$])
m4trace:configure.ac:2024: -1- SQUID_CHECK_SIN6_LEN_IN_SAI
m4trace:configure.ac:2024: -1- SQUID_DEFINE_BOOL([HAVE_SIN6_LEN_IN_SAI], [$ac_cv_have_sin6_len_in_struct_sai], [Defined if struct sockaddr_in6 has sin6_len])
m4trace:configure.ac:2024: -1- m4_pattern_allow([^HAVE_SIN6_LEN_IN_SAI$])
m4trace:configure.ac:2025: -1- SQUID_CHECK_SS_LEN_IN_SOCKADDR_STORAGE
m4trace:configure.ac:2025: -1- SQUID_DEFINE_BOOL([HAVE_SS_LEN_IN_SS], [$ac_cv_have_ss_len_in_struct_ss], [Define if sockaddr_storage has field ss_len])
m4trace:configure.ac:2025: -1- m4_pattern_allow([^HAVE_SS_LEN_IN_SS$])
m4trace:configure.ac:2026: -1- SQUID_CHECK_SIN_LEN_IN_SOCKADDR_IN
m4trace:configure.ac:2026: -1- SQUID_DEFINE_BOOL([HAVE_SIN_LEN_IN_SAI], [$ac_cv_have_sin_len_in_struct_sai], [Define if sockaddr_in has field sin_len])
m4trace:configure.ac:2026: -1- m4_pattern_allow([^HAVE_SIN_LEN_IN_SAI$])
m4trace:configure.ac:2030: -1- m4_pattern_allow([^HAVE_LIBINTL$])
m4trace:configure.ac:2030: -1- SQUID_CC_REQUIRE_ARGUMENT([ac_cv_require_rtti], [-rtti], [[
#include <assert.h>
#ifndef NULL
#define NULL 0
#endif
class Foo{
public:virtual ~Foo(){}
};
class Bar:public Foo{
public:Bar():Foo(){}
};
      ]], [[
Foo * myFoo=new Bar();
Bar * myBar=dynamic_cast<Bar *>(myFoo);
assert(myBar != NULL);
      ]])
m4trace:configure.ac:2030: -1- SQUID_STATE_SAVE([ARGREQ])
m4trace:configure.ac:2030: -1- SQUID_STATE_ROLLBACK([ARGREQ])
m4trace:configure.ac:2030: -1- SQUID_STATE_COMMIT([ARGREQ])
m4trace:configure.ac:2030: -1- SQUID_CC_REQUIRE_ARGUMENT([ac_cv_require_qcpluscmt], [-qcpluscmt], [[]], [[//c++ cmt]])
m4trace:configure.ac:2030: -1- SQUID_STATE_SAVE([ARGREQ])
m4trace:configure.ac:2030: -1- SQUID_STATE_ROLLBACK([ARGREQ])
m4trace:configure.ac:2030: -1- SQUID_STATE_COMMIT([ARGREQ])
m4trace:configure.ac:2030: -1- m4_pattern_allow([^GETTIMEOFDAY_NO_TZP$])
m4trace:configure.ac:2030: -1- m4_pattern_allow([^GETTIMEOFDAY_NO_TZP$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_BACKTRACE_SYMBOLS_FD$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_BCOPY$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_EUI64_ATON$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_FCHMOD$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_GETDTABLESIZE$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_GETPASS$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_GETRUSAGE$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_GETSPNAM$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_GETTIMEOFDAY$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_GLOB$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_MALLOCBLKSIZE$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_MALLOPT$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_MEMCPY$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_MEMMOVE$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_MEMRCHR$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_MEMSET$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_MKSTEMP$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_MKTIME$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_MSTATS$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_POLL$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_PRCTL$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_PROCCTL$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_SETSCHEDPARAM$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_SETSCOPE$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_PTHREAD_SETSCHEDPARAM$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_PTHREAD_SIGMASK$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_PUTENV$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_REGCOMP$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_REGEXEC$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_REGFREE$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_RES_INIT$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE___RES_INIT$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_RINT$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SCHED_GETAFFINITY$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SCHED_SETAFFINITY$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SELECT$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SETEUID$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SETGROUPS$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SETPFLAGS$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SETPGRP$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SETSID$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SETRESUID$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SIGACTION$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SNPRINTF$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SOCKETPAIR$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SYSCONF$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_SYSLOG$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_TIMEGM$])
m4trace:configure.ac:2119: -1- m4_pattern_allow([^HAVE_VSNPRINTF$])
m4trace:configure.ac:2172: -1- m4_pattern_allow([^HAVE_INITGROUPS$])
m4trace:configure.ac:2172: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:2172: -1- m4_pattern_allow([^HAVE_PSIGNAL$])
m4trace:configure.ac:2172: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:2172: -1- m4_pattern_allow([^HAVE_STRERROR$])
m4trace:configure.ac:2172: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:2172: -1- m4_pattern_allow([^HAVE_STRTOLL$])
m4trace:configure.ac:2172: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:2172: -1- m4_pattern_allow([^HAVE_TEMPNAM$])
m4trace:configure.ac:2172: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:2205: -1- AM_CONDITIONAL([ENABLE_POLL], [test "x$squid_opt_io_loop_engine" = "xpoll"])
m4trace:configure.ac:2205: -1- m4_pattern_allow([^ENABLE_POLL_TRUE$])
m4trace:configure.ac:2205: -1- m4_pattern_allow([^ENABLE_POLL_FALSE$])
m4trace:configure.ac:2205: -1- _AM_SUBST_NOTMAKE([ENABLE_POLL_TRUE])
m4trace:configure.ac:2205: -1- _AM_SUBST_NOTMAKE([ENABLE_POLL_FALSE])
m4trace:configure.ac:2206: -1- AM_CONDITIONAL([ENABLE_EPOLL], [test "x$squid_opt_io_loop_engine" = "xepoll"])
m4trace:configure.ac:2206: -1- m4_pattern_allow([^ENABLE_EPOLL_TRUE$])
m4trace:configure.ac:2206: -1- m4_pattern_allow([^ENABLE_EPOLL_FALSE$])
m4trace:configure.ac:2206: -1- _AM_SUBST_NOTMAKE([ENABLE_EPOLL_TRUE])
m4trace:configure.ac:2206: -1- _AM_SUBST_NOTMAKE([ENABLE_EPOLL_FALSE])
m4trace:configure.ac:2207: -1- AM_CONDITIONAL([ENABLE_SELECT], [test "x$squid_opt_io_loop_engine" = "xselect"])
m4trace:configure.ac:2207: -1- m4_pattern_allow([^ENABLE_SELECT_TRUE$])
m4trace:configure.ac:2207: -1- m4_pattern_allow([^ENABLE_SELECT_FALSE$])
m4trace:configure.ac:2207: -1- _AM_SUBST_NOTMAKE([ENABLE_SELECT_TRUE])
m4trace:configure.ac:2207: -1- _AM_SUBST_NOTMAKE([ENABLE_SELECT_FALSE])
m4trace:configure.ac:2208: -1- AM_CONDITIONAL([ENABLE_KQUEUE], [test "x$squid_opt_io_loop_engine" = "xkqueue"])
m4trace:configure.ac:2208: -1- m4_pattern_allow([^ENABLE_KQUEUE_TRUE$])
m4trace:configure.ac:2208: -1- m4_pattern_allow([^ENABLE_KQUEUE_FALSE$])
m4trace:configure.ac:2208: -1- _AM_SUBST_NOTMAKE([ENABLE_KQUEUE_TRUE])
m4trace:configure.ac:2208: -1- _AM_SUBST_NOTMAKE([ENABLE_KQUEUE_FALSE])
m4trace:configure.ac:2209: -1- AM_CONDITIONAL([ENABLE_DEVPOLL], [test "x$squid_opt_io_loop_engine" = "xdevpoll"])
m4trace:configure.ac:2209: -1- m4_pattern_allow([^ENABLE_DEVPOLL_TRUE$])
m4trace:configure.ac:2209: -1- m4_pattern_allow([^ENABLE_DEVPOLL_FALSE$])
m4trace:configure.ac:2209: -1- _AM_SUBST_NOTMAKE([ENABLE_DEVPOLL_TRUE])
m4trace:configure.ac:2209: -1- _AM_SUBST_NOTMAKE([ENABLE_DEVPOLL_FALSE])
m4trace:configure.ac:2211: -1- m4_pattern_allow([^USE_EPOLL$])
m4trace:configure.ac:2211: -1- m4_pattern_allow([^USE_DEVPOLL$])
m4trace:configure.ac:2211: -1- m4_pattern_allow([^USE_POLL$])
m4trace:configure.ac:2211: -1- m4_pattern_allow([^USE_KQUEUE$])
m4trace:configure.ac:2211: -1- m4_pattern_allow([^USE_SELECT$])
m4trace:configure.ac:2219: -1- m4_pattern_allow([^HAVE_CPU_AFFINITY$])
m4trace:configure.ac:2223: -1- m4_pattern_allow([^HAVE_MSWSOCK_H$])
m4trace:configure.ac:2225: -1- m4_pattern_allow([^HAVE_CONSTANT_CMSG_SPACE$])
m4trace:configure.ac:2241: -2- m4_pattern_allow([^HAVE_CMSGHDR$])
m4trace:configure.ac:2253: -2- m4_pattern_allow([^HAVE_IOVEC$])
m4trace:configure.ac:2265: -2- m4_pattern_allow([^HAVE_MSGHDR$])
m4trace:configure.ac:2277: -2- m4_pattern_allow([^HAVE_SOCKADDR_UN$])
m4trace:configure.ac:2291: -1- SQUID_CHECK_BROKEN_SOLARIS_IPFILTER
m4trace:configure.ac:2291: -1- m4_pattern_allow([^USE_SOLARIS_IPFILTER_MINOR_T_HACK$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_NETINET_IN_H$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_SYS_IOCCOM_H$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_IP_COMPAT_H$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_IP_FIL_COMPAT_H$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_IP_FIL_H$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_IP_NAT_H$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_NETINET_IP_COMPAT_H$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_NETINET_IP_FIL_COMPAT_H$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_NETINET_IP_FIL_H$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_NETINET_IP_NAT_H$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_STRUCT_NATLOOKUP_NL_INIPADDR_IN6$])
m4trace:configure.ac:2291: -1- m4_pattern_allow([^HAVE_STRUCT_NATLOOKUP_NL_REALIPADDR_IN6$])
m4trace:configure.ac:2323: -1- SQUID_DEFINE_BOOL([IPF_TRANSPARENT], [$enable_ipf_transparent], [Enable support for IPF-style transparent proxying])
m4trace:configure.ac:2323: -1- m4_pattern_allow([^IPF_TRANSPARENT$])
m4trace:configure.ac:2338: -1- SQUID_DEFINE_BOOL([PF_TRANSPARENT], [${enable_pf_transparent:=no}], [Enable support for PF-style transparent proxying])
m4trace:configure.ac:2338: -1- m4_pattern_allow([^PF_TRANSPARENT$])
m4trace:configure.ac:2340: -1- SQUID_DEFINE_BOOL([USE_NAT_DEVPF], [${with_nat_devpf:=no}], [Enable support for /dev/pf NAT lookups])
m4trace:configure.ac:2340: -1- m4_pattern_allow([^USE_NAT_DEVPF$])
m4trace:configure.ac:2354: -1- SQUID_DEFINE_BOOL([LINUX_NETFILTER], [$enable_linux_netfilter], [Enable support for Transparent Proxy on Linux via Netfilter])
m4trace:configure.ac:2354: -1- m4_pattern_allow([^LINUX_NETFILTER$])
m4trace:configure.ac:2373: -1- SQUID_YESNO([$enableval], [--enable-zph-qos])
m4trace:configure.ac:2377: -1- SQUID_DEFINE_BOOL([USE_QOS_TOS], [${enable_zph_qos:=yes}], [Enable Zero Penalty Hit QOS. When set, Squid will alter the
           TOS field of HIT responses to help policing network traffic])
m4trace:configure.ac:2377: -1- m4_pattern_allow([^USE_QOS_TOS$])
m4trace:configure.ac:2381: -1- SQUID_DEFINE_BOOL([USE_LIBNETFILTERCONNTRACK], [${with_netfilter_conntrack:=no}], [Enable support for QOS netfilter mark preservation])
m4trace:configure.ac:2381: -1- m4_pattern_allow([^USE_LIBNETFILTERCONNTRACK$])
m4trace:configure.ac:2388: -1- m4_pattern_allow([^REGEXLIB$])
m4trace:configure.ac:2390: -1- SQUID_DETECT_UDP_SND_BUFSIZE
m4trace:configure.ac:2390: -1- m4_pattern_allow([^SQUID_DETECT_UDP_SO_SNDBUF$])
m4trace:configure.ac:2391: -1- SQUID_DETECT_UDP_RECV_BUFSIZE
m4trace:configure.ac:2391: -1- m4_pattern_allow([^SQUID_DETECT_UDP_SO_RCVBUF$])
m4trace:configure.ac:2392: -1- SQUID_DETECT_TCP_SND_BUFSIZE
m4trace:configure.ac:2392: -1- m4_pattern_allow([^SQUID_TCP_SO_SNDBUF$])
m4trace:configure.ac:2393: -1- SQUID_DETECT_TCP_RECV_BUFSIZE
m4trace:configure.ac:2393: -1- m4_pattern_allow([^SQUID_TCP_SO_RCVBUF$])
m4trace:configure.ac:2395: -1- SQUID_CHECK_NEED_SYS_ERRLIST
m4trace:configure.ac:2395: -1- SQUID_DEFINE_BOOL([NEED_SYS_ERRLIST], [$ac_cv_needs_sys_errlist], [If we need to declare sys_errlist as extern])
m4trace:configure.ac:2395: -1- m4_pattern_allow([^NEED_SYS_ERRLIST$])
m4trace:configure.ac:2396: -1- SQUID_CHECK_MAXPATHLEN
m4trace:configure.ac:2396: -1- m4_pattern_allow([^MAXPATHLEN$])
m4trace:configure.ac:2398: -1- SQUID_CHECK_LIBRESOLV_DNS_TTL_HACK
m4trace:configure.ac:2398: -1- SQUID_DEFINE_BOOL([LIBRESOLV_DNS_TTL_HACK], [$ac_cv_libresolv_dns_ttl_hack], [libresolv.a has been hacked to export _dns_ttl_])
m4trace:configure.ac:2398: -1- m4_pattern_allow([^LIBRESOLV_DNS_TTL_HACK$])
m4trace:configure.ac:2399: -1- SQUID_CHECK_RESOLVER_FIELDS
m4trace:configure.ac:2399: -1- m4_pattern_allow([^_SQUID_RES_NSADDR6_LARRAY$])
m4trace:configure.ac:2399: -1- m4_pattern_allow([^_SQUID_RES_NSADDR6_COUNT$])
m4trace:configure.ac:2399: -1- m4_pattern_allow([^_SQUID_RES_NSADDR6_LPTR$])
m4trace:configure.ac:2399: -1- m4_pattern_allow([^_SQUID_RES_NSADDR6_COUNT$])
m4trace:configure.ac:2399: -1- m4_pattern_allow([^_SQUID_RES_NSADDR_LIST$])
m4trace:configure.ac:2399: -1- m4_pattern_allow([^_SQUID_RES_NSADDR_COUNT$])
m4trace:configure.ac:2399: -1- m4_pattern_allow([^_SQUID_RES_NSADDR_LIST$])
m4trace:configure.ac:2399: -1- m4_pattern_allow([^_SQUID_RES_NSADDR_COUNT$])
m4trace:configure.ac:2401: -1- m4_pattern_allow([^HAVE_SYS_STATVFS_H$])
m4trace:configure.ac:2402: -1- SQUID_CHECK_WORKING_STATVFS
m4trace:configure.ac:2402: -1- SQUID_DEFINE_BOOL([HAVE_STATVFS], [$ac_cv_func_statvfs], [set to 1 if our system has statvfs(), and if it actually works])
m4trace:configure.ac:2402: -1- m4_pattern_allow([^HAVE_STATVFS$])
m4trace:configure.ac:2403: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:2403: -1- m4_pattern_allow([^HAVE_SYS_MOUNT_H$])
m4trace:configure.ac:2403: -1- m4_pattern_allow([^HAVE_SYS_VFS_H$])
m4trace:configure.ac:2403: -1- m4_pattern_allow([^HAVE_SYS_STATFS_H$])
m4trace:configure.ac:2403: -1- m4_pattern_allow([^HAVE_STATFS$])
m4trace:configure.ac:2403: -1- SQUID_CHECK_F_FRSIZE_IN_STATFS
m4trace:configure.ac:2403: -1- SQUID_DEFINE_BOOL([HAVE_F_FRSIZE_IN_STATFS], [$ac_cv_have_f_frsize_in_struct_statfs], [Define if struct statfs has field f_frsize (Linux 2.6 or later)])
m4trace:configure.ac:2403: -1- m4_pattern_allow([^HAVE_F_FRSIZE_IN_STATFS$])
m4trace:configure.ac:2410: -1- SQUID_YESNO([$enableval], [--enable-translation])
m4trace:configure.ac:2415: -1- AX_WITH_PROG([PO2HTML], [po2html])
m4trace:configure.ac:2415: -1- m4_pattern_allow([^PO2HTML$])
m4trace:configure.ac:2415: -1- m4_pattern_allow([^PO2HTML$])
m4trace:configure.ac:2415: -1- AX_WITH_PROG([PO2TEXT], [po2txt])
m4trace:configure.ac:2415: -1- m4_pattern_allow([^PO2TEXT$])
m4trace:configure.ac:2415: -1- m4_pattern_allow([^PO2TEXT$])
m4trace:configure.ac:2422: -1- m4_pattern_allow([^PO2HTML$])
m4trace:configure.ac:2423: -1- m4_pattern_allow([^PO2TEXT$])
m4trace:configure.ac:2424: -1- AM_CONDITIONAL([ENABLE_TRANSLATION], [test "x${enable_translation:=no}" = "xyes"])
m4trace:configure.ac:2424: -1- m4_pattern_allow([^ENABLE_TRANSLATION_TRUE$])
m4trace:configure.ac:2424: -1- m4_pattern_allow([^ENABLE_TRANSLATION_FALSE$])
m4trace:configure.ac:2424: -1- _AM_SUBST_NOTMAKE([ENABLE_TRANSLATION_TRUE])
m4trace:configure.ac:2424: -1- _AM_SUBST_NOTMAKE([ENABLE_TRANSLATION_FALSE])
m4trace:configure.ac:2428: -1- SQUID_YESNO([$enableval], [--enable-auto-locale])
m4trace:configure.ac:2435: -1- SQUID_DEFINE_BOOL([USE_ERR_LOCALES], [$enable_auto_locale], [Use multi-language support on error pages])
m4trace:configure.ac:2435: -1- m4_pattern_allow([^USE_ERR_LOCALES$])
m4trace:configure.ac:2445: -1- m4_pattern_allow([^XTRA_OBJS$])
m4trace:configure.ac:2453: -1- m4_pattern_allow([^XTRA_LIBS$])
m4trace:configure.ac:2455: -1- m4_pattern_allow([^SQUID_CFLAGS$])
m4trace:configure.ac:2456: -1- m4_pattern_allow([^SQUID_CXXFLAGS$])
m4trace:configure.ac:2459: -1- m4_pattern_allow([^BUILDCXXFLAGS$])
m4trace:configure.ac:2469: -1- m4_pattern_allow([^BUILDCXXFLAGS$])
m4trace:configure.ac:2606: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:2606: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:2606: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:2606: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:2606: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:2606: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:2606: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:2606: -1- m4_pattern_allow([^LT_CONFIG_H$])
m4trace:configure.ac:2606: -1- m4_pattern_allow([^ltdl_LIBOBJS$])
m4trace:configure.ac:2606: -1- m4_pattern_allow([^ltdl_LTLIBOBJS$])
m4trace:configure.ac:2606: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:2606: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:2606: -1- AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles])
m4trace:configure.ac:2606: -1- _LT_PROG_LTMAIN
